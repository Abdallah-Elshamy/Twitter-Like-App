[{"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/index.tsx":"1","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/reportWebVitals.ts":"2","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/App.tsx":"3","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts":"4","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/routing.tsx":"5","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx":"6","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_isAuth.ts":"7","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/login_query.ts":"8","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Home.tsx":"9","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/cache.ts":"10","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/Explore.tsx":"11","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx":"12","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/Profile.tsx":"13","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/logo/logo.tsx":"14","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx":"15","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx":"16","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx":"17","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/formInput/formInput.tsx":"18","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/SerachResult.tsx":"19","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createUser.ts":"20","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx":"21","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx":"22","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx":"23","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx":"24","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx":"25","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx":"26","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts":"27","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts":"28","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts":"29","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx":"30","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/decode.ts":"31","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Loading.tsx":"32","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx":"33","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx":"34","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx":"35","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx":"36","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx":"37","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx":"38","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx":"39","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx":"40","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx":"41","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createTweet.ts":"42","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts":"43","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/timestamp.ts":"44","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx":"45","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx":"46","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx":"47","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx":"48","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx":"49","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts":"50","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/EditUser.ts":"51","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx":"52","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx":"53","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx":"54","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Follow.ts":"55","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx":"56","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx":"57","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx":"58","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditBgImage.ts":"59","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/DeleteMedia.ts":"60","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_img.tsx":"61","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/apolloClient.ts":"62","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/writeCache.ts":"63","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_Info.tsx":"64","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/FoF/FoF.tsx":"65"},{"size":294,"mtime":1619594211320,"results":"66","hashOfConfig":"67"},{"size":425,"mtime":1612312753926,"results":"68","hashOfConfig":"67"},{"size":723,"mtime":1619711637872,"results":"69","hashOfConfig":"67"},{"size":348,"mtime":1619594210148,"results":"70","hashOfConfig":"67"},{"size":2764,"mtime":1619723737662,"results":"71","hashOfConfig":"67"},{"size":4526,"mtime":1619741088983,"results":"72","hashOfConfig":"67"},{"size":104,"mtime":1619594210120,"results":"73","hashOfConfig":"67"},{"size":221,"mtime":1619594210144,"results":"74","hashOfConfig":"67"},{"size":821,"mtime":1619594210152,"results":"75","hashOfConfig":"67"},{"size":4494,"mtime":1619711637944,"results":"76","hashOfConfig":"67"},{"size":1182,"mtime":1619594211548,"results":"77","hashOfConfig":"67"},{"size":124,"mtime":1619594210288,"results":"78","hashOfConfig":"67"},{"size":661,"mtime":1619594210328,"results":"79","hashOfConfig":"67"},{"size":262,"mtime":1619741089079,"results":"80","hashOfConfig":"67"},{"size":1930,"mtime":1619594210172,"results":"81","hashOfConfig":"67"},{"size":1191,"mtime":1619741089111,"results":"82","hashOfConfig":"67"},{"size":13543,"mtime":1619741089007,"results":"83","hashOfConfig":"67"},{"size":1344,"mtime":1619594210152,"results":"84","hashOfConfig":"67"},{"size":2630,"mtime":1619711638072,"results":"85","hashOfConfig":"67"},{"size":233,"mtime":1619594210120,"results":"86","hashOfConfig":"67"},{"size":1538,"mtime":1619594210288,"results":"87","hashOfConfig":"67"},{"size":2172,"mtime":1619594210288,"results":"88","hashOfConfig":"67"},{"size":2036,"mtime":1619594210848,"results":"89","hashOfConfig":"67"},{"size":1019,"mtime":1619594210208,"results":"90","hashOfConfig":"67"},{"size":3534,"mtime":1619743531613,"results":"91","hashOfConfig":"67"},{"size":555,"mtime":1619594210288,"results":"92","hashOfConfig":"67"},{"size":131,"mtime":1619594210120,"results":"93","hashOfConfig":"67"},{"size":288,"mtime":1619594210120,"results":"94","hashOfConfig":"67"},{"size":212,"mtime":1619594210100,"results":"95","hashOfConfig":"67"},{"size":1045,"mtime":1619711638112,"results":"96","hashOfConfig":"67"},{"size":358,"mtime":1619594210080,"results":"97","hashOfConfig":"67"},{"size":370,"mtime":1619705783601,"results":"98","hashOfConfig":"67"},{"size":2667,"mtime":1619594210748,"results":"99","hashOfConfig":"67"},{"size":646,"mtime":1619594210064,"results":"100","hashOfConfig":"67"},{"size":970,"mtime":1619594210276,"results":"101","hashOfConfig":"67"},{"size":4114,"mtime":1619711638236,"results":"102","hashOfConfig":"67"},{"size":2486,"mtime":1619728686042,"results":"103","hashOfConfig":"67"},{"size":468,"mtime":1619731323698,"results":"104","hashOfConfig":"67"},{"size":4334,"mtime":1619741941680,"results":"105","hashOfConfig":"67"},{"size":1023,"mtime":1619594211172,"results":"106","hashOfConfig":"67"},{"size":545,"mtime":1619594210068,"results":"107","hashOfConfig":"67"},{"size":438,"mtime":1619711637976,"results":"108","hashOfConfig":"67"},{"size":108,"mtime":1619594210100,"results":"109","hashOfConfig":"67"},{"size":524,"mtime":1619594210148,"results":"110","hashOfConfig":"67"},{"size":1765,"mtime":1619730534849,"results":"111","hashOfConfig":"67"},{"size":400,"mtime":1619729809349,"results":"112","hashOfConfig":"67"},{"size":443,"mtime":1619729786725,"results":"113","hashOfConfig":"67"},{"size":10868,"mtime":1619709242411,"results":"114","hashOfConfig":"67"},{"size":3957,"mtime":1619730644725,"results":"115","hashOfConfig":"67"},{"size":145,"mtime":1619594210120,"results":"116","hashOfConfig":"67"},{"size":230,"mtime":1619594210080,"results":"117","hashOfConfig":"67"},{"size":1459,"mtime":1619738849010,"results":"118","hashOfConfig":"67"},{"size":1057,"mtime":1619594210328,"results":"119","hashOfConfig":"67"},{"size":1649,"mtime":1619594211176,"results":"120","hashOfConfig":"67"},{"size":208,"mtime":1619594210100,"results":"121","hashOfConfig":"67"},{"size":323,"mtime":1619594210032,"results":"122","hashOfConfig":"67"},{"size":717,"mtime":1619711638064,"results":"123","hashOfConfig":"67"},{"size":2058,"mtime":1619711638196,"results":"124","hashOfConfig":"67"},{"size":140,"mtime":1619594210104,"results":"125","hashOfConfig":"67"},{"size":140,"mtime":1619600216742,"results":"126","hashOfConfig":"67"},{"size":567,"mtime":1619731763222,"results":"127","hashOfConfig":"67"},{"size":534,"mtime":1619711637920,"results":"128","hashOfConfig":"67"},{"size":3051,"mtime":1619711638000,"results":"129","hashOfConfig":"67"},{"size":1602,"mtime":1619730562989,"results":"130","hashOfConfig":"67"},{"size":355,"mtime":1619733480537,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"m46pjl",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"134"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"134"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"134"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"134"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"134"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"134"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"134"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"134"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"134"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"134"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"134"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/index.tsx",[],["276","277"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/reportWebVitals.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/App.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/routing.tsx",["278","279"],"import {\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { NotFoundPage } from '../components/notFound/notFound';\nimport { LandingPage } from '../components/Register/landingPage/landingPage';\nimport { SignUpForm } from '../components/Register/signup_form/signup';\nimport Explore from './Explore';\nimport Profile from '../components/profile/Profile';\nimport Home from \"../components/Home\";\nimport { useQuery } from '@apollo/client';\nimport { GET_ISAUTH } from '../common/queries/Get_isAuth';\nimport React from \"react\";\nimport { Login } from \"../components/Register/login_form/login\";\n\nexport const Routing = () => {\n\n  return (\n    <div>\n\n      <Switch>\n        <PublicRoute path=\"/signup\">\n          <SignUpForm />\n        </PublicRoute>\n\n        <PublicRoute path=\"/login\">\n          <Login />\n        </PublicRoute>\n\n        <PrivateRoute path=\"/setting\">\n          <Setting />\n        </PrivateRoute>\n\n        <Route path=\"/error\">\n          <NotFoundPage />\n        </Route>\n\n        <PublicRoute path=\"/forget_password\">\n          <ForgetPassword />\n        </PublicRoute>\n\n\n        <Route path=\"/explore\">\n          <Explore />\n        </Route>\n\n        <PrivateRoute path=\"/messages\">\n          <Messages />\n        </PrivateRoute>\n\n\n        <PublicRoute path=\"/LandingPage\">\n          <LandingPage />\n        </PublicRoute>\n\n\n        <PrivateRoute path=\"/Notifications\">\n          <Notifications />\n        </PrivateRoute>\n\n\n        <PrivateRoute path=\"/\" exact >\n          <Home />\n        </PrivateRoute>\n\n\n        <PrivateRoute path=\"/profile\">\n          <Profile />\n        </PrivateRoute>\n\n        <Route path='/:id'>\n          <Profile />\n        </Route>\n\n      </Switch>\n\n    </div>\n  )\n};\n\nconst PrivateRoute = ({ children, ...rest }: any) => {\n  let auth = localStorage.getItem('token') ? true : false\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n\n\nconst PublicRoute = ({ children, ...rest }: any) => {\n  let auth = localStorage.getItem('token') ? false : true\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction Setting() {\n  return <h2>setting</h2>;\n}\n\n\n\nfunction Messages() {\n  return <h2>Messages</h2>;\n}\nfunction Notifications() {\n  return <h2>Notifications</h2>;\n}\n\nfunction ForgetPassword() {\n  return <h2>forget_password</h2>;\n}\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_isAuth.ts",[],["280","281"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/login_query.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Home.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/cache.ts",["282","283","284","285","286","287"],"import { InMemoryCache, makeVar, ReactiveVar } from \"@apollo/client\";\nimport { searchBarValue } from \"./TypesAndInterfaces\";\n\nconst createPaginationAndCombine = (keyArgs: any[]) => ({\n    merge(existing: any, incoming: any) {\n        const merged = existing ? existing.slice(0) : [];\n\n        let breakFlag = 0;\n        let i = 0;\n        let j = 0;\n        for (i = 0; i < merged.length; i++) {\n            if (breakFlag) break;\n            for (j = 0; j < incoming.length; j++) {\n                if (merged[i].__ref == incoming[j].__ref) {\n                    breakFlag = 1;\n                    i -= 2;\n                    break;\n                }\n            }\n            j = 0;\n        }\n        if (i == merged.length) i--;\n        for (; j < incoming.length; j++) {\n            merged[++i] = incoming[j];\n        }\n        return merged.slice(0, i + 1);\n    },\n    read(existing: any) {\n        return existing;\n    },\n    keyArgs,\n});\nconst createPaginationAndCombineTweetsElements = (keyArgs: any[]) => ({\n    merge(existing: any, incoming: any) {\n        const merged = existing\n            ? { totalCount: existing.totalCount, tweets: [...existing.tweets] }\n            : { totalCount: 0, tweets: [] };\n        merged.totalCount = incoming.totalCount;\n        let breakFlag = 0;\n        let i = 0;\n        let j = 0;\n        for (i = 0; i < merged.tweets.length; i++) {\n            if (breakFlag) break;\n            for (j = 0; j < incoming.tweets.length; j++) {\n                if (merged.tweets[i].__ref == incoming.tweets[j].__ref) {\n                    breakFlag = 1;\n                    i -= 2;\n                    break;\n                }\n            }\n            j = 0;\n        }\n        if (i == merged.tweets.length) i--;\n        for (; j < incoming.tweets.length; j++) {\n            merged.tweets[++i] = incoming.tweets[j];\n        }\n        merged.tweets.slice(0, i + 1);\n        return merged;\n    },\n    read(existing: any) {\n        return existing;\n    },\n    keyArgs,\n});\n\nconst createPaginationAndCombineUsersElements = (keyArgs: any[]) => ({\n  merge(existing: any, incoming: any) {\n      const merged = existing\n          ? { users: [...existing.users] }\n          : { users: [] };\n      let breakFlag = 0;\n      let i = 0;\n      let j = 0;\n      for (i = 0; i < merged.users.length; i++) {\n          if (breakFlag) break;\n          for (j = 0; j < incoming.users.length; j++) {\n              if (merged.users[i].__ref == incoming.users[j].__ref) {\n                  breakFlag = 1;\n                  i -= 2;\n                  break;\n              }\n          }\n          j = 0;\n      }\n      if (i == merged.users.length) i--;\n      for (; j < incoming.users.length; j++) {\n          merged.users[++i] = incoming.users[j];\n      }\n      merged.users.slice(0, i + 1);\n      return merged;\n  },\n  read(existing: any) {\n      return existing;\n  },\n  keyArgs,\n});\n\nexport const cache: InMemoryCache = new InMemoryCache({\n    typePolicies: {\n        Query: {\n            fields: {\n                searchBarValue: {\n                    read() {\n                        return searchBarVar();\n                    },\n                },\n                EditProfileImage: {\n                    read() {\n                        return EditProfileImageVal();\n                    },\n                },\n                EditProfileBg: {\n                    read() {\n                        return EditProfileBgVal();\n                    },\n                },\n\n                SFW: {\n                    read() {\n                        return SFW();\n                    },\n                },\n                getFeed: createPaginationAndCombine([\"isSFW\"]),\n                tweets: createPaginationAndCombineTweetsElements([\n                    \"userId\",\n                    \"filter\",\n                    \"isSFW\",\n                ]),\n                users: createPaginationAndCombineUsersElements([\"search\"])\n            },\n        },\n    },\n});\n\nexport const searchBarVar: ReactiveVar<searchBarValue> = makeVar<searchBarValue>(\n    { value: \"\" }\n);\n\nexport const EditProfileImageVal: ReactiveVar<{\n    Image: object | false;\n    ImageURL: string | false;\n}> = makeVar<any>({\n    Image: false,\n    ImageURL: false,\n});\nexport const EditProfileBgVal: ReactiveVar<{\n    BgImage: object | false;\n    BgImageURL: string | false;\n}> = makeVar<any>({\n    BgImage: false,\n    BgImageURL: false,\n});\n\nexport const SFW: ReactiveVar<{ value: boolean }> = makeVar<any>({\n    value: true,\n});\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/Explore.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/Profile.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/logo/logo.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/formInput/formInput.tsx",[],["288","289"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/SerachResult.tsx",["290","291"],"\nimport { useQuery } from '@apollo/client';\nimport React, { Fragment, useState } from 'react';\nimport { Get_SearchBar_Value } from '../common/queries/Get_SearchBar_Value';\nimport { Get_Search_Result } from '../common/queries/Get_Search_Result';\nimport { PersonEntity } from '../common/TypesAndInterfaces';\nimport ListOfUsers from './TrendsBar/ListOfUsers/listofusers';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport PersonItem from \"./TrendsBar/ListOfUsers/PersonItem/PersonItem\";\nimport Loading from '../UI/Loading';\n\nconst SearchResult: React.FC = () => {\n\n  //static behaviour\n  /*\n    const location = useLocation()\n    const searchQ = location.search.substr(6)\n  */\n\n  //dynamic behaviour\n  const search = useQuery(Get_SearchBar_Value)\n  const searchQ: string = search.data.searchBarValue.value\n\n  const [page, setPage] = useState<any>(1)\n  const { data, loading, error, fetchMore} = useQuery(Get_Search_Result, { variables: { name: searchQ } })\n  if (searchQ === \"\") {\n    return <h1 className=\"text-lg text-center pt-4\">Try searching for people, names, usernames\n</h1>\n  }\n  if(!loading && data && data?.users?.users?.length === 10 && page === 1){\n    setPage(page + 1);\n    fetchMore({\n        variables: {\n            page: page + 1,\n            name: searchQ,\n        },\n    })\n}\n  if (loading) return <Loading />\n  if (error) return <h1 className=\"text-lg text-center pt-4 text-gray-500\">Something went wrong :( </h1>\n\n  const list: PersonEntity[] = data.users.users\n  if (list.length === 0)\n        return <h1 className=\"text-lg text-center pt-4\">No Results</h1>;\n  return (\n    <InfiniteScroll\n            dataLength={list?.length || 0}\n            next={() => {\n                setPage(page + 1);\n                return fetchMore({\n                    variables: {\n                        page: page + 1,\n                        name: searchQ,\n                    },\n                });\n            }}\n            hasMore={list?.length >= page * 10 || false}\n            loader={<Loading />}\n        >\n            {list.map((person) => {\n                return (\n                    <PersonItem\n                        key={person.username}\n                        id={person.id}\n                        name={person.name}\n                        username={person.username}\n                        followed={person.followed}\n                        imageURI={person.imageURI}\n                        isFollowing={person.isFollowing}\n                        bio={person.bio}\n                    />\n                );\n            })}\n        </InfiniteScroll>\n\n  )\n}\nexport default SearchResult;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createUser.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx",["292"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/decode.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Loading.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx",["293"],"import React, {useState, useEffect} from 'react';\nimport { Logout } from '../../Register/logout/logout';\nimport { ToolBox } from '../toolbox/toolbox';\nimport './flootProfile.css';\nimport { useQuery } from '@apollo/client';\nimport { parseJwt } from '../../../common/decode';\nimport { LoggedUser } from '../../../common/queries/Userqery';\nimport Loading from \"../../../UI/Loading\"\nimport  {Get_SFW}  from '../../../common/queries/GET_SFW';\nimport {SFW} from '../../../common/cache'\n\nexport function FlootProfile () {\n      var profile;\n      if (localStorage.getItem('token') !== null) {\n        profile = parseJwt(localStorage.getItem('token'))\n      }\n    \n    \n      const [sfw, setsfw] = useState(true)\n      const {error, loading ,data} = useQuery(LoggedUser, { variables: { id: profile.id } });\n\n      const handleSFW =()=>{\n        (sfw)? setsfw (false): setsfw (true)\n      }\n      useEffect(() => {\n        SFW({value:sfw})\n      }, [sfw])\n      const data2 = useQuery (Get_SFW).data \n\n      if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n      if (error) return <p>`Error! ${error.message}`</p>\n \n\n      const userYear:number = (data.user.birthDate).split(\"-\", 1)\n      const currentYear = new Date()\n      const age = currentYear.getFullYear() - userYear   ; \n      return (\n\n         \n        <div>\n           <ToolBox className=\"fixed bottom-0 rounded-full w-60 mt-4 mb-2\n           bg-white hover:bg-blue-100 focus:bg-blue-200 focus:outline-none focus:shadow-outline hover:text-gray-900 \n           focus:ring-2  focus:ring-offset-gray-100\" design={\n<div className=\"flex justify-between items-start p-3\">\n\n<div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n  \n </div>\n\n <div className=\"flex-grow pr-20\">\n   <h3 className=\" text-xm font-bold\">{(data.user.name).split(\" \", 1)}</h3>\n   <p className=\"\"><span className=\"text-xm \">@</span>{data.user.userName}</p>   \n </div>\n\n <i className=\" fas fa-ellipsis-h\"></i>\n</div>\n           }>\n\n          <ul className= \"px-4 mt-16\" >\n          <a href=\"/profile\" className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \n          hover:text-gray-900  hover:rounded-full rounded-full\" role=\"menuitem\">My Account</a>\n\n          {\n            (age > 18) &&\n            <button className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \n            hover:text-gray-900  hover:rounded-full rounded-full focus:outline-none\" role=\"menuitem\" \n            onClick={handleSFW}>{(sfw)?'Set NSFW':'Set SFW'}</button>\n          }\n          <Logout/>\n            </ul>\n\n  </ToolBox>\n  </div>\n              \n\n\n      );\n    }\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx",["294","295"],"import { ErrorMessage, Field, Form, Formik } from \"formik\"\nimport React, { useRef } from \"react\"\nimport * as Yup from \"yup\"\nimport { TweetButton } from '../sideBar/tweetButton/tweetButton'\nimport { Tweets } from '../../common/queries/TweetQuery'\nimport { FeedTweets } from '../../common/queries/Feedtweets'\nimport { Post_Tweet } from '../../common/queries/createTweet'\nimport { useMutation } from \"@apollo/client\"\nimport {updateTweetsCacheForCreateTweet} from \"../../common/utils/writeCache\"\nimport './tweet.css';\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\nimport { parseJwt } from '../../common/decode';\ninterface Post {\n  text: string\n}\nconst PostTweet = () => {\n  var profile: any;\n  if (localStorage.getItem('token') !== \"LOGOUT\") {\n    profile = parseJwt(localStorage.getItem('token'))\n  }\n  console.log(profile.id)\n  // const userData = useQuery (Get_Logged_user)\n  // const user:User = userData.data.logUser.user\n  // console.log (user.imageURL)\n\n  const inputRef: any = useRef()\n  // mutation\n  const [createTweet, { data }] = useMutation(Post_Tweet, {\n    update: updateTweetsCacheForCreateTweet\n  });\n  console.log(`this ${inputRef.current}`)\n\n  const initialValues: Post = {\n    text: \"\"\n  }\n  /********   dynamic hight control funtion   ***********/\n  function setInputHight(element: React.ChangeEvent<HTMLElement>) {\n    element.target.style.height = \"60px\"\n    element.target.style.height = (element.target.scrollHeight) + \"px\"\n    inputRef.current.style.height = (element.target.scrollHeight) + \"px\"\n    console.log(`in ${element.target.style.height}`)\n    console.log(`out ${inputRef.current.style.height}`)\n    console.log(`scroll ${element.target.scrollHeight}`)\n  }\n  const validationSchema = Yup.object({\n    text: Yup.string()\n      .required()\n      .min(1, \"Must be more than 1 character\")\n      .max(256, \"Must be less than 257 characters\")\n  })\n  return (\n    <div className=\"mb-3 p-3 w-full shadow bg-white flex\">\n      {/* this shoud be dynamic */}\n      <div className=\"tweet-icon \">\n        <img src={avatar} alt=\"avatar\" />\n      </div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={({ text }, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          console.log(text);\n          createTweet({\n            variables: { tweetInput: { text } },\n          });\n          console.log(`this ${data}`)\n          setSubmitting(false);\n          resetForm();\n        }}\n      >\n        <div className=\"w-full mx-4 flex flex-col\">\n          <Form >\n            <div ref={inputRef} className=\"w-full mb-2 tweet-text flex h-16\">\n              <Field\n\n                name=\"text\"\n                type=\"text\"\n                as=\"textarea\"\n                // onChange={setInputHight}\n                onKeyPress={setInputHight}\n                className=\"w-full placeholder-gray4 p-3 ml-2 \n              focus:outline-none resize-none overflow-hidden min-h-12\"\n                placeholder=\"What's happening...\" />\n            </div>\n            <hr className=\"my-2\" />\n            <div className=\"flex justify-between items-center\">\n              <button className=\"hover:bg-blue-100 rounded-full py-2 px-3 transition\">\n                <svg\n                  className=\"h-8 w-8 text-blue-400 \"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n              </button>\n              <ErrorMessage name=\"text\" render={msg => <div className=\"text-red-500\">{msg}</div>} />\n\n              <TweetButton name=\"Tweet\" type=\"submit\" className=\" rounded-full py-3 px-6\" />\n            </div>\n\n          </Form>\n        </div>\n      </Formik>\n    </div>\n  )\n}\n\nexport default PostTweet\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx",["296"],"import React, { Fragment } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useQuery } from \"@apollo/client\";\n// import Tweet from '../Tweet';\nimport Tweet from \"./Tweet\";\nimport { Tweets } from \"../../common/queries/TweetQuery\";\nimport { TweetData } from \"./Tweet\";\nimport { parseJwt } from \"../../common/decode\";\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\nimport Loading from \"../../UI/Loading\";\n\nexport interface TweetFilter {\n    filter: string;\n    page: number;\n    setPage: any;\n    id: string;\n}\n\nconst TweetList: React.FC<TweetFilter> = (props) => {\n\n    const { filter, page, setPage } = props;\n    const sfw = useQuery(Get_SFW).data;\n    const { loading, error, data, fetchMore } = useQuery(Tweets, {\n        variables: {\n            userId: props.id,\n            filter: filter,\n            isSFW: sfw.SFW.value,\n        },\n    });\n    if (!loading && data && data?.tweets?.tweets?.length === 10 && page === 1) {\n        setPage(page + 1);\n        fetchMore({\n            variables: {\n                userId: props.id,\n                isSFW: sfw.SFW.value,\n                page: page + 1,\n                filter: filter\n            },\n        })\n    }\n    if (loading) return <Fragment><br /> <br /> <Loading size={30} /></Fragment>;\n    if (error) return <p>`Error! ${error.message}`</p>;\n\n    return (\n        <InfiniteScroll\n            dataLength={data?.tweets?.tweets?.length || 0}\n            next={() => {\n                setPage(page + 1);\n                return fetchMore({\n                    variables: {\n                        userId: props.id,\n                        isSFW: sfw.SFW.value,\n                        page: page + 1,\n                        filter: filter\n                    },\n                });\n            }}\n            hasMore={data?.tweets?.tweets?.length >= page * 10 || false}\n            loader={<Loading />}\n        >\n            {data.tweets.tweets.map((tweet: TweetData) => {\n                return (\n                    <Tweet\n                        text={tweet.text}\n                        repliesCount={tweet.repliesCount}\n                        createdAt={tweet.createdAt}\n                        isLiked={tweet.isLiked}\n                        user={tweet.user}\n                        likesCount={tweet.likesCount}\n                        key={tweet.id}\n                    />\n                );\n            })}\n        </InfiniteScroll>\n    );\n};\n\nexport default TweetList;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createTweet.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/timestamp.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx",["297"],"import React from 'react';\n\nimport { PersonEntity } from '../../../../common/TypesAndInterfaces';\n\nimport './PersonItem.css'\nimport '../../../profile/profile.css'\nimport FollowButton from '../../../FollowButton/FollowButton';\nimport { parseJwt } from '../../../../common/decode';\nimport { useHistory } from 'react-router';\n\n\nconst TrendItem: React.FC<PersonEntity> = ({ id, bio, isFollowing, name, username, followed = false, imageURI, numberOfFollowers }) => {\n  const history = useHistory();\n\n  const goToProfile = () => {\n    history.push({\n      pathname: '/' + id,\n    })\n\n  }\n\n  const profilePicture = (imageURI === undefined || imageURI === null) ?\n    <svg className=\"w-full h-full\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" /></svg> :\n    <img className=\"rounded-full w-full\" src={imageURI} alt=\"user\" />;\n\n  return (\n\n    <div className=\" person-item flex  justify-between items-start p-3 hover:bg-gray-100\" onClick={goToProfile}>\n\n      <div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n        {profilePicture}\n      </div>\n\n      <div className=\"flex-grow\">\n        <h1 className=\"person-item-name  text-xm font-bold\">{name}</h1>\n        <p className=\"person-item-username\"><span className=\"text-xm\">@</span>{username}</p>\n        <p>{bio}</p>\n      </div>\n      <div>\n        {localStorage.getItem('token') && (id == parseJwt(localStorage.getItem('token')).id) ? null :\n          <FollowButton id={id} following={isFollowing} />}\n      </div>\n    </div>\n  )\n}\nexport default TrendItem;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx",["298","299","300","301","302","303"],"import React, { useState } from 'react'\nimport './tweet.css';\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\nimport Modal from '../../UI/Modal/Modal';\nimport PostTweet from './PostTweet';\nimport Tweet_info from './Tweet_Info';\nimport Tweet_img from './Tweet_img';\nimport Tweet_Info from './Tweet_Info';\n\nexport interface TweetData {\n  user?: {\n    id?: string\n    imageURL?: string\n    name?: string\n    userName?: string\n  }\n  id?: string\n  text: string\n  likesCount?: number\n  repliesCount?: number\n  createdAt?: number\n  isLiked?: boolean\n}\n\nfunction Tweet(props: any) {\n  const [edit, setEdit] = useState<boolean>(false);\n  const modalClosed = () => setEdit(false);\n\n  return (\n\n\n    <div className=\"tweet-box \">\n\n      <Modal show={edit} modalClosed={modalClosed} className=\"pb-4\" >\n\n        <header className=\"flex justify-between items-center px-3 h-8 w-full border-b border-gray-200 pb-6 pt-2\">\n\n          <div onClick={modalClosed} className=\" p-1 rounded-full\">\n            <svg className=\"h-8 w-5 pt-2 mt-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </div>\n\n        </header>\n        <PostTweet />\n      </Modal>\n\n      <Tweet_img imageURL={props.user?.imageURL} id={props.user?.id} />\n\n      <div className=\"tweet-aside\">\n\n        <Tweet_Info\n          userName={props.user?.userName}\n          createdAt={props.createdAt}\n          name={props.user?.name}\n          id={props.user.id}\n\n        />\n\n        {/*  <div className=\"tweet-data py-1\">\n          <p className=\"font-bold mr-1\">{props.user?.name}</p>\n          <p className=\"p--light-color\"> @{props.user?.userName} . </p>\n          <p className=\"p--light-color px-1\"> {props.createdAt ? timeConverter(Number(props.createdAt)) : null}</p>\n          <span className=\"tweet-ellipsis p--light-color z-10 \">\n\n\n            <ToolBox\n              design={\n                <i className=\"fas fa-ellipsis-h\"></i>\n              }\n            >\n\n              <ul className=\" mb-40 ml-4 absolute bg-gray-100 \" >\n\n                <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >block</a>\n                <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >mute</a>\n\n              </ul>\n            </ToolBox>\n\n          </span>\n        </div> */}\n\n\n        <div className=\"tweet-content\">\n          <span>\n            {props.text}\n          </span>\n          <div className=\"tweet-toolbar p--light-color\">\n            <a onClick={() => setEdit(true)}>\n              <i className=\"fas fa-reply text-base font-sm \"></i>\n              <span>{props.repliesCount}</span>\n            </a>\n\n            <a>\n              <ToolBox\n                design={\n                  <div className=\"border-0\">\n                    <i className=\"fas fa-retweet text-base font-sm\"></i>\n                    <span>2</span>\n                  </div>\n                }\n              >\n                <ul className=\"mb-40 absolute ml-12 bg-gray-100 \" >\n\n                  <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >Retweet</a>\n                  <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" onClick={() => setEdit(true)}>quote Retweet</a>\n\n                </ul>\n              </ToolBox>\n            </a>\n\n            <a href=\"/\">\n              <i className=\"far fa-heart text-base font-sm\"></i>\n              <span>{props.likesCount}</span>\n            </a>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Tweet;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/EditUser.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx",["304"],"import React, { Fragment } from 'react';\n\ninterface toolProps {\n  className?: string;\n  children?: any;\n  design?:any;\n}\n\nexport class ToolBox extends React.Component<toolProps>  {\ntoggleContainer:any =  React.createRef<HTMLDivElement>();\nstate = {\n        isOpen: true,\n    };\n\n  constructor(props :any) {\n    super(props);\n    this.state = { isOpen: false };\n    this.toggleContainer  =  React.createRef();\n\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onClickOutsideHandler = this.onClickOutsideHandler.bind(this);\n  }\n  \n  onClickHandler  = (e:any) => {\n      this.setState(state => {\n        if (this.state.isOpen){\n          return {\n            isOpen: false\n          };\n        }\n        else {\n          return {\n            isOpen: true\n          };\n        }\n\n      });\n    };\n\n    componentDidMount() {\n        document.addEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n    componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n\n\n    onClickOutsideHandler(event : any ) {\n      if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\n        this.setState({ isOpen: false });\n      }\n    }\n  \n    render() {\n      return (\n        <Fragment>\n        <div className=\"flex-initial\"  ref={this.toggleContainer}>\n         {this.state.isOpen && (\n          <div>\n           { this.props.children}\n          </div>\n        )}\n <div>\n      <a className= {`${this.props.className}`} onClick={this.onClickHandler}>\n        <div>\n      { this.props.design}\n      </div>\n       </a>\n  </div>\n </div>\n </Fragment>\n      );\n    }\n  }","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Follow.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx",["305"],"import React from 'react';\nimport { Link } from \"react-router-dom\"\nimport { useHistory } from \"react-router-dom\";\nimport {useApolloClient} from '@apollo/client'\n\n\n\n\n\n    \n\nexport function Logout() {\n    const history = useHistory()\n    const client = useApolloClient()\n\n    async function logoutSubmit() {\n        \n        localStorage.clear()\n        await client.clearStore()\n        console.log(\"store reseted\")\n        history.push('/')\n    }\n    return (\n        <div>\n         <button className=\" mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700  hover:bg-gray-100 hover:text-gray-900 \n         hover:rounded-full rounded-full\"  onClick={() => logoutSubmit()}>logout</button>\n\n        </div>\n    )\n}\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditBgImage.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/DeleteMedia.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_img.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/apolloClient.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/writeCache.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_Info.tsx",["306","307","308"],"import './tweet.css';\nimport { timeConverter } from '../../common/utils/timestamp';\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\nimport { Link, useHistory } from 'react-router-dom';\n\n\nexport interface TweetData {\n  user?: {\n    imageURL?: string\n    name?: string\n    userName?: string\n  }\n  id?: string\n  text: string\n  likesCount?: number\n  repliesCount?: number\n  createdAt?: number\n  isLiked?: boolean\n}\n\nfunction Tweet_Info(props: any) {\n  const history = useHistory();\n\n  const goToProfile = () => {\n    history.push({\n      pathname: '/' + props.id,\n    })\n  }\n  return (\n\n    <div className=\"tweet-data py-1\">\n      <a onClick={(e) => { goToProfile(); e.stopPropagation() }} className=\"font-bold mr-1\">{props.name}</a>\n      <p className=\"p--light-color\"> @{props.userName}. </p>\n      <a href=\"/tweet_route\" className=\"p--light-color px-1\"> {props.createdAt ? timeConverter(Number(props.createdAt)) : null}</a>\n      <span className=\"tweet-ellipsis p--light-color z-10 \">\n\n\n        <ToolBox\n          design={\n            <i className=\"fas fa-ellipsis-h\"></i>\n          }\n        >\n          <ul className=\" bg-gray-100 mb-40 ml-4 absolute bg-gray-100 \" >\n            <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >block</a>\n            <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >mute</a>\n\n          </ul>\n        </ToolBox>\n\n      </span>\n    </div>\n\n\n  )\n}\n\nexport default Tweet_Info;","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/FoF/FoF.tsx",[],{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","severity":1,"message":"314","line":12,"column":10,"nodeType":"315","messageId":"316","endLine":12,"endColumn":18},{"ruleId":"313","severity":1,"message":"317","line":13,"column":10,"nodeType":"315","messageId":"316","endLine":13,"endColumn":20},{"ruleId":"309","replacedBy":"318"},{"ruleId":"311","replacedBy":"319"},{"ruleId":"320","severity":1,"message":"321","line":14,"column":37,"nodeType":"322","messageId":"323","endLine":14,"endColumn":39},{"ruleId":"320","severity":1,"message":"321","line":22,"column":15,"nodeType":"322","messageId":"323","endLine":22,"endColumn":17},{"ruleId":"320","severity":1,"message":"321","line":45,"column":44,"nodeType":"322","messageId":"323","endLine":45,"endColumn":46},{"ruleId":"320","severity":1,"message":"321","line":53,"column":15,"nodeType":"322","messageId":"323","endLine":53,"endColumn":17},{"ruleId":"320","severity":1,"message":"321","line":77,"column":41,"nodeType":"322","messageId":"323","endLine":77,"endColumn":43},{"ruleId":"320","severity":1,"message":"321","line":85,"column":13,"nodeType":"322","messageId":"323","endLine":85,"endColumn":15},{"ruleId":"309","replacedBy":"324"},{"ruleId":"311","replacedBy":"325"},{"ruleId":"313","severity":1,"message":"326","line":3,"column":17,"nodeType":"315","messageId":"316","endLine":3,"endColumn":25},{"ruleId":"313","severity":1,"message":"327","line":7,"column":8,"nodeType":"315","messageId":"316","endLine":7,"endColumn":19},{"ruleId":"320","severity":1,"message":"321","line":33,"column":23,"nodeType":"322","messageId":"323","endLine":33,"endColumn":25},{"ruleId":"313","severity":1,"message":"328","line":28,"column":13,"nodeType":"315","messageId":"316","endLine":28,"endColumn":18},{"ruleId":"313","severity":1,"message":"329","line":5,"column":10,"nodeType":"315","messageId":"316","endLine":5,"endColumn":16},{"ruleId":"313","severity":1,"message":"330","line":6,"column":10,"nodeType":"315","messageId":"316","endLine":6,"endColumn":20},{"ruleId":"313","severity":1,"message":"331","line":8,"column":10,"nodeType":"315","messageId":"316","endLine":8,"endColumn":18},{"ruleId":"320","severity":1,"message":"321","line":40,"column":47,"nodeType":"322","messageId":"323","endLine":40,"endColumn":49},{"ruleId":"313","severity":1,"message":"332","line":6,"column":8,"nodeType":"315","messageId":"316","endLine":6,"endColumn":18},{"ruleId":"333","severity":1,"message":"334","line":48,"column":7,"nodeType":"335","endLine":48,"endColumn":72},{"ruleId":"333","severity":1,"message":"336","line":52,"column":9,"nodeType":"335","endLine":58,"endColumn":11},{"ruleId":"337","severity":1,"message":"338","line":92,"column":13,"nodeType":"335","endLine":92,"endColumn":46},{"ruleId":"337","severity":1,"message":"338","line":97,"column":13,"nodeType":"335","endLine":97,"endColumn":16},{"ruleId":"337","severity":1,"message":"338","line":110,"column":19,"nodeType":"335","endLine":111,"endColumn":62},{"ruleId":"337","severity":1,"message":"338","line":64,"column":7,"nodeType":"335","endLine":64,"endColumn":79},{"ruleId":"313","severity":1,"message":"339","line":2,"column":10,"nodeType":"315","messageId":"316","endLine":2,"endColumn":14},{"ruleId":"313","severity":1,"message":"339","line":4,"column":10,"nodeType":"315","messageId":"316","endLine":4,"endColumn":14},{"ruleId":"337","severity":1,"message":"338","line":32,"column":7,"nodeType":"335","endLine":32,"endColumn":93},{"ruleId":"337","severity":1,"message":"338","line":46,"column":13,"nodeType":"335","endLine":47,"endColumn":33},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"@typescript-eslint/no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'GET_ISAUTH' is defined but never used.",["340"],["341"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["340"],["341"],"'Fragment' is defined but never used.","'ListOfUsers' is defined but never used.","'data2' is assigned a value but never used.","'Tweets' is defined but never used.","'FeedTweets' is defined but never used.","'parseJwt' is defined but never used.","'Tweet_info' is defined but never used.","react/jsx-pascal-case","Imported JSX component Tweet_img must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Tweet_Info must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]