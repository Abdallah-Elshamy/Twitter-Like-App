[{"/home/omar/Documents/Twitter-Like-App/frontend/src/index.tsx":"1","/home/omar/Documents/Twitter-Like-App/frontend/src/reportWebVitals.ts":"2","/home/omar/Documents/Twitter-Like-App/frontend/src/App.tsx":"3","/home/omar/Documents/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts":"4","/home/omar/Documents/Twitter-Like-App/frontend/src/routes/routing.tsx":"5","/home/omar/Documents/Twitter-Like-App/frontend/src/common/cache.ts":"6","/home/omar/Documents/Twitter-Like-App/frontend/src/routes/Explore.tsx":"7","/home/omar/Documents/Twitter-Like-App/frontend/src/components/Home.tsx":"8","/home/omar/Documents/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx":"9","/home/omar/Documents/Twitter-Like-App/frontend/src/components/profile/Profile.tsx":"10","/home/omar/Documents/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx":"11","/home/omar/Documents/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx":"12","/home/omar/Documents/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx":"13","/home/omar/Documents/Twitter-Like-App/frontend/src/components/SerachResult.tsx":"14","/home/omar/Documents/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx":"15","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/createUser.ts":"16","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/login_query.ts":"17","/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx":"18","/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx":"19","/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx":"20","/home/omar/Documents/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx":"21","/home/omar/Documents/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx":"22","/home/omar/Documents/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx":"23","/home/omar/Documents/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx":"24","/home/omar/Documents/Twitter-Like-App/frontend/src/components/logo/logo.tsx":"25","/home/omar/Documents/Twitter-Like-App/frontend/src/components/Register/formInput/formInput.tsx":"26","/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx":"27","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts":"28","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts":"29","/home/omar/Documents/Twitter-Like-App/frontend/src/common/decode.ts":"30","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts":"31","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts":"32","/home/omar/Documents/Twitter-Like-App/frontend/src/UI/Loading.tsx":"33","/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx":"34","/home/omar/Documents/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx":"35","/home/omar/Documents/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx":"36","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx":"37","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/createTweet.ts":"38","/home/omar/Documents/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx":"39","/home/omar/Documents/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx":"40","/home/omar/Documents/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx":"41","/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx":"42","/home/omar/Documents/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx":"43","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx":"44","/home/omar/Documents/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx":"45","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx":"46","/home/omar/Documents/Twitter-Like-App/frontend/src/common/utils/timestamp.ts":"47","/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx":"48","/home/omar/Documents/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx":"49","/home/omar/Documents/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx":"50","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/GetEditBgImage.ts":"51","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts":"52","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/EditUser.ts":"53","/home/omar/Documents/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx":"54","/home/omar/Documents/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx":"55","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/Follow.ts":"56","/home/omar/Documents/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx":"57","/home/omar/Documents/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx":"58","/home/omar/Documents/Twitter-Like-App/frontend/src/common/apolloClient.ts":"59","/home/omar/Documents/Twitter-Like-App/frontend/src/common/utils/writeCache.ts":"60"},{"size":294,"mtime":1619598844128,"results":"61","hashOfConfig":"62"},{"size":425,"mtime":1617047888579,"results":"63","hashOfConfig":"62"},{"size":723,"mtime":1619621881409,"results":"64","hashOfConfig":"62"},{"size":348,"mtime":1619598844124,"results":"65","hashOfConfig":"62"},{"size":2697,"mtime":1619603662382,"results":"66","hashOfConfig":"62"},{"size":4492,"mtime":1619636494105,"results":"67","hashOfConfig":"62"},{"size":1182,"mtime":1619598844132,"results":"68","hashOfConfig":"62"},{"size":821,"mtime":1619598844124,"results":"69","hashOfConfig":"62"},{"size":124,"mtime":1619598844128,"results":"70","hashOfConfig":"62"},{"size":661,"mtime":1619598844128,"results":"71","hashOfConfig":"62"},{"size":2392,"mtime":1619602572118,"results":"72","hashOfConfig":"62"},{"size":4295,"mtime":1619598844124,"results":"73","hashOfConfig":"62"},{"size":1930,"mtime":1619598844124,"results":"74","hashOfConfig":"62"},{"size":2420,"mtime":1619638931551,"results":"75","hashOfConfig":"62"},{"size":2036,"mtime":1619598844128,"results":"76","hashOfConfig":"62"},{"size":233,"mtime":1619598844124,"results":"77","hashOfConfig":"62"},{"size":221,"mtime":1619598844124,"results":"78","hashOfConfig":"62"},{"size":2172,"mtime":1619598844128,"results":"79","hashOfConfig":"62"},{"size":1538,"mtime":1619638019982,"results":"80","hashOfConfig":"62"},{"size":1019,"mtime":1619598844128,"results":"81","hashOfConfig":"62"},{"size":2836,"mtime":1619620485924,"results":"82","hashOfConfig":"62"},{"size":4114,"mtime":1619614163959,"results":"83","hashOfConfig":"62"},{"size":1812,"mtime":1619638626242,"results":"84","hashOfConfig":"62"},{"size":760,"mtime":1619598844128,"results":"85","hashOfConfig":"62"},{"size":279,"mtime":1619598844128,"results":"86","hashOfConfig":"62"},{"size":1344,"mtime":1619598844124,"results":"87","hashOfConfig":"62"},{"size":555,"mtime":1619598844128,"results":"88","hashOfConfig":"62"},{"size":131,"mtime":1619598844124,"results":"89","hashOfConfig":"62"},{"size":288,"mtime":1619598844124,"results":"90","hashOfConfig":"62"},{"size":358,"mtime":1619598844124,"results":"91","hashOfConfig":"62"},{"size":212,"mtime":1619598844124,"results":"92","hashOfConfig":"62"},{"size":108,"mtime":1619598844124,"results":"93","hashOfConfig":"62"},{"size":285,"mtime":1619598844124,"results":"94","hashOfConfig":"62"},{"size":1045,"mtime":1619638198135,"results":"95","hashOfConfig":"62"},{"size":2243,"mtime":1619632464407,"results":"96","hashOfConfig":"62"},{"size":3598,"mtime":1619630372979,"results":"97","hashOfConfig":"62"},{"size":421,"mtime":1619598844124,"results":"98","hashOfConfig":"62"},{"size":438,"mtime":1619625131902,"results":"99","hashOfConfig":"62"},{"size":646,"mtime":1619598844124,"results":"100","hashOfConfig":"62"},{"size":2667,"mtime":1619598844128,"results":"101","hashOfConfig":"62"},{"size":1023,"mtime":1619598844128,"results":"102","hashOfConfig":"62"},{"size":970,"mtime":1619598844128,"results":"103","hashOfConfig":"62"},{"size":545,"mtime":1619598844124,"results":"104","hashOfConfig":"62"},{"size":385,"mtime":1619606473403,"results":"105","hashOfConfig":"62"},{"size":3902,"mtime":1619598844128,"results":"106","hashOfConfig":"62"},{"size":430,"mtime":1619598844124,"results":"107","hashOfConfig":"62"},{"size":524,"mtime":1619598844124,"results":"108","hashOfConfig":"62"},{"size":1512,"mtime":1619598844128,"results":"109","hashOfConfig":"62"},{"size":9539,"mtime":1619598844128,"results":"110","hashOfConfig":"62"},{"size":1649,"mtime":1619598844128,"results":"111","hashOfConfig":"62"},{"size":140,"mtime":1619598844124,"results":"112","hashOfConfig":"62"},{"size":145,"mtime":1619598844124,"results":"113","hashOfConfig":"62"},{"size":230,"mtime":1619598844124,"results":"114","hashOfConfig":"62"},{"size":1057,"mtime":1619598844128,"results":"115","hashOfConfig":"62"},{"size":1353,"mtime":1619598844124,"results":"116","hashOfConfig":"62"},{"size":208,"mtime":1619598844124,"results":"117","hashOfConfig":"62"},{"size":717,"mtime":1619603963500,"results":"118","hashOfConfig":"62"},{"size":323,"mtime":1619598844124,"results":"119","hashOfConfig":"62"},{"size":534,"mtime":1619621281759,"results":"120","hashOfConfig":"62"},{"size":3051,"mtime":1619631873389,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"fxqp6c",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"124"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"124"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"/home/omar/Documents/Twitter-Like-App/frontend/src/index.tsx",[],["254","255"],"/home/omar/Documents/Twitter-Like-App/frontend/src/reportWebVitals.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/App.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/routes/routing.tsx",["256","257"],"import {\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { NotFoundPage } from '../components/notFound/notFound';\nimport { LandingPage } from '../components/Register/landingPage/landingPage';\nimport { SignUpForm } from '../components/Register/signup_form/signup';\nimport Explore from './Explore';\nimport Profile from '../components/profile/Profile';\nimport Home from \"../components/Home\";\nimport { useQuery } from '@apollo/client';\nimport { GET_ISAUTH } from '../common/queries/Get_isAuth';\nimport React from \"react\";\nimport { Login } from \"../components/Register/login_form/login\";\n\nexport const Routing = () => {\n\n  return (\n    <div>\n\n      <Switch>\n        <PublicRoute path=\"/signup\">\n          <SignUpForm />\n        </PublicRoute>\n\n        <PublicRoute path=\"/login\">\n          <Login />\n        </PublicRoute>\n\n        <PrivateRoute path=\"/setting\">\n          <Setting />\n        </PrivateRoute>\n\n        <Route path=\"/error\">\n          <NotFoundPage />\n        </Route>\n\n        <PublicRoute path=\"/forget_password\">\n          <ForgetPassword />\n        </PublicRoute>\n\n\n        <Route path=\"/explore\">\n          <Explore />\n        </Route>\n\n        <PrivateRoute path=\"/messages\">\n          <Messages />\n        </PrivateRoute>\n\n\n        <PublicRoute path=\"/LandingPage\">\n          <LandingPage />\n        </PublicRoute>\n\n\n        <PrivateRoute path=\"/Notifications\">\n          <Notifications />\n        </PrivateRoute>\n\n\n        <PrivateRoute path=\"/\" exact >\n          <Home />\n        </PrivateRoute>\n\n\n        <PrivateRoute path=\"/profile\">\n          <Profile />\n        </PrivateRoute>\n\n\n      </Switch>\n\n    </div>\n  )\n};\n\nconst PrivateRoute = ({ children, ...rest }: any) => {\n  let auth = localStorage.getItem('token') ? true : false\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n\n\nconst PublicRoute = ({ children, ...rest }: any) => {\n  let auth = localStorage.getItem('token') ? false : true\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction Setting() {\n  return <h2>setting</h2>;\n}\n\n\n\nfunction Messages() {\n  return <h2>Messages</h2>;\n}\nfunction Notifications() {\n  return <h2>Notifications</h2>;\n}\n\nfunction ForgetPassword() {\n  return <h2>forget_password</h2>;\n}\n","/home/omar/Documents/Twitter-Like-App/frontend/src/common/cache.ts",["258","259","260","261","262","263"],"import { InMemoryCache, makeVar, ReactiveVar } from \"@apollo/client\";\nimport { searchBarValue } from \"./TypesAndInterfaces\";\n\nconst createPaginationAndCombine = (keyArgs: any[]) => ({\n    merge(existing: any, incoming: any) {\n        const merged = existing ? existing.slice(0) : [];\n\n        let breakFlag = 0;\n        let i = 0;\n        let j = 0;\n        for (i = 0; i < merged.length; i++) {\n            if (breakFlag) break;\n            for (j = 0; j < incoming.length; j++) {\n                if (merged[i].__ref == incoming[j].__ref) {\n                    breakFlag = 1;\n                    i -= 2;\n                    break;\n                }\n            }\n            j = 0;\n        }\n        if (i == merged.length) i--;\n        for (; j < incoming.length; j++) {\n            merged[++i] = incoming[j];\n        }\n        return merged.slice(0, i + 1);\n    },\n    read(existing: any) {\n        return existing;\n    },\n    keyArgs,\n});\nconst createPaginationAndCombineTweetsElements = (keyArgs: any[]) => ({\n    merge(existing: any, incoming: any) {\n        const merged = existing\n            ? { totalCount: existing.totalCount, tweets: [...existing.tweets] }\n            : { totalCount: 0, tweets: [] };\n        merged.totalCount = incoming.totalCount;\n        let breakFlag = 0;\n        let i = 0;\n        let j = 0;\n        for (i = 0; i < merged.tweets.length; i++) {\n            if (breakFlag) break;\n            for (j = 0; j < incoming.tweets.length; j++) {\n                if (merged.tweets[i].__ref == incoming.tweets[j].__ref) {\n                    breakFlag = 1;\n                    i -= 2;\n                    break;\n                }\n            }\n            j = 0;\n        }\n        if (i == merged.tweets.length) i--;\n        for (; j < incoming.tweets.length; j++) {\n            merged.tweets[++i] = incoming.tweets[j];\n        }\n        merged.tweets.slice(0, i + 1);\n        return merged;\n    },\n    read(existing: any) {\n        return existing;\n    },\n    keyArgs,\n});\n\nconst createPaginationAndCombineUsersElements = (keyArgs: any[]) => ({\n  merge(existing: any, incoming: any) {\n      const merged = existing\n          ? { users: [...existing.users] }\n          : { users: [] };\n      let breakFlag = 0;\n      let i = 0;\n      let j = 0;\n      for (i = 0; i < merged.users.length; i++) {\n          if (breakFlag) break;\n          for (j = 0; j < incoming.users.length; j++) {\n              if (merged.users[i].__ref == incoming.users[j].__ref) {\n                  breakFlag = 1;\n                  i -= 2;\n                  break;\n              }\n          }\n          j = 0;\n      }\n      if (i == merged.users.length) i--;\n      for (; j < incoming.users.length; j++) {\n          merged.users[++i] = incoming.users[j];\n      }\n      merged.users.slice(0, i + 1);\n      return merged;\n  },\n  read(existing: any) {\n      return existing;\n  },\n  keyArgs,\n});\n\nexport const cache: InMemoryCache = new InMemoryCache({\n    typePolicies: {\n        Query: {\n            fields: {\n                searchBarValue: {\n                    read() {\n                        return searchBarVar();\n                    },\n                },\n                EditProfileImage: {\n                    read() {\n                        return EditProfileImageVal();\n                    },\n                },\n                EditProfileBg: {\n                    read() {\n                        return EditProfileBgVal();\n                    },\n                },\n\n                SFW: {\n                    read() {\n                        return SFW();\n                    },\n                },\n                getFeed: createPaginationAndCombine([\"isSFW\"]),\n                tweets: createPaginationAndCombineTweetsElements([\n                    \"userId\",\n                    \"filter\",\n                    \"isSFW\",\n                ]),\n                users: createPaginationAndCombineUsersElements([\"name\"])\n            },\n        },\n    },\n});\n\nexport const searchBarVar: ReactiveVar<searchBarValue> = makeVar<searchBarValue>(\n    { value: \"\" }\n);\n\nexport const EditProfileImageVal: ReactiveVar<{\n    Image: object | false;\n    ImageURL: string | false;\n}> = makeVar<any>({\n    Image: false,\n    ImageURL: false,\n});\nexport const EditProfileBgVal: ReactiveVar<{\n    BgImage: object | false;\n    BgImageURL: string | false;\n}> = makeVar<any>({\n    BgImage: false,\n    BgImageURL: false,\n});\n\nexport const SFW: ReactiveVar<{ value: boolean }> = makeVar<any>({\n    value: true,\n});\n","/home/omar/Documents/Twitter-Like-App/frontend/src/routes/Explore.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/Home.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/profile/Profile.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx",["264","265","266"],"import React, { FormEvent, useState } from 'react';\nimport { useQuery } from '@apollo/client'\nimport { ApolloClient, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { Link, useHistory } from \"react-router-dom\"\n\nimport \"./../../../styles/layout.css\";\nimport \"./../Register.css\";\nimport { TweetButton } from \"./../../sideBar/tweetButton/tweetButton\";\nimport { Logo } from \"./../../logo/logo\";\nimport { FormInput } from '../formInput/formInput';\nimport { LOGIN } from '../../../common/queries/login_query';\n\nexport function Login() {\n  const [email, setEmail] = useState(' ');\n  const [password, setPassword] = useState(' ');\n  const routeHistory = useHistory();\n\n  const { data, loading, error } = useQuery(LOGIN, {\n    variables: { userNameOrEmail: email, password: password },\n  });\n\n  const navigate = (route: string) => routeHistory.push(route)\n\n  function submit() {\n\n    if (!loading && !error && data) {\n      localStorage.setItem('token', data.login.token);\n      navigate('/')\n\n    }\n    if (error) {\n      alert(\"you have an error\" + error)\n    }\n\n  }\n\n  return (\n    <div>\n      <Logo />\n      <div className=\"register-container mt-4\">\n        <strong className=\"text-4xl font-serif\"> Log in to Twitter </strong>\n\n        <FormInput\n          type=\"name\"\n          name=\"email\"\n          className=\"w-full h-16 -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-blue-300\"\n          placeholder=\"Email or userName\"\n          onChange={($e: FormEvent<HTMLInputElement>) => setEmail($e.currentTarget.value.trim())}\n        />\n\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          className=\"w-full h-16 -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-blue-300\"\n          onChange={($e: FormEvent<HTMLInputElement>) => setPassword($e.currentTarget.value.trim())}\n        />\n\n    <TweetButton name = \"Login\" className = \"w-80 ml-4 mt-8 h-12\" onClick={() =>  email && password &&  submit()}/>\n\n\n        <div className=\"mt-3\" >\n          <Link to=\"/forget_password\" className=\"a_login_form m-8\">\n            Forget password?\n            </Link>\n\n          <Link to=\"/signUp\" className=\"a_login_form\">\n            Sign up for Twitter\n            </Link>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\n\n","/home/omar/Documents/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/SerachResult.tsx",["267","268"],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/createUser.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/login_query.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx",["269","270"],"import { ErrorMessage, Field, Form, Formik } from \"formik\"\nimport React, { useRef } from \"react\"\nimport * as Yup from \"yup\"\nimport { TweetButton } from '../sideBar/tweetButton/tweetButton'\nimport { Tweets } from '../../common/queries/TweetQuery'\nimport { FeedTweets } from '../../common/queries/Feedtweets'\nimport { Post_Tweet } from '../../common/queries/createTweet'\nimport { useMutation } from \"@apollo/client\"\nimport {updateTweetsCacheForCreateTweet} from \"../../common/utils/writeCache\"\nimport './tweet.css';\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\nimport { parseJwt } from '../../common/decode';\ninterface Post {\n  text: string\n}\nconst PostTweet = () => {\n  var profile: any;\n  if (localStorage.getItem('token') !== \"LOGOUT\") {\n    profile = parseJwt(localStorage.getItem('token'))\n  }\n  console.log(profile.id)\n  // const userData = useQuery (Get_Logged_user)\n  // const user:User = userData.data.logUser.user\n  // console.log (user.imageURL)\n\n  const inputRef: any = useRef()\n  // mutation\n  const [createTweet, { data }] = useMutation(Post_Tweet, {\n    update: updateTweetsCacheForCreateTweet\n  });\n  console.log(`this ${inputRef.current}`)\n\n  const initialValues: Post = {\n    text: \"\"\n  }\n  /********   dynamic hight control funtion   ***********/\n  function setInputHight(element: React.ChangeEvent<HTMLElement>) {\n    element.target.style.height = \"60px\"\n    element.target.style.height = (element.target.scrollHeight) + \"px\"\n    inputRef.current.style.height = (element.target.scrollHeight) + \"px\"\n    console.log(`in ${element.target.style.height}`)\n    console.log(`out ${inputRef.current.style.height}`)\n    console.log(`scroll ${element.target.scrollHeight}`)\n  }\n  const validationSchema = Yup.object({\n    text: Yup.string()\n      .required()\n      .min(1, \"Must be more than 1 character\")\n      .max(256, \"Must be less than 257 characters\")\n  })\n  return (\n    <div className=\"mb-3 p-3 w-full shadow bg-white flex\">\n      {/* this shoud be dynamic */}\n      <div className=\"tweet-icon \">\n        <img src={avatar} alt=\"avatar\" />\n      </div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={({ text }, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          console.log(text);\n          createTweet({\n            variables: { tweetInput: { text } },\n          });\n          console.log(`this ${data}`)\n          setSubmitting(false);\n          resetForm();\n        }}\n      >\n        <div className=\"w-full mx-4 flex flex-col\">\n          <Form >\n            <div ref={inputRef} className=\"w-full mb-2 tweet-text flex h-16\">\n              <Field\n\n                name=\"text\"\n                type=\"text\"\n                as=\"textarea\"\n                // onChange={setInputHight}\n                onKeyPress={setInputHight}\n                className=\"w-full placeholder-gray4 p-3 ml-2 \n              focus:outline-none resize-none overflow-hidden min-h-12\"\n                placeholder=\"What's happening...\" />\n            </div>\n            <hr className=\"my-2\" />\n            <div className=\"flex justify-between items-center\">\n              <button className=\"hover:bg-blue-100 rounded-full py-2 px-3 transition\">\n                <svg\n                  className=\"h-8 w-8 text-blue-400 \"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n              </button>\n              <ErrorMessage name=\"text\" render={msg => <div className=\"text-red-500\">{msg}</div>} />\n\n              <TweetButton name=\"Tweet\" type=\"submit\" className=\" rounded-full py-3 px-6\" />\n            </div>\n\n          </Form>\n        </div>\n      </Formik>\n    </div>\n  )\n}\n\nexport default PostTweet\n","/home/omar/Documents/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/logo/logo.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/Register/formInput/formInput.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/decode.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/UI/Loading.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx",["271"],"import React, { useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useQuery } from \"@apollo/client\";\n// import Tweet from '../Tweet';\nimport Tweet from \"./Tweet\";\nimport { Tweets } from \"../../common/queries/TweetQuery\";\nimport { TweetData } from \"./Tweet\";\nimport { parseJwt } from \"../../common/decode\";\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\nimport Loading from \"../../UI/Loading\";\n\nexport interface TweetFilter {\n    filter: string;\n    page: number;\n    setPage: any;\n}\n\nconst TweetList: React.FC<TweetFilter> = (props) => {\n    let profile: any;\n    if (localStorage.getItem(\"token\") !== null) {\n        profile = parseJwt(localStorage.getItem(\"token\"));\n    }\n    const {filter, page, setPage} = props;\n    const sfw = useQuery(Get_SFW).data;\n    const { loading, error, data, fetchMore } = useQuery(Tweets, {\n        variables: {\n            userId: profile.id,\n            filter: filter,\n            isSFW: sfw.SFW.value,\n        },\n    });\n    if (loading) return <Loading />;\n    if (error) return <p>`Error! ${error.message}`</p>;\n\n    return (\n        <InfiniteScroll\n            dataLength={data?.tweets?.tweets?.length || 0}\n            next={() => {\n                setPage(page + 1);\n                return fetchMore({\n                    variables: {\n                        userId: profile.id,\n                        isSFW: sfw.SFW.value,\n                        page: page + 1,\n                        filter: filter\n                    },\n                });\n            }}\n            hasMore={data?.tweets?.tweets?.length >= page * 10 || false}\n            loader={<Loading />}\n        >\n            {data.tweets.tweets.map((tweet: TweetData) => {\n                return (\n                    <Tweet\n                        text={tweet.text}\n                        repliesCount={tweet.repliesCount}\n                        createdAt={tweet.createdAt}\n                        isLiked={tweet.isLiked}\n                        user={tweet.user}\n                        likesCount={tweet.likesCount}\n                        key={tweet.id}\n                    />\n                );\n            })}\n        </InfiniteScroll>\n    );\n};\n\nexport default TweetList;\n","/home/omar/Documents/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/createTweet.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx",["272"],"import React, {useState, useEffect} from 'react';\nimport { Logout } from '../../Register/logout/logout';\nimport { ToolBox } from '../toolbox/toolbox';\nimport './flootProfile.css';\nimport { useQuery } from '@apollo/client';\nimport { parseJwt } from '../../../common/decode';\nimport { LoggedUser } from '../../../common/queries/Userqery';\nimport Loading from \"../../../UI/Loading\"\nimport  {Get_SFW}  from '../../../common/queries/GET_SFW';\nimport {SFW} from '../../../common/cache'\n\nexport function FlootProfile () {\n      var profile;\n      if (localStorage.getItem('token') !== null) {\n        profile = parseJwt(localStorage.getItem('token'))\n      }\n    \n    \n      const [sfw, setsfw] = useState(true)\n      const {error, loading ,data} = useQuery(LoggedUser, { variables: { id: profile.id } });\n\n      const handleSFW =()=>{\n        (sfw)? setsfw (false): setsfw (true)\n      }\n      useEffect(() => {\n        SFW({value:sfw})\n      }, [sfw])\n      const data2 = useQuery (Get_SFW).data \n\n      if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n      if (error) return <p>`Error! ${error.message}`</p>\n \n\n      const userYear:number = (data.user.birthDate).split(\"-\", 1)\n      const currentYear = new Date()\n      const age = currentYear.getFullYear() - userYear   ; \n      return (\n\n         \n        <div>\n           <ToolBox className=\"fixed bottom-0 rounded-full w-60 mt-4 mb-2\n           bg-white hover:bg-blue-100 focus:bg-blue-200 focus:outline-none focus:shadow-outline hover:text-gray-900 \n           focus:ring-2  focus:ring-offset-gray-100\" design={\n<div className=\"flex justify-between items-start p-3\">\n\n<div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n  \n </div>\n\n <div className=\"flex-grow pr-20\">\n   <h3 className=\" text-xm font-bold\">{(data.user.name).split(\" \", 1)}</h3>\n   <p className=\"\"><span className=\"text-xm \">@</span>{data.user.userName}</p>   \n </div>\n\n <i className=\" fas fa-ellipsis-h\"></i>\n</div>\n           }>\n\n          <ul className= \"px-4 mt-16\" >\n          <a href=\"/profile\" className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \n          hover:text-gray-900  hover:rounded-full rounded-full\" role=\"menuitem\">My Account</a>\n\n          {\n            (age > 18) &&\n            <button className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \n            hover:text-gray-900  hover:rounded-full rounded-full focus:outline-none\" role=\"menuitem\" \n            onClick={handleSFW}>{(sfw)?'Set NSFW':'Set SFW'}</button>\n          }\n          <Logout/>\n            </ul>\n\n  </ToolBox>\n  </div>\n              \n\n\n      );\n    }\n","/home/omar/Documents/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx",["273","274","275","276"],"import React, { useState } from 'react'\nimport './tweet.css';\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\n\nimport { timeConverter } from '../../common/utils/timestamp';\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\nimport Modal from '../../UI/Modal/Modal';\nimport PostTweet from './PostTweet';\n\nexport interface TweetData {\n  user?: {\n    imageURL?: string\n    name?: string\n    userName?: string\n  }\n  id?: string\n  text: string\n  likesCount?: number\n  repliesCount?: number\n  createdAt?: number\n  isLiked?: boolean\n}\n\nfunction Tweet(props: any) {\n  const [edit, setEdit] = useState<boolean>(false);\n  const modalClosed = () => setEdit(false);\n\n  return (\n\n\n    <div className=\"tweet-box \">\n\n      <Modal show={edit} modalClosed={modalClosed} className=\"pb-4\" >\n\n        <header className=\"flex justify-between items-center px-3 h-8 w-full border-b border-gray-200 pb-6 pt-2\">\n\n          <div onClick={modalClosed} className=\" p-1 rounded-full\">\n            <svg className=\"h-8 w-5 pt-2 mt-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </div>\n\n        </header>\n        <PostTweet />\n      </Modal>\n\n\n      <div className=\"tweet-icon mr-2\">\n        {props.user?.imageURL ? (\n          <img src={props.user?.imageURL}\n            alt=\"avatar\" />\n        ) : (<img src={avatar} alt=\"avatar\" />)}\n      </div>\n      <div className=\"tweet-aside\">\n        <div className=\"tweet-data py-1\">\n          <p className=\"font-bold mr-1\">{props.user?.name}</p>\n          <p className=\"p--light-color\"> @{props.user?.userName} . </p>\n          <p className=\"p--light-color px-1\"> {props.createdAt ? timeConverter(Number(props.createdAt)) : null}</p>\n          <span className=\"tweet-ellipsis p--light-color z-10 \">\n\n\n            <ToolBox\n              design={\n                <i className=\"fas fa-ellipsis-h\"></i>\n              }\n            >\n\n              <ul className=\" bg-gray-100 mb-40 ml-4 absolute bg-gray-100 \" >\n\n                <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >block</a>\n                <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >mute</a>\n\n              </ul>\n            </ToolBox>\n\n          </span>\n        </div>\n        <div className=\"tweet-content\">\n          <span>\n            {props.text}\n          </span>\n          <div className=\"tweet-toolbar p--light-color\">\n            <a onClick={() => setEdit(true)}>\n              <i className=\"fas fa-reply text-base font-sm \"></i>\n              <span>{props.repliesCount}</span>\n            </a>\n\n            <a>\n              <ToolBox\n                design={\n                  <div className=\"border-0\">\n                    <i className=\"fas fa-retweet text-base font-sm\"></i>\n                    <span>2</span>\n                  </div>\n                }\n              >\n                <ul className=\"mb-40 absolute ml-12 bg-gray-100 \" >\n\n                  <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >Retweet</a>\n                  <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" onClick={() => setEdit(true)}>quote Retweet</a>\n\n                </ul>\n              </ToolBox>\n            </a>\n\n            <a href=\"/\">\n              <i className=\"far fa-heart text-base font-sm\"></i>\n              <span>{props.likesCount}</span>\n            </a>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Tweet;\n","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/utils/timestamp.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx",["277"],"import React from 'react';\n\nimport { PersonEntity } from '../../../../common/TypesAndInterfaces';\n\nimport './PersonItem.css'\nimport '../../../profile/profile.css'\nimport FollowButton from '../../../FollowButton/FollowButton';\nimport { decodedToken } from '../../../../App';\n\n\nconst TrendItem: React.FC<PersonEntity> = ({ id, bio, isFollowing, name, username, followed = false, imageURI, numberOfFollowers }) => {\n  const profilePicture = (imageURI === undefined || imageURI === null) ?\n    <svg className=\"w-full h-full\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" /></svg> :\n    <img className=\"rounded-full w-full\" src={imageURI} alt=\"user\" />;\n  return (\n\n    <div className=\" person-item flex  justify-between items-start p-3\">\n\n      <div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n        {profilePicture}\n      </div>\n\n      <div className=\"flex-grow\">\n        <h1 className=\"person-item-name  text-xm font-bold\">{name}</h1>\n        <p className=\"person-item-username\"><span className=\"text-xm\">@</span>{username}</p>\n        <p>{bio}</p>\n      </div>\n      <div>\n          {decodedToken && (id == decodedToken.id) ? null :\n          <FollowButton id={id} following={isFollowing} />}\n      </div>\n    </div>\n  )\n}\nexport default TrendItem;\n","/home/omar/Documents/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx",["278"],"import { Field, Formik } from 'formik';\nimport React, { createRef, MouseEventHandler, useRef, useState } from 'react';\nimport { object, string } from 'yup';\nimport { User } from '../../../common/TypesAndInterfaces';\nimport '../profile.css';\nimport InputSet from './InputSet';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { EditUser } from '../../../common/queries/EditUser';\nimport avatar from \"../../../routes/mjv-d5z8_400x400.jpg\";\nimport './EditProfile.css'\nimport { EditProfileBgVal, EditProfileImageVal } from '../../../common/cache';\nimport { GetEditProfileImage } from '../../../common/queries/GetEditProfileImage';\nimport axios from 'axios';\nimport { GetEditBgImage } from '../../../common/queries/GetEditBgImage';\n\n\ntype Props = {\n  user: User,\n  close: MouseEventHandler,\n  show: Boolean\n}\ninterface initials {\n  name: String,\n  bio?: String,\n  birthdate: String\n\n}\nconst EditProfile: React.FC<Props> = ({ user, close, show }) => {\n  const [apis, setAPIs] = useState<any>([])\n\n  const [editUser, { loading: mutLoading }] = useMutation(EditUser)\n\n  const { data: avatarData } = useQuery(GetEditProfileImage)\n  if (avatarData) {\n    var { EditProfileImage: { Image, ImageURL } } = avatarData\n  }\n\n  const { data: BgData } = useQuery(GetEditBgImage)\n  if (BgData) {\n    //console.assert(BgData, \"happened\")\n\n    var { EditProfileBg: { BgImage, BgImageURL } } = BgData\n    // console.log(BgImageURL)\n  }\n\n  const { data: APIENDPOINT, loading, refetch } = useQuery(gql`query{getUploadURL}`)\n  if (loading) {\n    console.log(\"loading...........\")\n  }\n  if (!loading && APIENDPOINT) {\n    if (APIENDPOINT.getUploadURL !== apis[apis.length - 1]) {\n      setAPIs([...apis, APIENDPOINT.getUploadURL])\n    }\n  }\n\n\n  //initial values for formik\n  const initialValues: initials = {\n    name: user.name,\n    bio: user.bio || \"\",\n    birthdate: user.birthDate || \"06/11/1998\"\n  }\n\n  //validation schema for yup\n  const validationSchema = object({\n    name: string()\n      .required('Required')\n      .max(50, 'Too long'),\n    bio: string().max(250, \"Too long\"),\n  })\n\n  //formik ref\n  const formRef: any = useRef();\n  //used after save\n  const closeButton: any = useRef();\n  //avatar image ref\n  const avatarButton: any = useRef()\n\n  const BgButton: any = useRef()\n\n\n\n  const save = async () => {\n    const dataValues = formRef.current.values\n    dataValues.bio = dataValues.bio.replaceAll(/  +/g, ' ');\n    //convert date to string\n    let ageError\n    let yourDate = dataValues.birthdate\n    if (typeof yourDate == 'string') ageError = false\n    else {\n      yourDate = new Date(dataValues.birthdate.getTime() - (yourDate.getTimezoneOffset() * 60 * 1000))\n      yourDate = yourDate.toISOString().split('T')[0]\n      //check age is older than 12\n      ageError = !((new Date().getFullYear() - Number(yourDate.substring(0, 4))) >= 12)\n      if (!ageError) dataValues.birthdate = yourDate\n    }\n\n    //overall error\n    let error = ((Object.keys(formRef.current.errors).length !== 0) || ageError)\n\n    if (!error) {\n      if (Image) {\n        var pfUrl = await Promise.resolve(handleImageUpload(Image))\n      }\n      if (BgImage) {\n        var bgUrl = await Promise.resolve(handleImageUpload(BgImage))\n      }\n      console.log(`profile link:${pfUrl}\\nbackground link:${bgUrl}\\n`)\n      editUser({\n        variables:\n        {\n          userInput:\n          {\n            name: dataValues.name,\n            bio: dataValues.bio,\n            birthDate: dataValues.birthdate,\n            imageURL: apis && pfUrl,\n            coverImageURL: apis && bgUrl\n          },\n        }\n      })\n\n      !mutLoading && closeButton.current.click()\n    }\n\n\n  }\n\n  const handleImageUpload: any = async (image: any, type?: Number) => {\n    let url: any = await axios.put(apis.pop(), image, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n    console.log(\"url\", url.config.url.split('?')[0])\n    return url.config.url.split('?')[0]\n\n  }\n\n  const handleAvatarPreview = (e: any) => {\n    EditProfileImageVal({\n      Image: e.target.files[0],\n      ImageURL: URL.createObjectURL(e.target.files[0])\n    })\n  }\n\n  const handleBgPreview = (e: any) => {\n\n    console.log(\"After change\")\n    EditProfileBgVal({\n      BgImage: e.target.files[0],\n      BgImageURL: URL.createObjectURL(e.target.files[0])\n    })\n    refetch()\n\n    console.log(BgImageURL)\n\n  }\n\n  return (\n    show && <div className=\"py-4\">\n\n      <header className=\"flex justify-between  items-center px-3 h-6 w-full border-b border-gray-200 pb-6 pt-2\">\n\n        <div onClick={close} ref={closeButton} className=\"hover:bg-red-100 p-1 rounded-full\">\n          <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </div>\n\n        <div><h1 className=\"font-bold font-lg\">Edit Profile</h1></div>\n\n        <div>\n          <button onClick={save}\n            className=\"inline-block rounded-full px-4 \n           py-1.5 font-semibold  text-gray-800 border border-blue-400\">\n            Save\n          </button>\n        </div>\n      </header>\n\n      <main className=\"p-4\">\n\n        <div className=\"media h-64 \">\n          <div className=\"pf--bg relative \" >\n\n            {(\n              <img className=\"\" src={BgImageURL || user.coverImageURL || avatar}\n                alt=\"bg\" />\n            )}\n            <div className=\"absolute top-0  h-full w-full \n            hover:bg-gray-100 hover:bg-opacity-25 \n             p-16 \"\n              onClick={() => BgButton.current.click()}\n            >\n\n              <svg className=\"h-6 text-white m-auto opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n            </div>\n            <input className=\" hidden\" type=\"file\" onChange={(e) => handleBgPreview(e)} accept=\"image/*\" ref={BgButton} />\n\n\n          </div>\n\n\n          <div className=\"pf--avatar-edit\" >\n            {(\n              <img className=\"pf--avatar-img\" src={ImageURL || user.imageURL || avatar}\n                alt=\"avatar\" />\n            )}\n            <div className=\"absolute h-100 w-100 \n            hover:bg-gray-100 hover:bg-opacity-25 \n            rounded-full p-16 \"\n              onClick={() => avatarButton.current.click()}\n            >\n\n              <svg className=\"h-6 text-white opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n            </div>\n            <input className=\"hidden\" type=\"file\" onChange={(e) => handleAvatarPreview(e)} accept=\"image/*\" ref={avatarButton} />\n          </div>\n\n        </div>\n\n        <div className=\"text w-full\">\n          <Formik initialValues={initialValues}\n            validationSchema={validationSchema}\n            innerRef={formRef} onSubmit={(values, actions) => {\n              console.log({ values, actions });\n\n            }}>\n            {({ values, setFieldValue, errors, touched }) => (<form>\n\n              <div className=\" hover:text-blue-500 hover:border-blue-400\n              rounded-md border border-gray-300 text-gray-800 px-2 mb-2 py\">\n\n                <label htmlFor=\"name\" className=\" w-14 inline-block text-xs \">\n                  Name\n                </label>\n                <p className=\"inline-block float-right text-xs\">{values.name.length}/{50}</p>\n                <Field className=\" w-full focus:outline-none block h-6 mb-2\"\n                  id=\"name\" name=\"name\" maxLength=\"50\" />\n                {errors.name && touched.name ? (\n                  <div className=\"text-red-600 font-semibold\">{errors.name}</div>\n                ) : null}\n              </div>\n\n              <br />\n              <div className=\" hover:text-blue-500 hover:border-blue-400\n              rounded-md border border-gray-300 text-gray-800 px-2 mb-2 py\">\n\n                <label htmlFor=\"bio\" className=\" w-14 inline-block text-xs \">\n                  Bio\n                </label>\n                <p className=\"inline-block float-right text-xs\">{(values.bio == null) ? \"0\" : values.bio?.length}/{250}</p>\n                <Field className=\" w-full focus:outline-none block h-32 resize-none\"\n                  id=\"bio\" name=\"bio\" maxLength=\"250\" as=\"textarea\" />\n                {errors.bio && touched.bio ? (\n                  <div className=\"text-red-600 font-semibold\">{errors.bio}</div>\n                ) : null}\n              </div>\n\n              <div className=\" \n              rounded-md text-gray-800 px-2 mb-2 py\">\n                <Field id=\"birthdate\" name=\"birthdate\" as={InputSet} bD={values.birthdate} setF={setFieldValue} ></Field>\n                {errors.birthdate && touched.birthdate ? (\n                  <div className=\"text-red-600 font-semibold\">{errors.birthdate}</div>\n                ) : null}\n              </div>\n\n            </form>)}\n          </Formik>\n        </div>\n\n      </main>\n    </div>\n  )\n}\nexport default EditProfile;\n","/home/omar/Documents/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx",["279"],"import React, { Fragment } from 'react';\n\ninterface toolProps {\n  className?: string;\n  children?: any;\n  design?:any;\n}\n\nexport class ToolBox extends React.Component<toolProps>  {\ntoggleContainer:any =  React.createRef<HTMLDivElement>();\nstate = {\n        isOpen: true,\n    };\n\n  constructor(props :any) {\n    super(props);\n    this.state = { isOpen: false };\n    this.toggleContainer  =  React.createRef();\n\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onClickOutsideHandler = this.onClickOutsideHandler.bind(this);\n  }\n  \n  onClickHandler  = (e:any) => {\n      this.setState(state => {\n        if (this.state.isOpen){\n          return {\n            isOpen: false\n          };\n        }\n        else {\n          return {\n            isOpen: true\n          };\n        }\n\n      });\n    };\n\n    componentDidMount() {\n        document.addEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n    componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n\n\n    onClickOutsideHandler(event : any ) {\n      if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\n        this.setState({ isOpen: false });\n      }\n    }\n  \n    render() {\n      return (\n        <Fragment>\n        <div className=\"flex-initial\"  ref={this.toggleContainer}>\n         {this.state.isOpen && (\n          <div>\n           { this.props.children}\n          </div>\n        )}\n <div>\n      <a className= {`${this.props.className}`} onClick={this.onClickHandler}>\n        <div>\n      { this.props.design}\n      </div>\n       </a>\n  </div>\n </div>\n </Fragment>\n      );\n    }\n  }","/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/GetEditBgImage.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/EditUser.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/queries/Follow.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx",["280"],"import React from 'react';\nimport { Link } from \"react-router-dom\"\nimport { useHistory } from \"react-router-dom\";\nimport {useApolloClient} from '@apollo/client'\n\n\n\n\n\n    \n\nexport function Logout() {\n    const history = useHistory()\n    const client = useApolloClient()\n\n    async function logoutSubmit() {\n        \n        localStorage.clear()\n        await client.clearStore()\n        console.log(\"store reseted\")\n        history.push('/')\n    }\n    return (\n        <div>\n         <button className=\" mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700  hover:bg-gray-100 hover:text-gray-900 \n         hover:rounded-full rounded-full\"  onClick={() => logoutSubmit()}>logout</button>\n\n        </div>\n    )\n}\n","/home/omar/Documents/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/apolloClient.ts",[],"/home/omar/Documents/Twitter-Like-App/frontend/src/common/utils/writeCache.ts",[],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":12,"column":10,"nodeType":"287","messageId":"288","endLine":12,"endColumn":18},{"ruleId":"285","severity":1,"message":"289","line":13,"column":10,"nodeType":"287","messageId":"288","endLine":13,"endColumn":20},{"ruleId":"290","severity":1,"message":"291","line":14,"column":37,"nodeType":"292","messageId":"293","endLine":14,"endColumn":39},{"ruleId":"290","severity":1,"message":"291","line":22,"column":15,"nodeType":"292","messageId":"293","endLine":22,"endColumn":17},{"ruleId":"290","severity":1,"message":"291","line":45,"column":44,"nodeType":"292","messageId":"293","endLine":45,"endColumn":46},{"ruleId":"290","severity":1,"message":"291","line":53,"column":15,"nodeType":"292","messageId":"293","endLine":53,"endColumn":17},{"ruleId":"290","severity":1,"message":"291","line":77,"column":41,"nodeType":"292","messageId":"293","endLine":77,"endColumn":43},{"ruleId":"290","severity":1,"message":"291","line":85,"column":13,"nodeType":"292","messageId":"293","endLine":85,"endColumn":15},{"ruleId":"285","severity":1,"message":"294","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":22},{"ruleId":"285","severity":1,"message":"295","line":3,"column":24,"nodeType":"287","messageId":"288","endLine":3,"endColumn":38},{"ruleId":"285","severity":1,"message":"296","line":4,"column":10,"nodeType":"287","messageId":"288","endLine":4,"endColumn":20},{"ruleId":"285","severity":1,"message":"297","line":3,"column":17,"nodeType":"287","messageId":"288","endLine":3,"endColumn":25},{"ruleId":"285","severity":1,"message":"298","line":7,"column":8,"nodeType":"287","messageId":"288","endLine":7,"endColumn":19},{"ruleId":"285","severity":1,"message":"299","line":5,"column":10,"nodeType":"287","messageId":"288","endLine":5,"endColumn":16},{"ruleId":"285","severity":1,"message":"300","line":6,"column":10,"nodeType":"287","messageId":"288","endLine":6,"endColumn":20},{"ruleId":"285","severity":1,"message":"301","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":25},{"ruleId":"285","severity":1,"message":"302","line":28,"column":13,"nodeType":"287","messageId":"288","endLine":28,"endColumn":18},{"ruleId":"303","severity":1,"message":"304","line":72,"column":17,"nodeType":"305","endLine":73,"endColumn":33},{"ruleId":"303","severity":1,"message":"304","line":85,"column":13,"nodeType":"305","endLine":85,"endColumn":46},{"ruleId":"303","severity":1,"message":"304","line":90,"column":13,"nodeType":"305","endLine":90,"endColumn":16},{"ruleId":"303","severity":1,"message":"304","line":103,"column":19,"nodeType":"305","endLine":104,"endColumn":62},{"ruleId":"290","severity":1,"message":"291","line":29,"column":32,"nodeType":"292","messageId":"293","endLine":29,"endColumn":34},{"ruleId":"285","severity":1,"message":"306","line":2,"column":17,"nodeType":"287","messageId":"288","endLine":2,"endColumn":26},{"ruleId":"303","severity":1,"message":"304","line":64,"column":7,"nodeType":"305","endLine":64,"endColumn":79},{"ruleId":"285","severity":1,"message":"307","line":2,"column":10,"nodeType":"287","messageId":"288","endLine":2,"endColumn":14},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"@typescript-eslint/no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'GET_ISAUTH' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ApolloClient' is defined but never used.","'createHttpLink' is defined but never used.","'setContext' is defined but never used.","'Fragment' is defined but never used.","'ListOfUsers' is defined but never used.","'Tweets' is defined but never used.","'FeedTweets' is defined but never used.","'useState' is defined but never used.","'data2' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'createRef' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]