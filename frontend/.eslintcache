[{"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/index.tsx":"1","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/reportWebVitals.ts":"2","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/App.tsx":"3","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts":"4","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/routing.tsx":"5","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx":"6","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_isAuth.ts":"7","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/login_query.ts":"8","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Home.tsx":"9","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/cache.ts":"10","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/Explore.tsx":"11","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx":"12","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/Profile.tsx":"13","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/logo/logo.tsx":"14","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx":"15","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx":"16","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx":"17","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/formInput/formInput.tsx":"18","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/SerachResult.tsx":"19","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createUser.ts":"20","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx":"21","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx":"22","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx":"23","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx":"24","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx":"25","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx":"26","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts":"27","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts":"28","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts":"29","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx":"30","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/decode.ts":"31","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Loading.tsx":"32","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx":"33","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx":"34","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx":"35","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx":"36","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx":"37","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx":"38","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx":"39","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx":"40","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx":"41","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createTweet.ts":"42","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts":"43","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/timestamp.ts":"44","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx":"45","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx":"46","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx":"47","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx":"48","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx":"49","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts":"50","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/EditUser.ts":"51","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx":"52","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx":"53","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx":"54","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Follow.ts":"55","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx":"56","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx":"57","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx":"58","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditBgImage.ts":"59","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/DeleteMedia.ts":"60"},{"size":294,"mtime":1619594211320,"results":"61","hashOfConfig":"62"},{"size":425,"mtime":1612312753926,"results":"63","hashOfConfig":"62"},{"size":734,"mtime":1619594210012,"results":"64","hashOfConfig":"62"},{"size":348,"mtime":1619594210148,"results":"65","hashOfConfig":"62"},{"size":2688,"mtime":1619594211704,"results":"66","hashOfConfig":"62"},{"size":2873,"mtime":1619594210172,"results":"67","hashOfConfig":"62"},{"size":104,"mtime":1619594210120,"results":"68","hashOfConfig":"62"},{"size":221,"mtime":1619594210144,"results":"69","hashOfConfig":"62"},{"size":821,"mtime":1619594210152,"results":"70","hashOfConfig":"62"},{"size":1420,"mtime":1619594210080,"results":"71","hashOfConfig":"62"},{"size":1182,"mtime":1619594211548,"results":"72","hashOfConfig":"62"},{"size":124,"mtime":1619594210288,"results":"73","hashOfConfig":"62"},{"size":661,"mtime":1619594210328,"results":"74","hashOfConfig":"62"},{"size":279,"mtime":1619594210288,"results":"75","hashOfConfig":"62"},{"size":1930,"mtime":1619594210172,"results":"76","hashOfConfig":"62"},{"size":760,"mtime":1619594211224,"results":"77","hashOfConfig":"62"},{"size":4295,"mtime":1619594210200,"results":"78","hashOfConfig":"62"},{"size":1344,"mtime":1619594210152,"results":"79","hashOfConfig":"62"},{"size":1218,"mtime":1619594210208,"results":"80","hashOfConfig":"62"},{"size":233,"mtime":1619594210120,"results":"81","hashOfConfig":"62"},{"size":1538,"mtime":1619594210288,"results":"82","hashOfConfig":"62"},{"size":2172,"mtime":1619594210288,"results":"83","hashOfConfig":"62"},{"size":2036,"mtime":1619594210848,"results":"84","hashOfConfig":"62"},{"size":1019,"mtime":1619594210208,"results":"85","hashOfConfig":"62"},{"size":2465,"mtime":1619594210636,"results":"86","hashOfConfig":"62"},{"size":555,"mtime":1619594210288,"results":"87","hashOfConfig":"62"},{"size":131,"mtime":1619594210120,"results":"88","hashOfConfig":"62"},{"size":288,"mtime":1619594210120,"results":"89","hashOfConfig":"62"},{"size":212,"mtime":1619594210100,"results":"90","hashOfConfig":"62"},{"size":800,"mtime":1619594210288,"results":"91","hashOfConfig":"62"},{"size":358,"mtime":1619594210080,"results":"92","hashOfConfig":"62"},{"size":285,"mtime":1619594210032,"results":"93","hashOfConfig":"62"},{"size":2667,"mtime":1619594210748,"results":"94","hashOfConfig":"62"},{"size":646,"mtime":1619594210064,"results":"95","hashOfConfig":"62"},{"size":970,"mtime":1619594210276,"results":"96","hashOfConfig":"62"},{"size":4190,"mtime":1619594211280,"results":"97","hashOfConfig":"62"},{"size":1343,"mtime":1619594211304,"results":"98","hashOfConfig":"62"},{"size":421,"mtime":1619594210120,"results":"99","hashOfConfig":"62"},{"size":4325,"mtime":1619656662067,"results":"100","hashOfConfig":"62"},{"size":1023,"mtime":1619594211172,"results":"101","hashOfConfig":"62"},{"size":545,"mtime":1619594210068,"results":"102","hashOfConfig":"62"},{"size":177,"mtime":1619594210120,"results":"103","hashOfConfig":"62"},{"size":108,"mtime":1619594210100,"results":"104","hashOfConfig":"62"},{"size":524,"mtime":1619594210148,"results":"105","hashOfConfig":"62"},{"size":1512,"mtime":1619594210288,"results":"106","hashOfConfig":"62"},{"size":369,"mtime":1619594210100,"results":"107","hashOfConfig":"62"},{"size":430,"mtime":1619594210120,"results":"108","hashOfConfig":"62"},{"size":10385,"mtime":1619656033374,"results":"109","hashOfConfig":"62"},{"size":3902,"mtime":1619594211288,"results":"110","hashOfConfig":"62"},{"size":145,"mtime":1619594210120,"results":"111","hashOfConfig":"62"},{"size":230,"mtime":1619594210080,"results":"112","hashOfConfig":"62"},{"size":1353,"mtime":1619594210148,"results":"113","hashOfConfig":"62"},{"size":1057,"mtime":1619594210328,"results":"114","hashOfConfig":"62"},{"size":1649,"mtime":1619594211176,"results":"115","hashOfConfig":"62"},{"size":208,"mtime":1619594210100,"results":"116","hashOfConfig":"62"},{"size":323,"mtime":1619594210032,"results":"117","hashOfConfig":"62"},{"size":636,"mtime":1619594210172,"results":"118","hashOfConfig":"62"},{"size":1084,"mtime":1619594211268,"results":"119","hashOfConfig":"62"},{"size":140,"mtime":1619594210104,"results":"120","hashOfConfig":"62"},{"size":140,"mtime":1619600216742,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"m46pjl",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"124"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"124"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/index.tsx",[],["249","250"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/reportWebVitals.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/App.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/routing.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_isAuth.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/login_query.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Home.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/cache.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/Explore.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/Profile.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/logo/logo.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/formInput/formInput.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/SerachResult.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createUser.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx",["251"],"import React, { Fragment } from 'react';\nimport '../../App.css';\nimport './profile.css';\nimport ProfileInfo from \"./ProfileInfo\";\nimport '../../styles/layout.css'\nimport { useQuery } from '@apollo/client';\nimport { LoggedUser } from '../../common/queries/Userqery';\nimport TweetList from '../tweets/TweetList'\nimport { Switch, NavLink, Route } from \"react-router-dom\"\nimport { parseJwt } from '../../common/decode';\nimport Loading from \"../../UI/Loading\"\nimport Profilewallpage from './profileWallPage';\n\n\nfunction ProfileWall() {\n  let profile;\n  if (localStorage.getItem('token')) {\n    profile = parseJwt(localStorage.getItem('token'))\n  }\n\n  const { loading, error } = useQuery(LoggedUser, { variables: { id: profile.id } });\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n  if (error) return <p>`Error! ${error.message}`</p>\n  return (\n    < Fragment >\n      <ProfileInfo />\n      <nav >\n        <ul className=\"pf--nav-ul \">\n          <NavLink exact activeClassName=\"active\" className=\"pf--nav-link\" to=\"/profile\">\n            <li>Tweets</li>\n          </NavLink>\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to=\"/profile/replies\">\n            <li>Tweets & replies</li>\n          </NavLink>\n\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to=\"/profile/media\">\n            <li>Media</li>\n          </NavLink>\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to=\"/profile/likes\">\n            <li>Likes</li>\n          </NavLink>\n        </ul>\n      </nav>\n      <div className=\"tweets\">\n        <Switch>\n          <Route\n            exact\n            path='/profile'\n            render={() => (\n              <TweetList filter={``} />\n              // to test paganation go to profileWallPage\n              // <Profilewallpage  filter={``}/>\n            )}\n          />\n          <Route\n            exact\n            path='/profile/replies'\n            render={() => (\n              <TweetList filter={`replies&tweets`} />\n            )}\n          />\n          <Route\n            exact\n            path='/profile/media'\n            render={() => (\n              <TweetList filter={`media`} />\n            )}\n          />\n          <Route\n            exact\n            path='/profile/likes'\n            render={() => (\n              <TweetList filter={`likes`} />\n            )}\n          />\n        </Switch>\n\n\n\n      </div>\n\n\n    </Fragment >\n  );\n}\n\nexport default ProfileWall;","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/decode.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Loading.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx",["252"],"import React, {useState, useEffect} from 'react';\nimport { Logout } from '../../Register/logout/logout';\nimport { ToolBox } from '../toolbox/toolbox';\nimport './flootProfile.css';\nimport { useQuery } from '@apollo/client';\nimport { parseJwt } from '../../../common/decode';\nimport { LoggedUser } from '../../../common/queries/Userqery';\nimport Loading from \"../../../UI/Loading\"\nimport  {Get_SFW}  from '../../../common/queries/GET_SFW';\nimport {SFW} from '../../../common/cache'\n\nexport function FlootProfile () {\n      var profile;\n      if (localStorage.getItem('token') !== null) {\n        profile = parseJwt(localStorage.getItem('token'))\n      }\n    \n    \n      const [sfw, setsfw] = useState(true)\n      const {error, loading ,data} = useQuery(LoggedUser, { variables: { id: profile.id } });\n\n      const handleSFW =()=>{\n        (sfw)? setsfw (false): setsfw (true)\n      }\n      useEffect(() => {\n        SFW({value:sfw})\n      }, [sfw])\n      const data2 = useQuery (Get_SFW).data \n\n      if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n      if (error) return <p>`Error! ${error.message}`</p>\n \n\n      const userYear:number = (data.user.birthDate).split(\"-\", 1)\n      const currentYear = new Date()\n      const age = currentYear.getFullYear() - userYear   ; \n      return (\n\n         \n        <div>\n           <ToolBox className=\"fixed bottom-0 rounded-full w-60 mt-4 mb-2\n           bg-white hover:bg-blue-100 focus:bg-blue-200 focus:outline-none focus:shadow-outline hover:text-gray-900 \n           focus:ring-2  focus:ring-offset-gray-100\" design={\n<div className=\"flex justify-between items-start p-3\">\n\n<div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n  \n </div>\n\n <div className=\"flex-grow pr-20\">\n   <h3 className=\" text-xm font-bold\">{(data.user.name).split(\" \", 1)}</h3>\n   <p className=\"\"><span className=\"text-xm \">@</span>{data.user.userName}</p>   \n </div>\n\n <i className=\" fas fa-ellipsis-h\"></i>\n</div>\n           }>\n\n          <ul className= \"px-4 mt-16\" >\n          <a href=\"/profile\" className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \n          hover:text-gray-900  hover:rounded-full rounded-full\" role=\"menuitem\">My Account</a>\n\n          {\n            (age > 18) &&\n            <button className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \n            hover:text-gray-900  hover:rounded-full rounded-full focus:outline-none\" role=\"menuitem\" \n            onClick={handleSFW}>{(sfw)?'Set NSFW':'Set SFW'}</button>\n          }\n          <Logout/>\n            </ul>\n\n  </ToolBox>\n  </div>\n              \n\n\n      );\n    }\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createTweet.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/timestamp.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx",["253"],"import React from 'react';\n\nimport { PersonEntity } from '../../../../common/TypesAndInterfaces';\n\nimport './PersonItem.css'\nimport '../../../profile/profile.css'\nimport FollowButton from '../../../FollowButton/FollowButton';\nimport { decodedToken } from '../../../../App';\n\n\nconst TrendItem: React.FC<PersonEntity> = ({ id, bio, isFollowing, name, username, followed = false, imageURI, numberOfFollowers }) => {\n  const profilePicture = (imageURI === undefined || imageURI === null) ?\n    <svg className=\"w-full h-full\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" /></svg> :\n    <img className=\"rounded-full w-full\" src={imageURI} alt=\"user\" />;\n  return (\n\n    <div className=\" person-item flex  justify-between items-start p-3\">\n\n      <div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n        {profilePicture}\n      </div>\n\n      <div className=\"flex-grow\">\n        <h1 className=\"person-item-name  text-xm font-bold\">{name}</h1>\n        <p className=\"person-item-username\"><span className=\"text-xm\">@</span>{username}</p>\n        <p>{bio}</p>\n      </div>\n      <div>\n          {decodedToken && (id == decodedToken.id) ? null :\n          <FollowButton id={id} following={isFollowing} />}\n      </div>\n    </div>\n  )\n}\nexport default TrendItem;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx",["254","255","256","257","258"],"import { Field, Formik } from 'formik';\nimport React, { createRef, MouseEventHandler, useRef, useState } from 'react';\nimport { object, string } from 'yup';\nimport { User } from '../../../common/TypesAndInterfaces';\nimport '../profile.css';\nimport InputSet from './InputSet';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { EditUser } from '../../../common/queries/EditUser';\nimport avatar from \"../../../routes/mjv-d5z8_400x400.jpg\";\nimport './EditProfile.css'\nimport { EditProfileBgVal, EditProfileImageVal } from '../../../common/cache';\nimport { GetEditProfileImage } from '../../../common/queries/GetEditProfileImage';\nimport axios from 'axios';\nimport { GetEditBgImage } from '../../../common/queries/GetEditBgImage';\nimport { DeleteMedia } from '../../../common/queries/DeleteMedia';\nimport Loading from '../../../UI/Loading';\nimport ImageViewer from '../../../UI/ImageViewer';\n\n\ntype Props = {\n  user: User,\n  close: MouseEventHandler,\n  show: Boolean\n}\ninterface initials {\n  name: String,\n  bio?: String,\n  birthdate: String\n\n}\nconst EditProfile: React.FC<Props> = ({ user, close, show }) => {\n  //save media apis in state\n  const [apis, setAPIs] = useState<any>([])\n\n  const [editUser, { loading: mutLoading }] = useMutation(EditUser)\n  const [deleteMedia, { data: delData, error: delError }] = useMutation(DeleteMedia)\n  //console.log(delData, delError)\n  const { data: avatarData } = useQuery(GetEditProfileImage)\n  if (avatarData) {\n    var { EditProfileImage: { Image, ImageURL } } = avatarData\n  }\n\n  const { data: BgData } = useQuery(GetEditBgImage)\n  if (BgData) {\n    //console.assert(BgData, \"happened\")\n\n    var { EditProfileBg: { BgImage, BgImageURL } } = BgData\n    // console.log(BgImageURL)\n  }\n\n  const { data: APIENDPOINT, loading, refetch } = useQuery(gql`query{getUploadURL}`)\n\n  if (!loading && APIENDPOINT) {\n    if (APIENDPOINT.getUploadURL !== apis[apis.length - 1]) {\n      setAPIs([...apis, APIENDPOINT.getUploadURL])\n    }\n  }\n\n\n  //initial values for formik\n  const initialValues: initials = {\n    name: user.name,\n    bio: user.bio || \"\",\n    birthdate: user.birthDate || \"06/11/1998\"\n  }\n\n  //validation schema for yup\n  const validationSchema = object({\n    name: string()\n      .required('Required')\n      .max(50, 'Too long'),\n    bio: string().max(250, \"Too long\"),\n  })\n\n  //formik ref\n  const formRef: any = useRef();\n  //used after save\n  const closeButton: any = useRef();\n  //avatar image ref\n  const avatarButton: any = useRef()\n\n  const BgButton: any = useRef()\n\n\n\n  const save = async () => {\n    const dataValues = formRef.current.values\n    dataValues.bio = dataValues.bio.replaceAll(/  +/g, ' ');\n    //convert date to string\n    let ageError\n    let yourDate = dataValues.birthdate\n    if (typeof yourDate == 'string') ageError = false\n    else {\n      yourDate = new Date(dataValues.birthdate.getTime() - (yourDate.getTimezoneOffset() * 60 * 1000))\n      yourDate = yourDate.toISOString().split('T')[0]\n      //check age is older than 12\n      ageError = !((new Date().getFullYear() - Number(yourDate.substring(0, 4))) >= 12)\n      if (!ageError) dataValues.birthdate = yourDate\n    }\n\n    //overall error\n    let error = ((Object.keys(formRef.current.errors).length !== 0) || ageError)\n\n    if (!error) {\n      if (Image) {\n        var pfUrl = await Promise.resolve(handleImageUpload(Image))\n        if (pfUrl) {\n          let lastIndex = Number(user.imageURL?.lastIndexOf('/')) + 1\n          let id = user.imageURL?.substr(lastIndex || 0)\n          deleteMedia({\n            variables: {\n              id: id\n            }\n          })\n        }\n      }\n      if (BgImage) {\n        var bgUrl = await Promise.resolve(handleImageUpload(BgImage))\n        if (bgUrl) {\n\n          let lastIndex = Number(user.coverImageURL?.lastIndexOf('/')) + 1\n          let id = user.coverImageURL?.substr(lastIndex || 0)\n          console.log(id)\n          deleteMedia({\n            variables: {\n              id: id\n            }\n          })\n        }\n      }\n      //console.log(`profile link:${pfUrl}\\nbackground link:${bgUrl}\\n`)\n      await editUser({\n        variables:\n        {\n          userInput:\n          {\n            name: dataValues.name,\n            bio: dataValues.bio,\n            birthDate: dataValues.birthdate,\n            imageURL: apis && pfUrl,\n            coverImageURL: apis && bgUrl\n          },\n        }\n      })\n\n      !mutLoading && closeButton.current.click()\n    }\n\n\n\n  }\n\n  const handleImageUpload: any = async (image: any, type?: Number) => {\n    let url: any = await axios.put(apis.pop(), image, {\n      headers: {\n        'Content-Type': `${image.type}`\n      }\n    }).catch((e) => undefined)\n\n\n    console.log(\"url\", url.config.url.split('?')[0])\n    return url.config.url.split('?')[0]\n\n  }\n\n  const handleAvatarPreview = (e: any) => {\n    EditProfileImageVal({\n      Image: e.target.files[0],\n      ImageURL: URL.createObjectURL(e.target.files[0])\n    })\n  }\n\n  const handleBgPreview = (e: any) => {\n\n    console.log(\"After change\")\n    EditProfileBgVal({\n      BgImage: e.target.files[0],\n      BgImageURL: URL.createObjectURL(e.target.files[0])\n    })\n    refetch()\n\n\n  }\n\n  return (\n    show && <div className=\"py-4\">\n\n      <header className=\"flex justify-between  items-center px-3 h-6 w-full border-b border-gray-200 pb-6 pt-2\">\n\n        <div onClick={close} ref={closeButton} className=\"hover:bg-red-100 p-1 rounded-full\">\n          <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </div>\n\n        <div>\n          <h1 className=\"font-bold font-lg\">Edit Profile</h1></div>\n\n        <div>\n          <button onClick={save}\n            className=\"inline-block rounded-full px-4 \n           py-1.5 font-semibold  text-gray-800 border border-blue-400\">\n            Save\n          </button>\n        </div>\n      </header>\n\n      <main className=\"p-4\">\n\n        <div className=\"media h-64 \">\n          <div className=\"pf--bg relative \" >\n\n            {\n\n              (BgImageURL || user.coverImageURL) ? <img className=\"\" src={BgImageURL || user.coverImageURL}\n                alt=\"bg\" /> : null\n            }\n            <div className=\"absolute top-0  h-full w-full \n            hover:bg-gray-100 hover:bg-opacity-25 \n             p-16 \"\n              onClick={() => BgButton.current.click()}\n            >\n\n              <svg className=\"h-6 text-white m-auto opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n            </div>\n            <input className=\" hidden\" type=\"file\" onChange={(e) => handleBgPreview(e)} accept=\"image/*\" ref={BgButton} />\n\n\n          </div>\n\n\n          <div className=\"pf--avatar-edit\" >\n            {(\n\n              <img className=\"pf--avatar-img\" src={ImageURL || user.imageURL || avatar}\n                alt=\"avatar\" />\n\n\n            )}\n            <div className=\"absolute h-100 w-100 \n            hover:bg-gray-100 hover:bg-opacity-25 \n            rounded-full p-16 \"\n              onClick={() => avatarButton.current.click()}\n            >\n\n              <svg className=\"h-6 text-white opacity-50\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n            </div>\n            <input className=\"hidden\" type=\"file\" onChange={(e) => handleAvatarPreview(e)} accept=\"image/*\" ref={avatarButton} />\n          </div>\n\n        </div>\n\n        <div className=\"text w-full\">\n          <Formik initialValues={initialValues}\n            validationSchema={validationSchema}\n            innerRef={formRef} onSubmit={(values, actions) => {\n              console.log({ values, actions });\n\n            }}>\n            {({ values, setFieldValue, errors, touched }) => (<form>\n\n              <div className=\" hover:text-blue-500 hover:border-blue-400\n              rounded-md border border-gray-300 text-gray-800 px-2 mb-2 py\">\n\n                <label htmlFor=\"name\" className=\" w-14 inline-block text-xs \">\n                  Name\n                </label>\n                <p className=\"inline-block float-right text-xs\">{values.name.length}/{50}</p>\n                <Field className=\" w-full focus:outline-none block h-6 mb-2\"\n                  id=\"name\" name=\"name\" maxLength=\"50\" />\n                {errors.name && touched.name ? (\n                  <div className=\"text-red-600 font-semibold\">{errors.name}</div>\n                ) : null}\n              </div>\n\n              <br />\n              <div className=\" hover:text-blue-500 hover:border-blue-400\n              rounded-md border border-gray-300 text-gray-800 px-2 mb-2 py\">\n\n                <label htmlFor=\"bio\" className=\" w-14 inline-block text-xs \">\n                  Bio\n                </label>\n                <p className=\"inline-block float-right text-xs\">{(values.bio == null) ? \"0\" : values.bio?.length}/{250}</p>\n                <Field className=\" w-full focus:outline-none block h-32 resize-none\"\n                  id=\"bio\" name=\"bio\" maxLength=\"250\" as=\"textarea\" />\n                {errors.bio && touched.bio ? (\n                  <div className=\"text-red-600 font-semibold\">{errors.bio}</div>\n                ) : null}\n              </div>\n\n              <div className=\" \n              rounded-md text-gray-800 px-2 mb-2 py\">\n                <Field id=\"birthdate\" name=\"birthdate\" as={InputSet} bD={values.birthdate} setF={setFieldValue} ></Field>\n                {errors.birthdate && touched.birthdate ? (\n                  <div className=\"text-red-600 font-semibold\">{errors.birthdate}</div>\n                ) : null}\n              </div>\n\n            </form>)}\n          </Formik>\n        </div>\n\n      </main>\n    </div>\n  )\n}\nexport default EditProfile;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx",["259","260","261","262"],"import React, { useState } from 'react'\nimport './tweet.css';\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\n\nimport { timeConverter } from '../../common/utils/timestamp';\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\nimport Modal from '../../UI/Modal/Modal';\nimport PostTweet from './PostTweet';\n\nexport interface TweetData {\n  user?: {\n    imageURL?: string\n    name?: string\n    userName?: string\n  }\n  id?: string\n  text: string\n  likesCount?: number\n  repliesCount?: number\n  createdAt?: number\n  isLiked?: boolean\n}\n\nfunction Tweet(props: any) {\n  const [edit, setEdit] = useState<boolean>(false);\n  const modalClosed = () => setEdit(false);\n\n  return (\n\n\n    <div className=\"tweet-box \">\n\n      <Modal show={edit} modalClosed={modalClosed} className=\"pb-4\" >\n\n        <header className=\"flex justify-between items-center px-3 h-8 w-full border-b border-gray-200 pb-6 pt-2\">\n\n          <div onClick={modalClosed} className=\" p-1 rounded-full\">\n            <svg className=\"h-8 w-5 pt-2 mt-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </div>\n\n        </header>\n        <PostTweet />\n      </Modal>\n\n\n      <div className=\"tweet-icon mr-2\">\n        {props.user?.imageURL ? (\n          <img src={props.user?.imageURL}\n            alt=\"avatar\" />\n        ) : (<img src={avatar} alt=\"avatar\" />)}\n      </div>\n      <div className=\"tweet-aside\">\n        <div className=\"tweet-data py-1\">\n          <p className=\"font-bold mr-1\">{props.user?.name}</p>\n          <p className=\"p--light-color\"> @{props.user?.userName} . </p>\n          <p className=\"p--light-color px-1\"> {props.createdAt ? timeConverter(Number(props.createdAt)) : null}</p>\n          <span className=\"tweet-ellipsis p--light-color z-10 \">\n\n\n            <ToolBox\n              design={\n                <i className=\"fas fa-ellipsis-h\"></i>\n              }\n            >\n\n              <ul className=\" bg-gray-100 mb-40 ml-4 absolute bg-gray-100 \" >\n\n                <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >block</a>\n                <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >mute</a>\n\n              </ul>\n            </ToolBox>\n\n          </span>\n        </div>\n        <div className=\"tweet-content\">\n          <span>\n            {props.text}\n          </span>\n          <div className=\"tweet-toolbar p--light-color\">\n            <a onClick={() => setEdit(true)}>\n              <i className=\"fas fa-reply text-base font-sm \"></i>\n              <span>{props.repliesCount}</span>\n            </a>\n\n            <a>\n              <ToolBox\n                design={\n                  <div className=\"border-0\">\n                    <i className=\"fas fa-retweet text-base font-sm\"></i>\n                    <span>2</span>\n                  </div>\n                }\n              >\n                <ul className=\"mb-40 absolute ml-12 bg-gray-100 \" >\n\n                  <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >Retweet</a>\n                  <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" onClick={() => setEdit(true)}>quote Retweet</a>\n\n                </ul>\n              </ToolBox>\n            </a>\n\n            <a href=\"/\">\n              <i className=\"far fa-heart text-base font-sm\"></i>\n              <span>{props.likesCount}</span>\n            </a>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Tweet;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/EditUser.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx",["263"],"import React, { Fragment } from 'react';\n\ninterface toolProps {\n  className?: string;\n  children?: any;\n  design?:any;\n}\n\nexport class ToolBox extends React.Component<toolProps>  {\ntoggleContainer:any =  React.createRef<HTMLDivElement>();\nstate = {\n        isOpen: true,\n    };\n\n  constructor(props :any) {\n    super(props);\n    this.state = { isOpen: false };\n    this.toggleContainer  =  React.createRef();\n\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onClickOutsideHandler = this.onClickOutsideHandler.bind(this);\n  }\n  \n  onClickHandler  = (e:any) => {\n      this.setState(state => {\n        if (this.state.isOpen){\n          return {\n            isOpen: false\n          };\n        }\n        else {\n          return {\n            isOpen: true\n          };\n        }\n\n      });\n    };\n\n    componentDidMount() {\n        document.addEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n    componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n\n\n    onClickOutsideHandler(event : any ) {\n      if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\n        this.setState({ isOpen: false });\n      }\n    }\n  \n    render() {\n      return (\n        <Fragment>\n        <div className=\"flex-initial\"  ref={this.toggleContainer}>\n         {this.state.isOpen && (\n          <div>\n           { this.props.children}\n          </div>\n        )}\n <div>\n      <a className= {`${this.props.className}`} onClick={this.onClickHandler}>\n        <div>\n      { this.props.design}\n      </div>\n       </a>\n  </div>\n </div>\n </Fragment>\n      );\n    }\n  }","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Follow.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditBgImage.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/DeleteMedia.ts",[],{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":12,"column":8,"nodeType":"270","messageId":"271","endLine":12,"endColumn":23},{"ruleId":"268","severity":1,"message":"272","line":28,"column":13,"nodeType":"270","messageId":"271","endLine":28,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":29,"column":32,"nodeType":"275","messageId":"276","endLine":29,"endColumn":34},{"ruleId":"268","severity":1,"message":"277","line":2,"column":17,"nodeType":"270","messageId":"271","endLine":2,"endColumn":26},{"ruleId":"268","severity":1,"message":"278","line":16,"column":8,"nodeType":"270","messageId":"271","endLine":16,"endColumn":15},{"ruleId":"268","severity":1,"message":"279","line":17,"column":8,"nodeType":"270","messageId":"271","endLine":17,"endColumn":19},{"ruleId":"268","severity":1,"message":"280","line":36,"column":31,"nodeType":"270","messageId":"271","endLine":36,"endColumn":38},{"ruleId":"268","severity":1,"message":"281","line":36,"column":47,"nodeType":"270","messageId":"271","endLine":36,"endColumn":55},{"ruleId":"282","severity":1,"message":"283","line":72,"column":17,"nodeType":"284","endLine":73,"endColumn":33},{"ruleId":"282","severity":1,"message":"283","line":85,"column":13,"nodeType":"284","endLine":85,"endColumn":46},{"ruleId":"282","severity":1,"message":"283","line":90,"column":13,"nodeType":"284","endLine":90,"endColumn":16},{"ruleId":"282","severity":1,"message":"283","line":103,"column":19,"nodeType":"284","endLine":104,"endColumn":62},{"ruleId":"282","severity":1,"message":"283","line":64,"column":7,"nodeType":"284","endLine":64,"endColumn":79},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"@typescript-eslint/no-unused-vars","'Profilewallpage' is defined but never used.","Identifier","unusedVar","'data2' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createRef' is defined but never used.","'Loading' is defined but never used.","'ImageViewer' is defined but never used.","'delData' is assigned a value but never used.","'delError' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
