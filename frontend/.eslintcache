[{"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\index.tsx":"1","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\App.tsx":"3","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\apolloClient.ts":"4","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\jwtDecoder.ts":"5","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\routes\\routing.tsx":"6","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\cache.ts":"7","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\routes\\Explore.tsx":"8","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\notFound\\notFound.tsx":"9","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\Profile.tsx":"10","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Home.tsx":"11","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\login_form\\login.tsx":"12","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\landingPage\\landingPage.tsx":"13","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\ExtendedTweet\\ExtendedTweet.tsx":"14","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\signup_form\\signup.tsx":"15","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\SerachResult.tsx":"16","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\login_query.ts":"17","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_SFW.ts":"18","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\createUser.ts":"19","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\ProfileWall.tsx":"20","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\HomeTweets.tsx":"21","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\PostTweet.tsx":"22","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\sideBar.tsx":"23","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\TrendsBar.tsx":"24","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\SearchBar\\SearchBar.tsx":"25","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\CurrentTrends\\CurrentTrends.tsx":"26","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\tweetButton\\tweetButton.tsx":"27","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\logo\\logo.tsx":"28","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\Footer\\Footer.tsx":"29","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Loading.tsx":"30","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\FoF\\FoF.tsx":"31","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_SINGLE_TWEET.ts":"32","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Tweet.tsx":"33","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Get_Search_Result.ts":"34","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Get_SearchBar_Value.ts":"35","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\decode.ts":"36","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\writeCache.ts":"37","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\createTweet.ts":"38","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_Hashtags.ts":"39","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Userqery.tsx":"40","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetList.tsx":"41","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\ProfileInfo.tsx":"42","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\ListOfUsers\\PersonItem\\PersonItem.tsx":"43","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\CurrentTrends\\TrendItem\\TrendItem.tsx":"44","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\ListOfUsers\\listofusers.tsx":"45","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetToolbarIcons.tsx":"46","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetImg.tsx":"47","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\SideList\\SideList.tsx":"48","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Modal\\Modal.tsx":"49","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\flootProfile\\flootProfile.tsx":"50","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\sideBarItem\\sideBarItem.tsx":"51","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Retweet.tsx":"52","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\QoutedTweet.tsx":"53","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Feedtweets.tsx":"54","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetInfo.tsx":"55","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\TweetQuery.tsx":"56","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\timestamp.ts":"57","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\FollowButton\\FollowButton.tsx":"58","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\EditUser\\EditProfile.tsx":"59","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\toolbox\\toolbox.tsx":"60","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\DeleteMedia.ts":"61","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\deleteTweet.ts":"62","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\logout\\logout.tsx":"63","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Backdrop\\Backdrop.tsx":"64","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Dialogs\\ErroDialog.tsx":"65","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Dialogs\\DeleteConfirmationDialog.tsx":"66","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Follow.ts":"67","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GetEditBgImage.ts":"68","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GetEditProfileImage.ts":"69","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\EditUser.ts":"70","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\EditUser\\InputSet.tsx":"71","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\FollowWall.tsx":"72","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\FollowingList.tsx":"73","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\FollowerList.tsx":"74","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\followerList.tsx":"75"},{"size":312,"mtime":1621817510203,"results":"76","hashOfConfig":"77"},{"size":425,"mtime":1612315084930,"results":"78","hashOfConfig":"77"},{"size":750,"mtime":1619787981064,"results":"79","hashOfConfig":"77"},{"size":555,"mtime":1619787981069,"results":"80","hashOfConfig":"77"},{"size":359,"mtime":1619595537253,"results":"81","hashOfConfig":"77"},{"size":3476,"mtime":1621930811897,"results":"82","hashOfConfig":"77"},{"size":5163,"mtime":1621817566089,"results":"83","hashOfConfig":"77"},{"size":1226,"mtime":1619595538780,"results":"84","hashOfConfig":"77"},{"size":132,"mtime":1619595538365,"results":"85","hashOfConfig":"77"},{"size":637,"mtime":1619843288596,"results":"86","hashOfConfig":"77"},{"size":852,"mtime":1619765000848,"results":"87","hashOfConfig":"77"},{"size":4630,"mtime":1619787981108,"results":"88","hashOfConfig":"77"},{"size":1983,"mtime":1619765000849,"results":"89","hashOfConfig":"77"},{"size":3233,"mtime":1621864722917,"results":"90","hashOfConfig":"77"},{"size":13830,"mtime":1619787981111,"results":"91","hashOfConfig":"77"},{"size":2770,"mtime":1621938832402,"results":"92","hashOfConfig":"77"},{"size":229,"mtime":1619595537232,"results":"93","hashOfConfig":"77"},{"size":116,"mtime":1619765000820,"results":"94","hashOfConfig":"77"},{"size":249,"mtime":1619765000845,"results":"95","hashOfConfig":"77"},{"size":3799,"mtime":1621928757235,"results":"96","hashOfConfig":"77"},{"size":2834,"mtime":1621817566177,"results":"97","hashOfConfig":"77"},{"size":4199,"mtime":1619843288801,"results":"98","hashOfConfig":"77"},{"size":2112,"mtime":1619843288714,"results":"99","hashOfConfig":"77"},{"size":1602,"mtime":1619595538316,"results":"100","hashOfConfig":"77"},{"size":2245,"mtime":1619595538239,"results":"101","hashOfConfig":"77"},{"size":1053,"mtime":1619595537770,"results":"102","hashOfConfig":"77"},{"size":1226,"mtime":1619843288715,"results":"103","hashOfConfig":"77"},{"size":274,"mtime":1619787981120,"results":"104","hashOfConfig":"77"},{"size":576,"mtime":1619595537813,"results":"105","hashOfConfig":"77"},{"size":380,"mtime":1619787981067,"results":"106","hashOfConfig":"77"},{"size":366,"mtime":1619787981065,"results":"107","hashOfConfig":"77"},{"size":1018,"mtime":1621863033520,"results":"108","hashOfConfig":"77"},{"size":5992,"mtime":1621909270422,"results":"109","hashOfConfig":"77"},{"size":323,"mtime":1619789758984,"results":"110","hashOfConfig":"77"},{"size":139,"mtime":1619765000825,"results":"111","hashOfConfig":"77"},{"size":367,"mtime":1619595536867,"results":"112","hashOfConfig":"77"},{"size":6220,"mtime":1621817566095,"results":"113","hashOfConfig":"77"},{"size":1282,"mtime":1619937914116,"results":"114","hashOfConfig":"77"},{"size":225,"mtime":1619595536944,"results":"115","hashOfConfig":"77"},{"size":1022,"mtime":1621939085564,"results":"116","hashOfConfig":"77"},{"size":3219,"mtime":1621817566240,"results":"117","hashOfConfig":"77"},{"size":4921,"mtime":1621933043854,"results":"118","hashOfConfig":"77"},{"size":1813,"mtime":1621929042937,"results":"119","hashOfConfig":"77"},{"size":999,"mtime":1619595537809,"results":"120","hashOfConfig":"77"},{"size":1082,"mtime":1619787981116,"results":"121","hashOfConfig":"77"},{"size":2188,"mtime":1621932509430,"results":"122","hashOfConfig":"77"},{"size":686,"mtime":1619937914204,"results":"123","hashOfConfig":"77"},{"size":567,"mtime":1619595536851,"results":"124","hashOfConfig":"77"},{"size":671,"mtime":1619765000813,"results":"125","hashOfConfig":"77"},{"size":2920,"mtime":1619937914121,"results":"126","hashOfConfig":"77"},{"size":1055,"mtime":1619765000863,"results":"127","hashOfConfig":"77"},{"size":1399,"mtime":1621863393425,"results":"128","hashOfConfig":"77"},{"size":3056,"mtime":1621861806767,"results":"129","hashOfConfig":"77"},{"size":1415,"mtime":1621817566090,"results":"130","hashOfConfig":"77"},{"size":3666,"mtime":1621817566210,"results":"131","hashOfConfig":"77"},{"size":1334,"mtime":1621817566092,"results":"132","hashOfConfig":"77"},{"size":538,"mtime":1619765000847,"results":"133","hashOfConfig":"77"},{"size":1509,"mtime":1619787981076,"results":"134","hashOfConfig":"77"},{"size":11193,"mtime":1619787981122,"results":"135","hashOfConfig":"77"},{"size":1731,"mtime":1621817566172,"results":"136","hashOfConfig":"77"},{"size":151,"mtime":1619765000817,"results":"137","hashOfConfig":"77"},{"size":175,"mtime":1621817566094,"results":"138","hashOfConfig":"77"},{"size":699,"mtime":1619937914118,"results":"139","hashOfConfig":"77"},{"size":338,"mtime":1619595536844,"results":"140","hashOfConfig":"77"},{"size":675,"mtime":1621817566088,"results":"141","hashOfConfig":"77"},{"size":964,"mtime":1621817566087,"results":"142","hashOfConfig":"77"},{"size":219,"mtime":1619595536889,"results":"143","hashOfConfig":"77"},{"size":149,"mtime":1619765000821,"results":"144","hashOfConfig":"77"},{"size":155,"mtime":1619765000823,"results":"145","hashOfConfig":"77"},{"size":243,"mtime":1619765000818,"results":"146","hashOfConfig":"77"},{"size":1099,"mtime":1619765000856,"results":"147","hashOfConfig":"77"},{"size":864,"mtime":1621936212037,"results":"148","hashOfConfig":"77"},{"size":2035,"mtime":1621939290298,"results":"149","hashOfConfig":"77"},{"size":1996,"mtime":1621937321292,"results":"150","hashOfConfig":"77"},{"size":1998,"mtime":1621939271825,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"9iq5vy",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"154"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"154"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"198","usedDeprecatedRules":"154"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"154"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"154"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"154"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"154"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"154"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"154"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"154"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"154"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"309","usedDeprecatedRules":"154"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\index.tsx",[],["316","317"],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\App.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\apolloClient.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\jwtDecoder.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\routes\\routing.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\cache.ts",["318","319","320","321","322","323","324"],"import { InMemoryCache, makeVar, ReactiveVar } from \"@apollo/client\";\r\nimport { searchBarValue } from \"./TypesAndInterfaces\";\r\n\r\nconst createPaginationAndCombine = (keyArgs: any[]) => ({\r\n    merge(existing: any, incoming: any) {\r\n        const merged = existing ? existing.slice(0) : [];\r\n\r\n        let breakFlag = 0;\r\n        let i = 0;\r\n        let j = 0;\r\n        for (i = 0; i < merged.length; i++) {\r\n            if (breakFlag) break;\r\n            for (j = 0; j < incoming.length; j++) {\r\n                if (merged[i].__ref == incoming[j].__ref) {\r\n                    breakFlag = 1;\r\n                    i -= 2;\r\n                    break;\r\n                }\r\n            }\r\n            j = 0;\r\n        }\r\n        if (i == merged.length) i--;\r\n        for (; j < incoming.length; j++) {\r\n            merged[++i] = incoming[j];\r\n        }\r\n        return merged.slice(0, i + 1);\r\n    },\r\n    read(existing: any) {\r\n        return existing;\r\n    },\r\n    keyArgs,\r\n});\r\nconst createPaginationAndCombineTweetsElements = (keyArgs: any[]) => ({\r\n    merge(existing: any, incoming: any) {\r\n        const merged = existing\r\n            ? { totalCount: existing.totalCount, tweets: [...existing.tweets] }\r\n            : { totalCount: 0, tweets: [] };\r\n        merged.totalCount = incoming.totalCount;\r\n        let i = 0;\r\n        let j = 0;\r\n        let k = 0;\r\n        for (i = 0; i < merged.tweets.length; i++) {\r\n            for (j = k; j < incoming.tweets.length; j++) {\r\n                if (merged.tweets[i].__ref < incoming.tweets[j].__ref) {\r\n                    merged.tweets.unshift(incoming.tweets[j])\r\n                    k++;\r\n                    break\r\n                }\r\n                if (merged.tweets[i].__ref == incoming.tweets[j].__ref) {\r\n                    merged.tweets[i] = incoming.tweets[j];\r\n                    k++;        \r\n                    break;\r\n                }\r\n            }\r\n        }  \r\n        if (i == merged.tweets.length) i--;\r\n        for (j=k; j < incoming.tweets.length; j++) {\r\n            merged.tweets[++i] = incoming.tweets[j];\r\n        }\r\n        merged.tweets.slice(0, i + 1);\r\n        return merged;\r\n    },\r\n    read(existing: any) {\r\n        return existing;\r\n    },\r\n    keyArgs,\r\n});\r\n\r\nconst createPaginationAndCombineUsersElements = (keyArgs: any[]) => ({\r\n    merge(existing: any, incoming: any) {\r\n        const merged = existing\r\n            ? { totalCount: existing.totalCount, users: [...existing.users] }\r\n            : { totalCount: 0, users: [] };\r\n        merged.totalCount = incoming.totalCount;\r\n        let i = 0;\r\n        let j = 0;\r\n        let k = 0;\r\n        for (i = 0; i < merged.users.length; i++) {\r\n            for (j = k; j < incoming.users.length; j++) {\r\n                if (merged.users[i].__ref < incoming.users[j].__ref) {\r\n                    merged.users.unshift(incoming.users[j])\r\n                    k++;\r\n                    break\r\n                }\r\n                if (merged.users[i].__ref == incoming.users[j].__ref) {\r\n                    merged.users[i] = incoming.users[j]\r\n                    k++\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (i == merged.users.length) i--;\r\n        for (j=k; j < incoming.users.length; j++) {\r\n            merged.users[++i] = incoming.users[j];\r\n        }\r\n        merged.users.slice(0, i + 1);\r\n        return merged;\r\n    },\r\n    read(existing: any) {\r\n        return existing;\r\n    },\r\n    keyArgs,\r\n});\r\n\r\nexport const cache: InMemoryCache = new InMemoryCache({\r\n    typePolicies: {\r\n        Query: {\r\n            fields: {\r\n                searchBarValue: {\r\n                    read() {\r\n                        return searchBarVar();\r\n                    },\r\n                },\r\n                EditProfileImage: {\r\n                    read() {\r\n                        return EditProfileImageVal();\r\n                    },\r\n                },\r\n                EditProfileBg: {\r\n                    read() {\r\n                        return EditProfileBgVal();\r\n                    },\r\n                },\r\n\r\n                SFW: {\r\n                    read() {\r\n                        return SFW();\r\n                    },\r\n                },\r\n                getFeed: createPaginationAndCombineTweetsElements([\"isSFW\"]),\r\n                tweets: createPaginationAndCombineTweetsElements([\r\n                    \"userId\",\r\n                    \"filter\",\r\n                    \"isSFW\",\r\n                ]),\r\n                users: createPaginationAndCombineUsersElements([\"search\"]),\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport const searchBarVar: ReactiveVar<searchBarValue> = makeVar<searchBarValue>(\r\n    { value: \"\" }\r\n);\r\n\r\nexport const EditProfileImageVal: ReactiveVar<{\r\n    Image: object | false;\r\n    ImageURL: string | false;\r\n}> = makeVar<any>({\r\n    Image: false,\r\n    ImageURL: false,\r\n});\r\nexport const EditProfileBgVal: ReactiveVar<{\r\n    BgImage: object | false;\r\n    BgImageURL: string | false;\r\n}> = makeVar<any>({\r\n    BgImage: false,\r\n    BgImageURL: false,\r\n});\r\n\r\nexport const SFW: ReactiveVar<{ value: boolean }> = makeVar<any>({\r\n    value: true,\r\n});\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\routes\\Explore.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\notFound\\notFound.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\Profile.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Home.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\login_form\\login.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\landingPage\\landingPage.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\ExtendedTweet\\ExtendedTweet.tsx",["325","326","327"],"import React, { Fragment } from 'react';\r\nimport '../../../styles/layout.css'\r\nimport Tweet from '../Tweet';\r\nimport { TweetData } from '../TweetData_interface'\r\nimport { SideBar } from '../../sideBar/sideBar';\r\nimport TrendsBar from '../../TrendsBar/TrendsBar';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_SINGLE_TWEET } from '../../../common/queries/GET_SINGLE_TWEET';\r\nimport { Get_SFW } from '../../../common/queries/GET_SFW';\r\nimport { useLocation } from 'react-router';\r\nimport Loading from '../../../UI/Loading';\r\nimport FoF from '../../../UI/FoF/FoF';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ExtendedTweet: React.FC = () => {\r\n\r\n  const sfw = useQuery(Get_SFW).data;\r\n  const location = useLocation()\r\n  let urlId = location.pathname.substr(7)\r\n\r\n  console.log(urlId)\r\n  const { data, loading, error } = useQuery(GET_SINGLE_TWEET, {\r\n    variables: {\r\n      tweetId: urlId,\r\n      isSFW: sfw.SFW.value,\r\n    }\r\n  })\r\n  console.log(\"%c%o\", \"color:red\", error?.extraInfo)\r\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\r\n  if (error) return <FoF\r\n    msg=\"This tweet doesn’t exist\"\r\n  />\r\n  console.log(data)\r\n\r\n  const tweet: TweetData = data.tweet\r\n  console.log(tweet)\r\n  return (\r\n    <Fragment>\r\n\r\n      <main className=\"main-container\">\r\n        <aside className=\"sb-left\">< SideBar /></aside>\r\n        <article className=\"wall\">\r\n\r\n          <header className=\"top-bar px-3 py-2\">\r\n            <span className=\" m-3\">\r\n              <Link to=\"/\">\r\n                <i className=\"fa fa-arrow-left  p--main-color\" aria-hidden=\"true\"></i>\r\n              </Link>\r\n\r\n            </span>\r\n            <div>\r\n              <p className=\"font-extrabold text-lg \">{tweet.user?.name}'s awosome Tweet</p>\r\n              {/* featch front tweet */}\r\n\r\n            </div>\r\n          </header>\r\n\r\n          <Tweet\r\n            id={tweet.id}\r\n            text={tweet.text}\r\n            repliesCount={tweet.repliesCount}\r\n            createdAt={tweet.createdAt}\r\n            isLiked={tweet.isLiked}\r\n            user={tweet.user}\r\n            likesCount={tweet.likesCount}\r\n            quotedRetweetsCount={tweet.quotedRetweetsCount}\r\n            retweetsCount = {tweet.retweetsCount}\r\n            state={tweet.state}\r\n            originalTweet={tweet.originalTweet}\r\n            repliedToTweet={tweet.repliedToTweet}\r\n          />\r\n\r\n            <p className=\"font-bold px-4 text-gray-600 m-3\"> \r\n            {tweet.retweetsCount} <a className = \"font-light text-gray-500 \"> Retweeted </a> .  {tweet.quotedRetweetsCount} <a className = \"font-light text-gray-500 \"> Quoted Tweets </a> . { tweet.likesCount} <a className = \"font-light text-gray-500 \"> likes </a>\r\n            </p>\r\n          <div>\r\n            <pre className=\"p-4 bg-gray-900 text-blue-200\" ><span className=\"text-green-500 block\">{\"//TODO: fetch tweet replies\"}</span>\r\n              <span className=\"text-blue-400\">const</span> replies <span className=\"text-white\">=</span> fetch(<span className=\"text-blue-400\">replies</span>);\r\n            </pre>\r\n          </div>\r\n        </article>\r\n\r\n        <aside className=\"sb-right\">< TrendsBar /></aside>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ExtendedTweet ;\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\signup_form\\signup.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\SerachResult.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\login_query.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_SFW.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\createUser.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\ProfileWall.tsx",["328"],"import { Fragment, useState } from 'react';\r\nimport '../../App.css';\r\nimport './profile.css';\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport '../../styles/layout.css'\r\nimport { useQuery } from '@apollo/client';\r\nimport { LoggedUser } from '../../common/queries/Userqery';\r\nimport TweetList from '../tweets/TweetList'\r\nimport { Switch, NavLink, Route, useLocation, useRouteMatch } from \"react-router-dom\"\r\nimport { parseJwt } from '../../common/decode';\r\nimport Loading from \"../../UI/Loading\"\r\nimport FoF from '../../UI/FoF/FoF';\r\n\r\n\r\nfunction ProfileWall() {\r\n  let self = false;\r\n  let ID: string;\r\n  let profile;\r\n  if (localStorage.getItem('token')) {\r\n    profile = parseJwt(localStorage.getItem('token'))\r\n  }\r\n\r\n  const location = useLocation()\r\n  console.log(location.pathname.substr(1))\r\n  const match = useRouteMatch();\r\n  const path = location.pathname.substr(1)\r\n  const lastIndex = location.pathname.lastIndexOf('/')\r\n  let urlId = path\r\n\r\n  // const location = useLocation()\r\n  // const path = location.pathname.substr(1)\r\n//   if (location.pathname.substr(1) !== \" \"){\r\n// ID = location.pathname.substr(1)\r\n//   }\r\n// else {\r\n//   ID = profile.id\r\n// }\r\n\r\n\r\n\r\n\r\n  if (lastIndex !== 0) urlId = urlId.substr(0, lastIndex - 1)\r\n  console.log(urlId)\r\n  if (urlId === 'profile' ||\r\n    (profile && urlId == profile.id)) {\r\n    ID = profile.id; self = true;\r\n    console.log(typeof urlId, typeof profile.id)\r\n  }\r\n  else ID = urlId\r\n\r\n\r\n  const { data, loading, error } = useQuery(LoggedUser, { variables: { id: ID } });\r\n  const [tweetsPage, setTweetsPage] = useState<any>(1);\r\n  const [tweetsRepliesPage, setTweetsRepliesPage] = useState<any>(1);\r\n  const [mediaPage, setMediaPage] = useState<any>(1);\r\n  const [likesPage, setLikesPage] = useState<any>(1);\r\n\r\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\r\n  if (error) return <FoF\r\n    msg=\"This account doesn’t exist\"\r\n    secMsg=\"try search for another\"\r\n  />\r\n  return (\r\n    < Fragment >\r\n      <ProfileInfo user={data.user} self={self} />\r\n\r\n      <nav >\r\n        <ul className=\"pf--nav-ul \">\r\n          <NavLink exact activeClassName=\"active\" className=\"pf--nav-link\" to={match.url}>\r\n            <li>Tweets</li>\r\n          </NavLink>\r\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/replies'}>\r\n            <li>Tweets & replies</li>\r\n          </NavLink>\r\n\r\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/media'}>\r\n            <li>Media</li>\r\n          </NavLink>\r\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/likes'}>\r\n            <li>Likes</li>\r\n          </NavLink>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"tweets\">\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={match.url}\r\n            render={() => (\r\n              <TweetList filter={``} page={tweetsPage} setPage={setTweetsPage} id={ID} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={match.url + '/replies'}\r\n            render={() => (\r\n              <TweetList filter={`replies&tweets`} page={tweetsRepliesPage} setPage={setTweetsRepliesPage} id={ID} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={match.url + '/media'}\r\n            render={() => (\r\n              <TweetList filter={`media`} page={mediaPage} setPage={setMediaPage} id={ID} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={match.url + '/likes'}\r\n            render={() => (\r\n              <TweetList filter={`likes`} page={likesPage} setPage={setLikesPage} id={ID} />\r\n            )}\r\n          />\r\n        </Switch>\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </Fragment >\r\n  );\r\n}\r\n\r\nexport default ProfileWall;","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\HomeTweets.tsx",["329","330"],"import React, { useState } from \"react\";\r\n\r\nimport { useQuery } from \"@apollo/client\";\r\nimport Tweet from \"./Tweet\";\r\nimport { TweetData } from \"./TweetData_interface\";\r\nimport { FeedTweets } from \"../../common/queries/Feedtweets\";\r\nimport Loading from \"../../UI/Loading\";\r\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport {parseJwt} from '../../common/utils/jwtDecoder'\r\n\r\nfunction HomeTweets() {\r\n    let [page, setPage] = useState(1);\r\n    const sfw = useQuery(Get_SFW).data;\r\n    const loggedUser = parseJwt(localStorage.getItem('token')!)\r\n    const { loading, error, data, fetchMore } = useQuery(FeedTweets, {\r\n        variables: {\r\n            isSFW: sfw.SFW.value,\r\n        },\r\n    });\r\n    if(!loading && data && data?.getFeed?.tweets?.length == 10 && data?.getFeed?.totalCount > 10){\r\n        fetchMore({\r\n            variables: {\r\n                isSFW: sfw.SFW.value,\r\n                page: 2,\r\n            },\r\n        })\r\n    }\r\n    if (loading) return <Loading />;\r\n    if (error) return <p>`Error! this is the one ${error.message}`</p>;\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            dataLength={data?.getFeed?.tweets?.length || 0}\r\n            next={() => {\r\n                setPage(Math.floor((data?.getFeed?.tweets?.length || 10)/10) +1 );\r\n                return fetchMore({\r\n                    variables: {\r\n                        isSFW: sfw.SFW.value,\r\n                        page: Math.floor((data?.getFeed?.tweets?.length || 10)/10) +1 ,\r\n                    },\r\n                });\r\n            }}\r\n            hasMore={data?.getFeed?.totalCount >= page * 10 || false}\r\n            loader={<Loading />}\r\n            style={{\r\n                overflow: \"hidden\"\r\n            }}\r\n        >\r\n            {data?.getFeed?.tweets?.map((tweet: TweetData) => {\r\n                return (\r\n                    <Tweet\r\n                        id={tweet.id}\r\n                        text={tweet.text}\r\n                        repliesCount={tweet.repliesCount}\r\n                        createdAt={tweet.createdAt}\r\n                        isLiked={tweet.isLiked}\r\n                        user={tweet.user}\r\n                        loggedUser={loggedUser}\r\n                        tweet={tweet}\r\n                        likesCount={tweet.likesCount}\r\n                        key={tweet.id}\r\n                        quotedRetweetsCount = {tweet. quotedRetweetsCount}\r\n                        retweetsCount = { tweet.retweetsCount}\r\n                        state= {tweet.state}\r\n                        originalTweet = { tweet.originalTweet}\r\n                        repliedToTweet = { tweet.repliedToTweet}\r\n                    />\r\n                );\r\n            })}\r\n        </InfiniteScroll>\r\n    );\r\n}\r\n\r\nexport default HomeTweets;\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\PostTweet.tsx",["331","332"],"import { ErrorMessage, Field, Form, Formik } from \"formik\"\r\nimport React, { useRef } from \"react\"\r\nimport * as Yup from \"yup\"\r\nimport { TweetButton } from '../sideBar/tweetButton/tweetButton'\r\nimport { Tweets } from '../../common/queries/TweetQuery'\r\nimport { FeedTweets } from '../../common/queries/Feedtweets'\r\nimport { Post_Tweet } from '../../common/queries/createTweet'\r\nimport { useMutation } from \"@apollo/client\"\r\nimport {updateTweetsCacheForCreateTweet} from \"../../common/utils/writeCache\"\r\nimport './tweet.css';\r\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\r\nimport { parseJwt } from '../../common/decode';\r\ninterface Post {\r\n  text: string\r\n}\r\nconst PostTweet = () => {\r\n  var profile: any;\r\n  if (localStorage.getItem('token') !== \"LOGOUT\") {\r\n    profile = parseJwt(localStorage.getItem('token'))\r\n  }\r\n  console.log(profile.id)\r\n  // const userData = useQuery (Get_Logged_user)\r\n  // const user:User = userData.data.logUser.user\r\n  // console.log (user.imageURL)\r\n\r\n  const inputRef: any = useRef()\r\n  // mutation\r\n  const [createTweet, { data }] = useMutation(Post_Tweet, {\r\n    update: updateTweetsCacheForCreateTweet\r\n  });\r\n  console.log(`this ${inputRef.current}`)\r\n\r\n  const initialValues: Post = {\r\n    text: \"\"\r\n  }\r\n  /********   dynamic hight control funtion   ***********/\r\n  function setInputHight(element: React.ChangeEvent<HTMLElement>) {\r\n    element.target.style.height = \"60px\"\r\n    element.target.style.height = (element.target.scrollHeight) + \"px\"\r\n    inputRef.current.style.height = (element.target.scrollHeight) + \"px\"\r\n    console.log(`in ${element.target.style.height}`)\r\n    console.log(`out ${inputRef.current.style.height}`)\r\n    console.log(`scroll ${element.target.scrollHeight}`)\r\n  }\r\n  const validationSchema = Yup.object({\r\n    text: Yup.string()\r\n      .required()\r\n      .min(1, \"Must be more than 1 character\")\r\n      .max(256, \"Must be less than 257 characters\")\r\n  })\r\n  return (\r\n    <div className=\"mb-3 p-3 w-full shadow bg-white flex\">\r\n      {/* this should be dynamic */}\r\n      <div className=\"tweet-icon\">\r\n      <img src={profile.imageURL || avatar } alt=\"avatar\" />\r\n      </div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={({ text }, { setSubmitting, resetForm }) => {\r\n          setSubmitting(true);\r\n          console.log(text);\r\n          createTweet({\r\n            variables: { tweetInput: { text } },\r\n          });\r\n          console.log(`this ${data}`)\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        <div className=\"w-full mx-4 flex flex-col\">\r\n          <Form >\r\n            <div ref={inputRef} className=\"w-full mb-2 tweet-text flex h-16\">\r\n              <Field\r\n\r\n                name=\"text\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                onKeyPress={setInputHight}\r\n                className=\"w-full placeholder-gray4 p-3 ml-2 \r\n              focus:outline-none resize-none overflow-hidden min-h-12\"\r\n                placeholder=\"What's happening...\" />\r\n            </div>\r\n            <hr className=\"my-2\" />\r\n            <div className=\"flex justify-between items-center\">\r\n              <button className=\"hover:bg-blue-100 rounded-full py-2 px-3 transition\">\r\n                <svg\r\n                  className=\"h-8 w-8 text-blue-400 \"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                </svg>\r\n              </button>\r\n              <ErrorMessage name=\"text\" render={msg => <div className=\"text-red-500\">{msg}</div>} />\r\n\r\n              <TweetButton name=\"Tweet\" type=\"submit\" className=\" rounded-full py-3 px-6\" />\r\n            </div>\r\n\r\n          </Form>\r\n        </div>\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostTweet\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\sideBar.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\TrendsBar.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\SearchBar\\SearchBar.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\CurrentTrends\\CurrentTrends.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\tweetButton\\tweetButton.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\logo\\logo.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\Footer\\Footer.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Loading.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\FoF\\FoF.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_SINGLE_TWEET.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Tweet.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Get_Search_Result.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Get_SearchBar_Value.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\decode.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\writeCache.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\createTweet.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_Hashtags.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Userqery.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetList.tsx",["333"],"import React, { Fragment } from \"react\";\r\n\r\nimport { useQuery } from \"@apollo/client\";\r\n// import Tweet from '../Tweet';\r\nimport Tweet from \"./Tweet\";\r\nimport { Tweets } from \"../../common/queries/TweetQuery\";\r\nimport { TweetData } from \"./TweetData_interface\";\r\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\r\nimport Loading from \"../../UI/Loading\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { parseJwt } from \"../../common/decode\";\r\n\r\nexport interface TweetFilter {\r\n    filter: string;\r\n    page: number;\r\n    setPage: any;\r\n    id: string;\r\n}\r\n\r\nconst TweetList: React.FC<TweetFilter> = (props) => {\r\n\r\n    const { filter, page, setPage } = props;\r\n    const sfw = useQuery(Get_SFW).data;\r\n    const loggedUser = parseJwt(localStorage.getItem('token')!)\r\n    const { loading, error, data, fetchMore } = useQuery(Tweets, {\r\n        variables: {\r\n            userId: props.id,\r\n            filter: filter,\r\n            isSFW: sfw.SFW.value,\r\n        },\r\n    });\r\n    if (!loading && data && data?.tweets?.tweets?.length == 10 && data?.tweets?.totalCount > 10) {\r\n        fetchMore({\r\n            variables: {\r\n                userId: props.id,\r\n                isSFW: sfw.SFW.value,\r\n                page: 2,\r\n                filter: filter\r\n            },\r\n        })\r\n    }\r\n    if (loading) return <Fragment><br /> <br /> <Loading size={30} /></Fragment>;\r\n    if (error) return <p>`Error! ${error.message}`</p>;\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            dataLength={data?.tweets?.tweets?.length || 0}\r\n            next={() => {\r\n                setPage(Math.floor((data?.tweets?.tweets?.length || 10)/10) +1);\r\n                return fetchMore({\r\n                    variables: {\r\n                        userId: props.id,\r\n                        isSFW: sfw.SFW.value,\r\n                        page: Math.floor((data?.tweets?.tweets?.length || 10)/10) +1,\r\n                        filter: filter\r\n                    },\r\n                });\r\n            }}\r\n            style={{\r\n                overflow: \"hidden\"\r\n            }}\r\n            hasMore={data?.tweets?.totalCount > page * 10 || false}\r\n            loader={<Loading />}\r\n        >\r\n            {data.tweets.tweets.map((tweet: TweetData) => {\r\n                return (\r\n                    <Tweet\r\n                        id={tweet.id}\r\n                        text={tweet.text}\r\n                        repliesCount={tweet.repliesCount}\r\n                        createdAt={tweet.createdAt}\r\n                        isLiked={tweet.isLiked}\r\n                        user={tweet.user}\r\n                        loggedUser={loggedUser}\r\n                        tweet={tweet}\r\n                        likesCount={tweet.likesCount}\r\n                        key={tweet.id}\r\n                        quotedRetweetsCount={tweet.quotedRetweetsCount}\r\n                        retweetsCount={tweet.retweetsCount}\r\n                        state={tweet.state}\r\n                        originalTweet={tweet.originalTweet}\r\n                        repliedToTweet={tweet.repliedToTweet}\r\n                    />\r\n                );\r\n            })}\r\n        </InfiniteScroll>\r\n    );\r\n};\r\n\r\nexport default TweetList;\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\ProfileInfo.tsx",["334","335"],"import React, { Fragment, useState } from 'react';\r\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\r\nimport { User } from '../../common/TypesAndInterfaces'\r\nimport Modal from '../../UI/Modal/Modal';\r\nimport EditProfile from './EditUser/EditProfile';\r\nimport { timeConverter } from '../../common/utils/timestamp';\r\nimport { EditProfileBgVal, EditProfileImageVal } from '../../common/cache';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router';\r\nimport Viewer from 'react-viewer';\r\nimport FollowButton from '../FollowButton/FollowButton';\r\n\r\n\r\nconst ProfileInfo: React.FC<{ user: User, self: boolean }> = ({ user, self }) => {\r\n\r\n  //EDIT PROFILE MODAL\r\n  const [edit, setEdit] = useState<boolean>(false)\r\n\r\n  //background viewer\r\n  const [bgVisible, setBgVisible] = useState(false);\r\n\r\n  //profile picture viewer\r\n  const [pfVisible, setPfVisible] = useState(false);\r\n\r\n\r\n  const modalClosed = () => {\r\n    EditProfileImageVal({\r\n      Image: false,\r\n      ImageURL: false\r\n    })\r\n    EditProfileBgVal({\r\n      BgImage: false,\r\n      BgImageURL: false\r\n    })\r\n    setEdit(false)\r\n  }\r\n\r\nconst location = useHistory();\r\nconst handlePathFollowing = () => {\r\n  location.push({\r\n    pathname: location.location.pathname + \"/following\"\r\n  })\r\n  }\r\n  \r\nconst handlePathFollower = () => {\r\n  location.push({\r\n    pathname: location.location.pathname + \"/follower\"\r\n  })\r\n  }\r\n\r\n  return (\r\n\r\n    <Fragment>\r\n      <Modal show={edit}\r\n        modalClosed={modalClosed}>\r\n        <EditProfile\r\n          user={user}\r\n          show={edit}\r\n          close={modalClosed} />\r\n      </Modal>\r\n\r\n      <header className=\"top-bar px-3 py-2\">\r\n        <span className=\" m-3\">\r\n          <Link to=\"/\">\r\n\r\n            <i className=\"fa fa-arrow-left  p--main-color\" aria-hidden=\"true\"></i>\r\n          </Link>\r\n\r\n        </span>\r\n        <div>\r\n          <p className=\"font-extrabold text-lg \">{user.name}</p>\r\n          {/* featch front tweet */}\r\n          <p className=\"p--light-color block \">{user.tweets?.totalCount} tweet</p>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"pf--container\">\r\n\r\n        <div className=\"pf--bg\" >\r\n          {user.coverImageURL && (\r\n\r\n            <img className=\"pf--avatar-img\" src={user.coverImageURL}\r\n              alt=\"avatar\" onClick={() => user.coverImageURL && setBgVisible(true)} />\r\n          )}\r\n          <Viewer\r\n            visible={bgVisible}\r\n            onClose={() => { setBgVisible(false); }}\r\n            images={[{ src: user.coverImageURL || \"\", alt: 'background image' }]}\r\n          />\r\n\r\n        </div>\r\n\r\n        <div className=\"pf--avatar\">\r\n\r\n          {\r\n            <img src={user.imageURL || avatar} className=\"pf--avatar-img\"\r\n              alt=\"avatar\" onClick={() => user.imageURL && setPfVisible(true)} />\r\n\r\n\r\n          }\r\n          <Viewer\r\n            visible={pfVisible}\r\n            onClose={() => { setPfVisible(false); }}\r\n            images={[{ src: user.imageURL || \"\", alt: 'profile image' }]}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"pf--info\">\r\n          <div className=\"pf--flw-btn-div p-3 h-12\">\r\n            {self ? < button onClick={() => setEdit(true)} className={\"pf--follow-btn rounded-full px-3 font-semibold text-xm  py-2 mt-3 \"}>\r\n              Edit Profile\r\n            </button > :\r\n              <FollowButton id={user.id} following={user.isFollowing} py=\"py-2\" px=\"px-4\" />\r\n            }\r\n\r\n\r\n          </div>\r\n          <div className=\"mx-2 \">\r\n            <p className=\"font-extrabold text-lg pb-1 mt-1.5\">{user.name} </p>\r\n            <p className=\"p--light-color block pb-1\">@{user.userName} {!self && user.isFollower && <span className=\" text-gray-600 bg-gray-200 rounded font-light p-0.5 ml-1\">follows you</span>}</p>\r\n            <p className=\"whitespace-pre-wrap \">{user.bio}</p>\r\n            <div className=\"p--light-color pb-1\">\r\n              <span className=\"pr-2\"><i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i> Egypt ... cairo</span>\r\n              <span className=\"px-2\" ><i className=\"fa fa-gift\" aria-hidden=\"true\"></i> Born {user.birthDate} </span>\r\n              <span className=\"px-2\"><i className=\"fa fa-calendar\" aria-hidden=\"true\"></i> Joined {user.createdAt ? timeConverter(Number(user.createdAt), false) : null}</span>\r\n            </div>\r\n            <div className=\"font-bold pb-1 space-x-2 \">\r\n              {/* fetch followers count  */}\r\n              <a onClick={ handlePathFollowing } className =\"hover:underline\"> {Number(user.followingCount) - 1} <span className=\"p--light-color mr-4 hover:underline\">Following</span> </a>\r\n              <a onClick={ handlePathFollower }  className=\"hover:underline \"> {Number(user.followersCount) - 1} <span className=\"p--light-color mr-4\">Follower</span> </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\ListOfUsers\\PersonItem\\PersonItem.tsx",["336"],"import React from 'react';\r\n\r\nimport { PersonEntity } from '../../../../common/TypesAndInterfaces';\r\n\r\nimport './PersonItem.css'\r\nimport '../../../profile/profile.css'\r\nimport FollowButton from '../../../FollowButton/FollowButton';\r\nimport { parseJwt } from '../../../../common/decode';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst TrendItem: React.FC<PersonEntity> = ({ id, bio, isFollowing, name, username, followed = false, imageURI, numberOfFollowers }) => {\r\n  const history = useHistory();\r\n\r\n  const goToProfile = () => {\r\n    history.push({\r\n      pathname: '/' + id,\r\n    })\r\n\r\n  }\r\n\r\n  const profilePicture = (imageURI === undefined || imageURI === null) ?\r\n    <svg className=\"w-full h-full\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" /></svg> :\r\n    <img className=\"rounded-full w-full\" src={imageURI} alt=\"user\" />;\r\n\r\n  return (\r\n\r\n    <div className=\" person-item flex  justify-between items-start p-3 hover:bg-gray-100\" onClick={goToProfile}>\r\n\r\n      <div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\r\n        {profilePicture}\r\n      </div>\r\n\r\n      <div className=\"flex-grow\">\r\n        <h1 className=\"person-item-name  text-xm font-bold\">{name}</h1>\r\n        <p className=\"person-item-username\"><span className=\"text-xm\">@</span>{username}</p>\r\n        <p>{bio}</p>\r\n      </div>\r\n      <div>\r\n        {localStorage.getItem('token') && (id == parseJwt(localStorage.getItem('token')).id) ? null :\r\n          <FollowButton id={id} following={isFollowing} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default TrendItem;\r\n\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\CurrentTrends\\TrendItem\\TrendItem.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\ListOfUsers\\listofusers.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetToolbarIcons.tsx",["337","338","339"],"import { useState } from 'react'\r\nimport './tweet.css';\r\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\r\nimport Modal from '../../UI/Modal/Modal';\r\nimport PostTweet from './PostTweet';\r\n\r\nfunction TweetToolbarIcons(props: any) {\r\n  const [edit, setEdit] = useState<boolean>(false);\r\n  const modalClosed = () => setEdit(false);\r\n\r\n  return (\r\n\r\n    <div className=\"tweet-toolbar p--light-color\">\r\n      <Modal show={edit} modalClosed={modalClosed} className=\"pb-4\" >\r\n\r\n        <header className=\"flex justify-between items-center px-3 h-8 w-full border-b border-gray-200 pb-6 pt-2\">\r\n\r\n          <div onClick={modalClosed} className=\" p-1 rounded-full\">\r\n            <svg className=\"h-8 w-5 pt-2 mt-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </div>\r\n\r\n        </header>\r\n        <PostTweet />\r\n      </Modal>\r\n      <a onClick={(e) => { setEdit(true); e.stopPropagation() }}>\r\n        <i className=\"fas fa-reply text-base font-sm \" ></i>\r\n        <span>{props.repliesCount}</span>\r\n      </a>\r\n\r\n      <a>\r\n        <ToolBox\r\n          design={\r\n            <div className=\"border-0\">\r\n              <i className=\"fas fa-retweet text-base font-sm\"></i>\r\n              <span>{ Number(props.quotedRetweetsCount + props.retweetsCount)} </span>\r\n            </div>\r\n          }\r\n        >\r\n          <ul className=\"mb-40 absolute ml-12 bg-gray-100\">\r\n            <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\r\n          hover:text-gray-900\" >Retweet</a>\r\n            <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\r\n          hover:text-gray-900\" onClick={(e) => { setEdit(true); e.stopPropagation() }}>quote Retweet</a>\r\n\r\n          </ul>\r\n        </ToolBox>\r\n      </a>\r\n\r\n      <a href=\"/\">\r\n        <i className=\"far fa-heart text-base font-sm\"></i>\r\n        <span>{props.likesCount}</span>\r\n      </a>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\nexport default TweetToolbarIcons;","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetImg.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\SideList\\SideList.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Modal\\Modal.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\flootProfile\\flootProfile.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\sideBarItem\\sideBarItem.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Retweet.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\QoutedTweet.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Feedtweets.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetInfo.tsx",["340","341","342","343","344"],"import './tweet.css';\r\nimport { timeConverter } from '../../common/utils/timestamp';\r\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\r\nimport deleteTweetMutation from '../../common/queries/deleteTweet'\r\nimport { DeleteMedia } from '../../common/queries/DeleteMedia'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { CustomDialog } from 'react-st-modal'\r\nimport DeleteConfirmationDialog from \"../../UI/Dialogs/DeleteConfirmationDialog\"\r\nimport ErrorDialog from \"../../UI/Dialogs/ErroDialog\"\r\nimport { updateTweetsCacheForDeleteTweet } from \"../../common/utils/writeCache\"\r\n\r\nexport interface TweetData {\r\n  user?: {\r\n    imageURL?: string\r\n    name?: string\r\n    userName?: string\r\n  }\r\n  id?: string\r\n  text: string\r\n  likesCount?: number\r\n  repliesCount?: number\r\n  createdAt?: number\r\n  isLiked?: boolean\r\n}\r\n\r\nfunction TweetInfo(props: any) {\r\n  const history = useHistory();\r\n  const { tweet } = props\r\n  const [deleteMedia] = useMutation(DeleteMedia)\r\n  const [deleteTweet] = useMutation(deleteTweetMutation, {\r\n    update(cache) {\r\n      const normalizedId = cache.identify({\r\n        id: tweet.id,\r\n        __typename: \"Tweet\",\r\n      });\r\n      if (normalizedId) {\r\n        cache.evict({ id: normalizedId });\r\n        updateTweetsCacheForDeleteTweet(cache, tweet)\r\n      }\r\n    }\r\n  })\r\n\r\n  const goToProfile = () => {\r\n    history.replace({\r\n      pathname: '/' + props.id,\r\n\r\n    })\r\n  }\r\n  const handleDeleteButton = async () => {\r\n    try {\r\n      const result = await CustomDialog(<DeleteConfirmationDialog />, {\r\n        title: 'Confirm Delete',\r\n        showCloseIcon: false,\r\n      });\r\n      if (result) {\r\n        await deleteTweet({\r\n          variables: {\r\n            id: props.tweetId\r\n          }\r\n        })\r\n        tweet.mediaURLs.forEach((mediaURL: any) => {\r\n          deleteMedia({\r\n            variables: {\r\n              id: mediaURL.split('/')[3]\r\n            }\r\n          })\r\n        })\r\n      }\r\n    }\r\n    catch (e) {\r\n      const error = await CustomDialog(<ErrorDialog message={e.message} />, {\r\n        title: 'Error!',\r\n        showCloseIcon: false,\r\n      });\r\n    }\r\n  }\r\n  return (\r\n\r\n    <div className={`flex flex-row my-1 px-2 w-full ${props.className}`}>\r\n      <div></div>\r\n      <a onClick={(e) => { goToProfile(); e.stopPropagation() }} className=\"font-bold mr-1 hover:underline\">{props.name}</a>\r\n      <p className=\"p--light-color\"> @{props.userName}. </p>\r\n      <p className=\"p--light-color px-1 hover:underline\"> {props.createdAt ? timeConverter(Number(props.createdAt)) : null}</p>\r\n      <span className=\"tweet-ellipsis p--light-color z-10 inline-block float-right\">\r\n\r\n        {/*Don't display settings in qouted tweet*/}\r\n        {(props.type === 'Q') ? null :\r\n          <ToolBox\r\n            design={<i className=\"fas fa-ellipsis-h\"></i>}\r\n          >\r\n            <ul className=\" mb-40 right-4 absolute bg-gray-100 \" >\r\n              {props?.loggedUser?.id == props?.tweet?.user?.id ? <button onClick={handleDeleteButton} className=\"mt-1 w-40 text-center outline:none block px-4 py-2 text-sm text-red-700 bg-gray-100 hover:bg-gray-200\r\n          \" >Delete</button> : null}\r\n              <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\r\n          hover:text-gray-900\" >block</a>\r\n              <a className=\"mt-1 w-40 text-center block \r\n            px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\r\n          hover:text-gray-900\" >mute</a>\r\n\r\n            </ul>\r\n          </ToolBox>}\r\n\r\n      </span>\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default TweetInfo;","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\TweetQuery.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\timestamp.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\FollowButton\\FollowButton.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\EditUser\\EditProfile.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\toolbox\\toolbox.tsx",["345"],"import React, { Fragment } from 'react';\r\n\r\ninterface toolProps {\r\n  className?: string;\r\n  children?: any;\r\n  design?:any;\r\n}\r\n\r\nexport class ToolBox extends React.Component<toolProps>  {\r\ntoggleContainer:any =  React.createRef<HTMLDivElement>();\r\nstate = {\r\n        isOpen: true,\r\n    };\r\n\r\n  constructor(props :any) {\r\n    super(props);\r\n    this.state = { isOpen: false };\r\n    this.toggleContainer  =  React.createRef();\r\n\r\n    this.onClickHandler = this.onClickHandler.bind(this);\r\n    this.onClickOutsideHandler = this.onClickOutsideHandler.bind(this);\r\n  }\r\n  \r\n  onClickHandler  = (e:any) => {\r\n      this.setState(state => {\r\n        if (this.state.isOpen){\r\n          return {\r\n            isOpen: false\r\n          };\r\n        }\r\n        else {\r\n          return {\r\n            isOpen: true\r\n          };\r\n        }\r\n\r\n      });\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.onClickOutsideHandler);\r\n    }\r\n    componentWillUnmount() {\r\n      document.removeEventListener(\"mousedown\", this.onClickOutsideHandler);\r\n    }\r\n\r\n\r\n    onClickOutsideHandler(event : any ) {\r\n      if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\r\n        this.setState({ isOpen: false });\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Fragment>\r\n        <div className=\"flex-initial relative\"  ref={this.toggleContainer}>\r\n         {this.state.isOpen && (\r\n          <div>\r\n           { this.props.children}\r\n          </div>\r\n        )}\r\n <div>\r\n      <a className= {`${this.props.className}`} onClick={this.onClickHandler}>\r\n        <div>\r\n      { this.props.design}\r\n      </div>\r\n       </a>\r\n  </div>\r\n </div>\r\n </Fragment>\r\n      );\r\n    }\r\n  }","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\DeleteMedia.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\deleteTweet.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\logout\\logout.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Backdrop\\Backdrop.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Dialogs\\ErroDialog.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Dialogs\\DeleteConfirmationDialog.tsx",["346"],"import {useState} from \"react\"\r\nimport { useDialog } from 'react-st-modal';\r\n\r\nfunction DeleteConfirmationDialog() {\r\n  const dialog = useDialog();\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-red-700 text-lg text-center\">Are you sure you want to delete this tweet?</h1>\r\n      <div className=\"grid mt-8 mb-8 grid-cols-2 gap-4 w-3/5 mx-auto\">\r\n      <button\r\n        className=\"p-3 bg-red-700 text-white rounded-md border-transparent outline-none transform transition focus:outline-none hover:scale-110\"\r\n        onClick={() => {\r\n          dialog.close(1);\r\n        }}\r\n      >\r\n       Yes\r\n      </button>\r\n      <button\r\n        className=\"p-3 bg-gray-400 text-white rounded-md border-transparent outline-none transform transition focus:outline-none hover:scale-110\"\r\n        onClick={() => {\r\n          dialog.close(0);\r\n        }}\r\n      >\r\n        No\r\n      </button>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\nexport default DeleteConfirmationDialog","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Follow.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GetEditBgImage.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GetEditProfileImage.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\EditUser.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\EditUser\\InputSet.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\FollowWall.tsx",["347","348"],"import { Fragment } from 'react';\r\nimport { SideBar } from \"../sideBar/sideBar\";\r\nimport '../../App.css';\r\nimport './profile.css';\r\nimport TrendsBar from '../TrendsBar/TrendsBar';\r\nimport '../../styles/layout.css'\r\nimport FollowingList from './FollowingList';\r\nimport FollowerList from './followerList';\r\n\r\nexport interface FollowType {\r\n  FollowType: string,\r\n}\r\n  const FollowWall: React.FC <FollowType> = ({ FollowType:FollowType }) => {\r\n  return (\r\n    <Fragment>\r\n\r\n      <main className=\"main-container\">\r\n        <aside className=\"sb-left\">< SideBar /></aside>\r\n        <article className=\"wall\">\r\n\r\n        {( FollowType == \"follower\" ) ?\r\n       <FollowerList/>  : <FollowingList/> }\r\n          \r\n          </article>\r\n        <aside className=\"sb-right\">< TrendsBar /></aside>\r\n      </main>\r\n   \r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default FollowWall; ","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\FollowingList.tsx",["349","350"],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\FollowerList.tsx",["351"],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\followerList.tsx",["352","353"],{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","severity":1,"message":"359","line":4,"column":7,"nodeType":"360","messageId":"361","endLine":4,"endColumn":33},{"ruleId":"362","severity":1,"message":"363","line":14,"column":37,"nodeType":"364","messageId":"365","endLine":14,"endColumn":39},{"ruleId":"362","severity":1,"message":"363","line":22,"column":15,"nodeType":"364","messageId":"365","endLine":22,"endColumn":17},{"ruleId":"362","severity":1,"message":"363","line":49,"column":44,"nodeType":"364","messageId":"365","endLine":49,"endColumn":46},{"ruleId":"362","severity":1,"message":"363","line":56,"column":15,"nodeType":"364","messageId":"365","endLine":56,"endColumn":17},{"ruleId":"362","severity":1,"message":"363","line":85,"column":43,"nodeType":"364","messageId":"365","endLine":85,"endColumn":45},{"ruleId":"362","severity":1,"message":"363","line":92,"column":15,"nodeType":"364","messageId":"365","endLine":92,"endColumn":17},{"ruleId":"366","severity":1,"message":"367","line":74,"column":35,"nodeType":"368","endLine":74,"endColumn":78},{"ruleId":"366","severity":1,"message":"367","line":74,"column":125,"nodeType":"368","endLine":74,"endColumn":168},{"ruleId":"366","severity":1,"message":"367","line":74,"column":210,"nodeType":"368","endLine":74,"endColumn":253},{"ruleId":"362","severity":1,"message":"363","line":45,"column":23,"nodeType":"364","messageId":"365","endLine":45,"endColumn":25},{"ruleId":"362","severity":1,"message":"363","line":21,"column":58,"nodeType":"364","messageId":"365","endLine":21,"endColumn":60},{"ruleId":"369","severity":1,"message":"370","line":63,"column":48,"nodeType":"371","messageId":"372","endLine":63,"endColumn":74,"fix":"373"},{"ruleId":"358","severity":1,"message":"374","line":5,"column":10,"nodeType":"360","messageId":"361","endLine":5,"endColumn":16},{"ruleId":"358","severity":1,"message":"375","line":6,"column":10,"nodeType":"360","messageId":"361","endLine":6,"endColumn":20},{"ruleId":"362","severity":1,"message":"363","line":32,"column":58,"nodeType":"364","messageId":"365","endLine":32,"endColumn":60},{"ruleId":"366","severity":1,"message":"367","line":129,"column":15,"nodeType":"368","endLine":129,"endColumn":79},{"ruleId":"366","severity":1,"message":"367","line":130,"column":15,"nodeType":"368","endLine":130,"endColumn":79},{"ruleId":"362","severity":1,"message":"363","line":40,"column":47,"nodeType":"364","messageId":"365","endLine":40,"endColumn":49},{"ruleId":"366","severity":1,"message":"367","line":27,"column":7,"nodeType":"368","endLine":27,"endColumn":66},{"ruleId":"366","severity":1,"message":"367","line":32,"column":7,"nodeType":"368","endLine":32,"endColumn":10},{"ruleId":"366","severity":1,"message":"367","line":44,"column":13,"nodeType":"368","endLine":45,"endColumn":88},{"ruleId":"358","severity":1,"message":"376","line":6,"column":10,"nodeType":"360","messageId":"361","endLine":6,"endColumn":14},{"ruleId":"358","severity":1,"message":"377","line":72,"column":13,"nodeType":"360","messageId":"361","endLine":72,"endColumn":18},{"ruleId":"366","severity":1,"message":"367","line":82,"column":7,"nodeType":"368","endLine":82,"endColumn":109},{"ruleId":"362","severity":1,"message":"363","line":93,"column":38,"nodeType":"364","messageId":"365","endLine":93,"endColumn":40},{"ruleId":"366","severity":1,"message":"367","line":97,"column":15,"nodeType":"368","endLine":99,"endColumn":33},{"ruleId":"366","severity":1,"message":"367","line":64,"column":7,"nodeType":"368","endLine":64,"endColumn":79},{"ruleId":"358","severity":1,"message":"378","line":1,"column":9,"nodeType":"360","messageId":"361","endLine":1,"endColumn":17},{"ruleId":"379","severity":1,"message":"380","line":13,"column":48,"nodeType":"381","messageId":"382","endLine":13,"endColumn":69,"fix":"383"},{"ruleId":"362","severity":1,"message":"363","line":21,"column":23,"nodeType":"364","messageId":"365","endLine":21,"endColumn":25},{"ruleId":"362","severity":1,"message":"363","line":27,"column":10,"nodeType":"364","messageId":"365","endLine":27,"endColumn":12},{"ruleId":"362","severity":1,"message":"384","line":59,"column":31,"nodeType":"364","messageId":"365","endLine":59,"endColumn":33},{"ruleId":"358","severity":1,"message":"385","line":2,"column":17,"nodeType":"360","messageId":"361","endLine":2,"endColumn":25},{"ruleId":"362","severity":1,"message":"363","line":24,"column":12,"nodeType":"364","messageId":"365","endLine":24,"endColumn":14},{"ruleId":"362","severity":1,"message":"384","line":56,"column":31,"nodeType":"364","messageId":"365","endLine":56,"endColumn":33},"no-native-reassign",["386"],"no-negated-in-lhs",["387"],"@typescript-eslint/no-unused-vars","'createPaginationAndCombine' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property quotedRetweetsCount.","MemberExpression","unexpectedWhitespace",{"range":"388","text":"389"},"'Tweets' is defined but never used.","'FeedTweets' is defined but never used.","'Link' is defined but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","no-useless-rename","Destructuring assignment FollowType unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"390","text":"391"},"Expected '!==' and instead saw '!='.","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",[2441,2443],".",[411,432],"FollowType"]