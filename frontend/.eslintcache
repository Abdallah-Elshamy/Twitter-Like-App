[{"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/index.tsx":"1","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/reportWebVitals.ts":"2","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/App.tsx":"3","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/apolloClient.ts":"4","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/routing.tsx":"5","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts":"6","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx":"7","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/cache.ts":"8","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx":"9","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Home.tsx":"10","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx":"11","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/Explore.tsx":"12","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx":"13","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/Profile.tsx":"14","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/ExtendedTweet/ExtendedTweet.tsx":"15","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createUser.ts":"16","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts":"17","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SINGLE_TWEET.ts":"18","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/login_query.ts":"19","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx":"20","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx":"21","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/logo/logo.tsx":"22","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx":"23","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx":"24","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx":"25","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx":"26","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx":"27","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx":"28","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/SerachResult.tsx":"29","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx":"30","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx":"31","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Loading.tsx":"32","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/FoF/FoF.tsx":"33","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/decode.ts":"34","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts":"35","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx":"36","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx":"37","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx":"38","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts":"39","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx":"40","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts":"41","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx":"42","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/writeCache.ts":"43","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx":"44","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createTweet.ts":"45","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx":"46","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx":"47","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/QoutedTweet.tsx":"48","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx":"49","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetToolbarIcons.tsx":"50","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetImg.tsx":"51","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx":"52","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx":"53","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetInfo.tsx":"54","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/timestamp.ts":"55","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx":"56","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx":"57","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx":"58","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/DeleteMedia.ts":"59","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/deleteTweet.ts":"60","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx":"61","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Dialogs/ErroDialog.tsx":"62","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Dialogs/DeleteConfirmationDialog.tsx":"63","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Follow.ts":"64","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx":"65","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx":"66","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditBgImage.ts":"67","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts":"68","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/EditUser.ts":"69","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx":"70","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Retweet.tsx":"71","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/ListofReplies.tsx":"72","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_TWEET_REPLIES.ts":"73","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/RETWEET.ts":"74"},{"size":294,"mtime":1619594211320,"results":"75","hashOfConfig":"76"},{"size":425,"mtime":1612312753926,"results":"77","hashOfConfig":"76"},{"size":723,"mtime":1619711637872,"results":"78","hashOfConfig":"76"},{"size":534,"mtime":1619711637920,"results":"79","hashOfConfig":"76"},{"size":2936,"mtime":1619843646459,"results":"80","hashOfConfig":"76"},{"size":348,"mtime":1619594210148,"results":"81","hashOfConfig":"76"},{"size":124,"mtime":1619594210288,"results":"82","hashOfConfig":"76"},{"size":5000,"mtime":1621733805132,"results":"83","hashOfConfig":"76"},{"size":13543,"mtime":1619744059689,"results":"84","hashOfConfig":"76"},{"size":821,"mtime":1619594210152,"results":"85","hashOfConfig":"76"},{"size":1930,"mtime":1619594210172,"results":"86","hashOfConfig":"76"},{"size":1182,"mtime":1619594211548,"results":"87","hashOfConfig":"76"},{"size":4526,"mtime":1619744059689,"results":"88","hashOfConfig":"76"},{"size":610,"mtime":1619843646267,"results":"89","hashOfConfig":"76"},{"size":2551,"mtime":1621805142722,"results":"90","hashOfConfig":"76"},{"size":233,"mtime":1619594210120,"results":"91","hashOfConfig":"76"},{"size":108,"mtime":1619594210100,"results":"92","hashOfConfig":"76"},{"size":958,"mtime":1621814453575,"results":"93","hashOfConfig":"76"},{"size":221,"mtime":1619594210144,"results":"94","hashOfConfig":"76"},{"size":4089,"mtime":1619843646407,"results":"95","hashOfConfig":"76"},{"size":1191,"mtime":1619843646311,"results":"96","hashOfConfig":"76"},{"size":262,"mtime":1619744059741,"results":"97","hashOfConfig":"76"},{"size":3427,"mtime":1619843646279,"results":"98","hashOfConfig":"76"},{"size":2043,"mtime":1619843646283,"results":"99","hashOfConfig":"76"},{"size":1538,"mtime":1619594210288,"results":"100","hashOfConfig":"76"},{"size":555,"mtime":1619594210288,"results":"101","hashOfConfig":"76"},{"size":2172,"mtime":1619594210288,"results":"102","hashOfConfig":"76"},{"size":1019,"mtime":1619594210208,"results":"103","hashOfConfig":"76"},{"size":2695,"mtime":1621733805172,"results":"104","hashOfConfig":"76"},{"size":5887,"mtime":1621839316918,"results":"105","hashOfConfig":"76"},{"size":2759,"mtime":1621733805172,"results":"106","hashOfConfig":"76"},{"size":370,"mtime":1619705783601,"results":"107","hashOfConfig":"76"},{"size":355,"mtime":1619744059461,"results":"108","hashOfConfig":"76"},{"size":358,"mtime":1619594210080,"results":"109","hashOfConfig":"76"},{"size":212,"mtime":1619594210100,"results":"110","hashOfConfig":"76"},{"size":4419,"mtime":1619843646279,"results":"111","hashOfConfig":"76"},{"size":468,"mtime":1619744059617,"results":"112","hashOfConfig":"76"},{"size":2837,"mtime":1621728136529,"results":"113","hashOfConfig":"76"},{"size":303,"mtime":1619834572562,"results":"114","hashOfConfig":"76"},{"size":646,"mtime":1619594210064,"results":"115","hashOfConfig":"76"},{"size":131,"mtime":1619594210120,"results":"116","hashOfConfig":"76"},{"size":1023,"mtime":1619594211172,"results":"117","hashOfConfig":"76"},{"size":6003,"mtime":1621733805156,"results":"118","hashOfConfig":"76"},{"size":3129,"mtime":1621733805180,"results":"119","hashOfConfig":"76"},{"size":1230,"mtime":1621728136425,"results":"120","hashOfConfig":"76"},{"size":1045,"mtime":1619711638112,"results":"121","hashOfConfig":"76"},{"size":545,"mtime":1619594210068,"results":"122","hashOfConfig":"76"},{"size":3272,"mtime":1621733805172,"results":"123","hashOfConfig":"76"},{"size":970,"mtime":1619594210276,"results":"124","hashOfConfig":"76"},{"size":2912,"mtime":1621841783997,"results":"125","hashOfConfig":"76"},{"size":657,"mtime":1621728136709,"results":"126","hashOfConfig":"76"},{"size":1345,"mtime":1621814414959,"results":"127","hashOfConfig":"76"},{"size":1765,"mtime":1619744059717,"results":"128","hashOfConfig":"76"},{"size":3576,"mtime":1621840289092,"results":"129","hashOfConfig":"76"},{"size":524,"mtime":1619594210148,"results":"130","hashOfConfig":"76"},{"size":1459,"mtime":1619744059661,"results":"131","hashOfConfig":"76"},{"size":323,"mtime":1619594210032,"results":"132","hashOfConfig":"76"},{"size":1269,"mtime":1621814419699,"results":"133","hashOfConfig":"76"},{"size":140,"mtime":1619600216742,"results":"134","hashOfConfig":"76"},{"size":167,"mtime":1621733805156,"results":"135","hashOfConfig":"76"},{"size":1658,"mtime":1621733805172,"results":"136","hashOfConfig":"76"},{"size":652,"mtime":1621733805128,"results":"137","hashOfConfig":"76"},{"size":933,"mtime":1621733805128,"results":"138","hashOfConfig":"76"},{"size":208,"mtime":1619594210100,"results":"139","hashOfConfig":"76"},{"size":670,"mtime":1621728136453,"results":"140","hashOfConfig":"76"},{"size":10868,"mtime":1619709242411,"results":"141","hashOfConfig":"76"},{"size":140,"mtime":1619594210104,"results":"142","hashOfConfig":"76"},{"size":145,"mtime":1619594210120,"results":"143","hashOfConfig":"76"},{"size":230,"mtime":1619594210080,"results":"144","hashOfConfig":"76"},{"size":1057,"mtime":1619594210328,"results":"145","hashOfConfig":"76"},{"size":1437,"mtime":1621742362139,"results":"146","hashOfConfig":"76"},{"size":1833,"mtime":1621808710194,"results":"147","hashOfConfig":"76"},{"size":844,"mtime":1621814446491,"results":"148","hashOfConfig":"76"},{"size":194,"mtime":1621815837664,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"m46pjl",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"152"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"152"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"152"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"152"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"217","usedDeprecatedRules":"152"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"152"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"152"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"152"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"152"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"152"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"152"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/index.tsx",[],["310","311"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/reportWebVitals.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/App.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/apolloClient.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/routing.tsx",["312","313"],"import {\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { NotFoundPage } from '../components/notFound/notFound';\nimport { LandingPage } from '../components/Register/landingPage/landingPage';\nimport { SignUpForm } from '../components/Register/signup_form/signup';\nimport Explore from './Explore';\nimport Profile from '../components/profile/Profile';\nimport Home from \"../components/Home\";\nimport { useQuery } from '@apollo/client';\nimport { GET_ISAUTH } from '../common/queries/Get_isAuth';\nimport React from \"react\";\nimport { Login } from \"../components/Register/login_form/login\";\nimport ExtendedTweet from \"../components/tweets/ExtendedTweet/ExtendedTweet\";\n\nexport const Routing = () => {\n\n  return (\n    <div>\n\n      <Switch>\n        <PublicRoute path=\"/signup\">\n          <SignUpForm />\n        </PublicRoute>\n\n        <PublicRoute path=\"/login\">\n          <Login />\n        </PublicRoute>\n\n        <PrivateRoute path=\"/setting\">\n          <Setting />\n        </PrivateRoute>\n\n        <Route path=\"/error\">\n          <NotFoundPage />\n        </Route>\n\n        <PublicRoute path=\"/forget_password\">\n          <ForgetPassword />\n        </PublicRoute>\n\n\n        <Route path=\"/explore\">\n          <Explore />\n        </Route>\n\n        <PrivateRoute path=\"/messages\">\n          <Messages />\n        </PrivateRoute>\n\n\n        <PublicRoute path=\"/LandingPage\">\n          <LandingPage />\n        </PublicRoute>\n\n\n        <PrivateRoute path=\"/Notifications\">\n          <Notifications />\n        </PrivateRoute>\n\n\n        <PrivateRoute path=\"/\" exact >\n          <Home />\n        </PrivateRoute>\n\n\n        <PrivateRoute path=\"/tweet/:id\">\n          <ExtendedTweet />\n        </PrivateRoute>\n\n        <PrivateRoute path=\"/profile\">\n          <Profile />\n        </PrivateRoute>\n\n        <Route path='/:id'>\n          <Profile />\n        </Route>\n\n      </Switch>\n\n    </div>\n  )\n};\n\nconst PrivateRoute = ({ children, ...rest }: any) => {\n  let auth = localStorage.getItem('token') ? true : false\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n\n\nconst PublicRoute = ({ children, ...rest }: any) => {\n  let auth = localStorage.getItem('token') ? false : true\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction Setting() {\n  return <h2>setting</h2>;\n}\n\n\n\nfunction Messages() {\n  return <h2>Messages</h2>;\n}\nfunction Notifications() {\n  return <h2>Notifications</h2>;\n}\n\nfunction ForgetPassword() {\n  return <h2>forget_password</h2>;\n}\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/cache.ts",["314","315","316","317","318","319","320"],"import { InMemoryCache, makeVar, ReactiveVar } from \"@apollo/client\";\nimport { searchBarValue } from \"./TypesAndInterfaces\";\n\nconst createPaginationAndCombine = (keyArgs: any[]) => ({\n    merge(existing: any, incoming: any) {\n        const merged = existing ? existing.slice(0) : [];\n\n        let breakFlag = 0;\n        let i = 0;\n        let j = 0;\n        for (i = 0; i < merged.length; i++) {\n            if (breakFlag) break;\n            for (j = 0; j < incoming.length; j++) {\n                if (merged[i].__ref == incoming[j].__ref) {\n                    breakFlag = 1;\n                    i -= 2;\n                    break;\n                }\n            }\n            j = 0;\n        }\n        if (i == merged.length) i--;\n        for (; j < incoming.length; j++) {\n            merged[++i] = incoming[j];\n        }\n        return merged.slice(0, i + 1);\n    },\n    read(existing: any) {\n        return existing;\n    },\n    keyArgs,\n});\nconst createPaginationAndCombineTweetsElements = (keyArgs: any[]) => ({\n    merge(existing: any, incoming: any) {\n        const merged = existing\n            ? { totalCount: existing.totalCount, tweets: [...existing.tweets] }\n            : { totalCount: 0, tweets: [] };\n        merged.totalCount = incoming.totalCount;\n        let i = 0;\n        let j = 0;\n        let k = 0;\n        for (i = 0; i < merged.tweets.length; i++) {\n            for (j = k; j < incoming.tweets.length; j++) {\n                if (merged.tweets[i].__ref < incoming.tweets[j].__ref) {\n                    merged.tweets.unshift(incoming.tweets[j])\n                    k++;\n                    break\n                }\n                if (merged.tweets[i].__ref == incoming.tweets[j].__ref) {\n                    merged.tweets[i] = incoming.tweets[j];\n                    k++;        \n                    break;\n                }\n            }\n        }  \n        if (i == merged.tweets.length) i--;\n        for (j=k; j < incoming.tweets.length; j++) {\n            merged.tweets[++i] = incoming.tweets[j];\n        }\n        merged.tweets.slice(0, i + 1);\n        return merged;\n    },\n    read(existing: any) {\n        return existing;\n    },\n    keyArgs,\n});\n\nconst createPaginationAndCombineUsersElements = (keyArgs: any[]) => ({\n    merge(existing: any, incoming: any) {\n        const merged = existing\n            ? { totalCount: existing.totalCount, users: [...existing.users] }\n            : { totalCount: 0, users: [] };\n        merged.totalCount = incoming.totalCount;\n        let i = 0;\n        let j = 0;\n        let k = 0;\n        for (i = 0; i < merged.users.length; i++) {\n            for (j = k; j < incoming.users.length; j++) {\n                if (merged.users[i].__ref < incoming.users[j].__ref) {\n                    merged.users.unshift(incoming.users[j])\n                    k++;\n                    break\n                }\n                if (merged.users[i].__ref == incoming.users[j].__ref) {\n                    merged.users[i] = incoming.users[j]\n                    k++\n                    break;\n                }\n            }\n        }\n        if (i == merged.users.length) i--;\n        for (j=k; j < incoming.users.length; j++) {\n            merged.users[++i] = incoming.users[j];\n        }\n        merged.users.slice(0, i + 1);\n        return merged;\n    },\n    read(existing: any) {\n        return existing;\n    },\n    keyArgs,\n});\n\nexport const cache: InMemoryCache = new InMemoryCache({\n    typePolicies: {\n        Query: {\n            fields: {\n                searchBarValue: {\n                    read() {\n                        return searchBarVar();\n                    },\n                },\n                EditProfileImage: {\n                    read() {\n                        return EditProfileImageVal();\n                    },\n                },\n                EditProfileBg: {\n                    read() {\n                        return EditProfileBgVal();\n                    },\n                },\n\n                SFW: {\n                    read() {\n                        return SFW();\n                    },\n                },\n                getFeed: createPaginationAndCombineTweetsElements([\"isSFW\"]),\n                tweets: createPaginationAndCombineTweetsElements([\n                    \"userId\",\n                    \"filter\",\n                    \"isSFW\",\n                ]),\n                users: createPaginationAndCombineUsersElements([\"search\"]),\n            },\n        },\n    },\n});\n\nexport const searchBarVar: ReactiveVar<searchBarValue> = makeVar<searchBarValue>(\n    { value: \"\" }\n);\n\nexport const EditProfileImageVal: ReactiveVar<{\n    Image: object | false;\n    ImageURL: string | false;\n}> = makeVar<any>({\n    Image: false,\n    ImageURL: false,\n});\nexport const EditProfileBgVal: ReactiveVar<{\n    BgImage: object | false;\n    BgImageURL: string | false;\n}> = makeVar<any>({\n    BgImage: false,\n    BgImageURL: false,\n});\n\nexport const SFW: ReactiveVar<{ value: boolean }> = makeVar<any>({\n    value: true,\n});\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Home.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/Explore.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/Profile.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/ExtendedTweet/ExtendedTweet.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createUser.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SINGLE_TWEET.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/login_query.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx",["321","322"],"import { ErrorMessage, Field, Form, Formik } from \"formik\"\nimport React, { useRef } from \"react\"\nimport * as Yup from \"yup\"\nimport { TweetButton } from '../sideBar/tweetButton/tweetButton'\nimport { Tweets } from '../../common/queries/TweetQuery'\nimport { FeedTweets } from '../../common/queries/Feedtweets'\nimport { Post_Tweet } from '../../common/queries/createTweet'\nimport { useMutation } from \"@apollo/client\"\nimport {updateTweetsCacheForCreateTweet} from \"../../common/utils/writeCache\"\nimport './tweet.css';\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\nimport { parseJwt } from '../../common/decode';\ninterface Post {\n  text: string\n}\nconst PostTweet = () => {\n  var profile: any;\n  if (localStorage.getItem('token') !== \"LOGOUT\") {\n    profile = parseJwt(localStorage.getItem('token'))\n  }\n  console.log(profile.id)\n  // const userData = useQuery (Get_Logged_user)\n  // const user:User = userData.data.logUser.user\n  // console.log (user.imageURL)\n\n  const inputRef: any = useRef()\n  // mutation\n  const [createTweet, { data }] = useMutation(Post_Tweet, {\n    update: updateTweetsCacheForCreateTweet\n  });\n  console.log(`this ${inputRef.current}`)\n\n  const initialValues: Post = {\n    text: \"\"\n  }\n  /********   dynamic hight control funtion   ***********/\n  function setInputHight(element: React.ChangeEvent<HTMLElement>) {\n    element.target.style.height = \"60px\"\n    element.target.style.height = (element.target.scrollHeight) + \"px\"\n    inputRef.current.style.height = (element.target.scrollHeight) + \"px\"\n    console.log(`in ${element.target.style.height}`)\n    console.log(`out ${inputRef.current.style.height}`)\n    console.log(`scroll ${element.target.scrollHeight}`)\n  }\n  const validationSchema = Yup.object({\n    text: Yup.string()\n      .required()\n      .min(1, \"Must be more than 1 character\")\n      .max(256, \"Must be less than 257 characters\")\n  })\n  return (\n    <div className=\"mb-3 p-3 w-full shadow bg-white flex\">\n      {/* this should be dynamic */}\n      <div className=\"tweet-icon\">\n      <img src={profile.imageURL || avatar } alt=\"avatar\" />\n      </div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={({ text }, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          console.log(text);\n          createTweet({\n            variables: { tweetInput: { text } },\n          });\n          console.log(`this ${data}`)\n          setSubmitting(false);\n          resetForm();\n        }}\n      >\n        <div className=\"w-full mx-4 flex flex-col\">\n          <Form >\n            <div ref={inputRef} className=\"w-full mb-2 tweet-text flex h-16\">\n              <Field\n\n                name=\"text\"\n                type=\"text\"\n                as=\"textarea\"\n                onKeyPress={setInputHight}\n                className=\"w-full placeholder-gray4 p-3 ml-2 \n              focus:outline-none resize-none overflow-hidden min-h-12\"\n                placeholder=\"What's happening...\" />\n            </div>\n            <hr className=\"my-2\" />\n            <div className=\"flex justify-between items-center\">\n              <button className=\"hover:bg-blue-100 rounded-full py-2 px-3 transition\">\n                <svg\n                  className=\"h-8 w-8 text-blue-400 \"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n              </button>\n              <ErrorMessage name=\"text\" render={msg => <div className=\"text-red-500\">{msg}</div>} />\n\n              <TweetButton name=\"Tweet\" type=\"submit\" className=\" rounded-full py-3 px-6\" />\n            </div>\n\n          </Form>\n        </div>\n      </Formik>\n    </div>\n  )\n}\n\nexport default PostTweet\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/logo/logo.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx",["323"],"import React, { Fragment, useState } from 'react';\nimport '../../App.css';\nimport './profile.css';\nimport ProfileInfo from \"./ProfileInfo\";\nimport '../../styles/layout.css'\nimport { useQuery } from '@apollo/client';\nimport { LoggedUser } from '../../common/queries/Userqery';\nimport TweetList from '../tweets/TweetList'\nimport { Switch, NavLink, Route, useLocation, useRouteMatch } from \"react-router-dom\"\nimport { parseJwt } from '../../common/decode';\nimport Loading from \"../../UI/Loading\"\nimport FoF from '../../UI/FoF/FoF';\n\n\nfunction ProfileWall() {\n  let self = false;\n  let ID: string;\n  let profile;\n  if (localStorage.getItem('token')) {\n    profile = parseJwt(localStorage.getItem('token'))\n  }\n\n  const location = useLocation()\n  const match = useRouteMatch();\n  const path = location.pathname.substr(1)\n  const lastIndex = location.pathname.lastIndexOf('/')\n  let urlId = path\n\n\n  if (lastIndex !== 0) urlId = urlId.substr(0, lastIndex - 1)\n  console.log(urlId)\n  if (urlId === 'profile' ||\n    (profile && urlId == profile.id)) {\n    ID = profile.id; self = true;\n    console.log(typeof urlId, typeof profile.id)\n  }\n  else ID = urlId\n\n\n  const { data, loading, error } = useQuery(LoggedUser, { variables: { id: ID } });\n  const [tweetsPage, setTweetsPage] = useState<any>(1);\n  const [tweetsRepliesPage, setTweetsRepliesPage] = useState<any>(1);\n  const [mediaPage, setMediaPage] = useState<any>(1);\n  const [likesPage, setLikesPage] = useState<any>(1);\n\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n  if (error) return <FoF\n    msg=\"This account doesn’t exist\"\n    secMsg=\"try search for another\"\n  />\n  return (\n    < Fragment >\n      <ProfileInfo user={data.user} self={self} />\n      <nav >\n        <ul className=\"pf--nav-ul \">\n          <NavLink exact activeClassName=\"active\" className=\"pf--nav-link\" to={match.url}>\n            <li>Tweets</li>\n          </NavLink>\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/replies'}>\n            <li>Tweets & replies</li>\n          </NavLink>\n\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/media'}>\n            <li>Media</li>\n          </NavLink>\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/likes'}>\n            <li>Likes</li>\n          </NavLink>\n        </ul>\n      </nav>\n      <div className=\"tweets\">\n        <Switch>\n          <Route\n            exact\n            path={match.url}\n            render={() => (\n              <TweetList filter={``} page={tweetsPage} setPage={setTweetsPage} id={ID} />\n            )}\n          />\n          <Route\n            exact\n            path={match.url + '/replies'}\n            render={() => (\n              <TweetList filter={`replies&tweets`} page={tweetsRepliesPage} setPage={setTweetsRepliesPage} id={ID} />\n            )}\n          />\n          <Route\n            exact\n            path={match.url + '/media'}\n            render={() => (\n              <TweetList filter={`media`} page={mediaPage} setPage={setMediaPage} id={ID} />\n            )}\n          />\n          <Route\n            exact\n            path={match.url + '/likes'}\n            render={() => (\n              <TweetList filter={`likes`} page={likesPage} setPage={setLikesPage} id={ID} />\n            )}\n          />\n        </Switch>\n\n\n\n      </div>\n\n\n    </Fragment >\n  );\n}\n\nexport default ProfileWall;","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/SerachResult.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx",["324","325"],"import React, { useState } from \"react\";\n\nimport { useQuery } from \"@apollo/client\";\nimport Tweet from \"./Tweet\";\nimport { TweetData } from \"./TweetData_interface\";\nimport { FeedTweets } from \"../../common/queries/Feedtweets\";\nimport Loading from \"../../UI/Loading\";\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport {parseJwt} from '../../common/utils/jwtDecoder'\n\nfunction HomeTweets() {\n    let [page, setPage] = useState(1);\n    const sfw = useQuery(Get_SFW).data;\n    const loggedUser = parseJwt(localStorage.getItem('token')!)\n    const { loading, error, data, fetchMore } = useQuery(FeedTweets, {\n        variables: {\n            isSFW: sfw.SFW.value,\n        },\n    });\n    if(!loading && data && data?.getFeed?.tweets?.length == 10 && data?.getFeed?.totalCount > 10){\n        fetchMore({\n            variables: {\n                isSFW: sfw.SFW.value,\n                page: 2,\n            },\n        })\n    }\n    if (loading) return <Loading />;\n    if (error) return <p>`Error! this is the one ${error.message}`</p>;\n\n    return (\n        <InfiniteScroll\n            dataLength={data?.getFeed?.tweets?.length || 0}\n            next={() => {\n                setPage(Math.floor((data?.getFeed?.tweets?.length || 10)/10) +1 );\n                return fetchMore({\n                    variables: {\n                        isSFW: sfw.SFW.value,\n                        page: Math.floor((data?.getFeed?.tweets?.length || 10)/10) +1 ,\n                    },\n                });\n            }}\n            hasMore={data?.getFeed?.totalCount >= page * 10 || false}\n            loader={<Loading />}\n            style={{\n                overflow: \"hidden\"\n            }}\n        >\n            {data?.getFeed?.tweets?.map((tweet: TweetData) => {\n                return (\n                    <Tweet\n                        id={tweet.id}\n                        text={tweet.text}\n                        repliesCount={tweet.repliesCount}\n                        createdAt={tweet.createdAt}\n                        isLiked={tweet.isLiked}\n                        user={tweet.user}\n                        loggedUser={loggedUser}\n                        tweet={tweet}\n                        likesCount={tweet.likesCount}\n                        key={tweet.id}\n                        quotedRetweetsCount = {tweet. quotedRetweetsCount}\n                        retweetsCount = { tweet.retweetsCount}\n                        state= {tweet.state}\n                        originalTweet = { tweet.originalTweet}\n                        repliedToTweet = { tweet.repliedToTweet}\n                    />\n                );\n            })}\n        </InfiniteScroll>\n    );\n}\n\nexport default HomeTweets;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Loading.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/FoF/FoF.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/decode.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/writeCache.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx",["326"],"import React, { Fragment } from \"react\";\n\nimport { useQuery } from \"@apollo/client\";\n// import Tweet from '../Tweet';\nimport Tweet from \"./Tweet\";\nimport { Tweets } from \"../../common/queries/TweetQuery\";\nimport { TweetData } from \"./TweetData_interface\";\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\nimport Loading from \"../../UI/Loading\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { parseJwt } from \"../../common/decode\";\n\nexport interface TweetFilter {\n    filter: string;\n    page: number;\n    setPage: any;\n    id: string;\n}\n\nconst TweetList: React.FC<TweetFilter> = (props) => {\n\n    const { filter, page, setPage } = props;\n    const sfw = useQuery(Get_SFW).data;\n    const loggedUser = parseJwt(localStorage.getItem('token')!)\n    const { loading, error, data, fetchMore } = useQuery(Tweets, {\n        variables: {\n            userId: props.id,\n            filter: filter,\n            isSFW: sfw.SFW.value,\n        },\n    });\n    if (!loading && data && data?.tweets?.tweets?.length == 10 && data?.tweets?.totalCount > 10) {\n        fetchMore({\n            variables: {\n                userId: props.id,\n                isSFW: sfw.SFW.value,\n                page: 2,\n                filter: filter\n            },\n        })\n    }\n    if (loading) return <Fragment><br /> <br /> <Loading size={30} /></Fragment>;\n    if (error) return <p>`Error! ${error.message}`</p>;\n\n    return (\n        <InfiniteScroll\n            dataLength={data?.tweets?.tweets?.length || 0}\n            next={() => {\n                setPage(Math.floor((data?.tweets?.tweets?.length || 10)/10) +1);\n                return fetchMore({\n                    variables: {\n                        userId: props.id,\n                        isSFW: sfw.SFW.value,\n                        page: Math.floor((data?.tweets?.tweets?.length || 10)/10) +1,\n                        filter: filter\n                    },\n                });\n            }}\n            style={{\n                overflow: \"hidden\"\n            }}\n            hasMore={data?.tweets?.totalCount > page * 10 || false}\n            loader={<Loading />}\n        >\n            {data.tweets.tweets.map((tweet: TweetData) => {\n                return (\n                    <Tweet\n                        id={tweet.id}\n                        text={tweet.text}\n                        repliesCount={tweet.repliesCount}\n                        createdAt={tweet.createdAt}\n                        isLiked={tweet.isLiked}\n                        user={tweet.user}\n                        loggedUser={loggedUser}\n                        tweet={tweet}\n                        likesCount={tweet.likesCount}\n                        key={tweet.id}\n                        quotedRetweetsCount={tweet.quotedRetweetsCount}\n                        retweetsCount={tweet.retweetsCount}\n                        state={tweet.state}\n                        originalTweet={tweet.originalTweet}\n                        repliedToTweet={tweet.repliedToTweet}\n                    />\n                );\n            })}\n        </InfiniteScroll>\n    );\n};\n\nexport default TweetList;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createTweet.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/QoutedTweet.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetToolbarIcons.tsx",["327","328","329","330"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetImg.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx",["331"],"import React from 'react';\n\nimport { PersonEntity } from '../../../../common/TypesAndInterfaces';\n\nimport './PersonItem.css'\nimport '../../../profile/profile.css'\nimport FollowButton from '../../../FollowButton/FollowButton';\nimport { parseJwt } from '../../../../common/decode';\nimport { useHistory } from 'react-router';\n\n\nconst TrendItem: React.FC<PersonEntity> = ({ id, bio, isFollowing, name, username, followed = false, imageURI, numberOfFollowers }) => {\n  const history = useHistory();\n\n  const goToProfile = () => {\n    history.push({\n      pathname: '/' + id,\n    })\n\n  }\n\n  const profilePicture = (imageURI === undefined || imageURI === null) ?\n    <svg className=\"w-full h-full\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" /></svg> :\n    <img className=\"rounded-full w-full\" src={imageURI} alt=\"user\" />;\n\n  return (\n\n    <div className=\" person-item flex  justify-between items-start p-3 hover:bg-gray-100\" onClick={goToProfile}>\n\n      <div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n        {profilePicture}\n      </div>\n\n      <div className=\"flex-grow\">\n        <h1 className=\"person-item-name  text-xm font-bold\">{name}</h1>\n        <p className=\"person-item-username\"><span className=\"text-xm\">@</span>{username}</p>\n        <p>{bio}</p>\n      </div>\n      <div>\n        {localStorage.getItem('token') && (id == parseJwt(localStorage.getItem('token')).id) ? null :\n          <FollowButton id={id} following={isFollowing} />}\n      </div>\n    </div>\n  )\n}\nexport default TrendItem;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetInfo.tsx",["332","333","334","335","336"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/timestamp.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/DeleteMedia.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/deleteTweet.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx",["337"],"import React, { Fragment } from 'react';\n\ninterface toolProps {\n  className?: string;\n  children?: any;\n  design?:any;\n}\n\nexport class ToolBox extends React.Component<toolProps>  {\ntoggleContainer:any =  React.createRef<HTMLDivElement>();\nstate = {\n        isOpen: true,\n    };\n\n  constructor(props :any) {\n    super(props);\n    this.state = { isOpen: false };\n    this.toggleContainer  =  React.createRef();\n\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onClickOutsideHandler = this.onClickOutsideHandler.bind(this);\n  }\n  \n  onClickHandler  = (e:any) => {\n      this.setState(state => {\n        if (this.state.isOpen){\n          return {\n            isOpen: false\n          };\n        }\n        else {\n          return {\n            isOpen: true\n          };\n        }\n\n      });\n    };\n\n    componentDidMount() {\n        document.addEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n    componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n\n\n    onClickOutsideHandler(event : any ) {\n      if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\n        this.setState({ isOpen: false });\n      }\n    }\n  \n    render() {\n      return (\n        <Fragment>\n        <div className=\"flex-initial relative\"  ref={this.toggleContainer}>\n         {this.state.isOpen && (\n          <div>\n           { this.props.children}\n          </div>\n        )}\n <div>\n      <a className= {`${this.props.className}`} onClick={this.onClickHandler}>\n        <div>\n      { this.props.design}\n      </div>\n       </a>\n  </div>\n </div>\n </Fragment>\n      );\n    }\n  }","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Dialogs/ErroDialog.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Dialogs/DeleteConfirmationDialog.tsx",["338"],"import {useState} from \"react\"\nimport { useDialog } from 'react-st-modal';\n\nfunction DeleteConfirmationDialog() {\n  const dialog = useDialog();\n\n  return (\n    <div>\n      <h1 className=\"text-red-700 text-lg text-center\">Are you sure you want to delete this tweet?</h1>\n      <div className=\"grid mt-8 mb-8 grid-cols-2 gap-4 w-3/5 mx-auto\">\n      <button\n        className=\"p-3 bg-red-700 text-white rounded-md border-transparent outline-none transform transition focus:outline-none hover:scale-110\"\n        onClick={() => {\n          dialog.close(1);\n        }}\n      >\n       Yes\n      </button>\n      <button\n        className=\"p-3 bg-gray-400 text-white rounded-md border-transparent outline-none transform transition focus:outline-none hover:scale-110\"\n        onClick={() => {\n          dialog.close(0);\n        }}\n      >\n        No\n      </button>\n      </div>\n      \n    </div>\n  );\n}\nexport default DeleteConfirmationDialog","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Follow.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditBgImage.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/EditUser.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Retweet.tsx",["339","340"],"import React, { Fragment } from 'react';\nimport '../../styles/layout.css'\nimport Tweet from './Tweet';\nimport { TweetData } from './TweetData_interface'\nimport { useQuery } from '@apollo/client';\nimport { GET_SINGLE_TWEET } from './../../common/queries/GET_SINGLE_TWEET';\nimport { Get_SFW } from './../../common/queries/GET_SFW';\nimport { useLocation } from 'react-router';\nimport Loading from './../../UI/Loading';\nimport FoF from './../../UI/FoF/FoF';\nimport { Link } from 'react-router-dom';\n\nconst Retweet: React.FC<any> = (props: any) => {\n\n  const sfw = useQuery(Get_SFW).data;\n\n  const { data, loading, error } = useQuery(GET_SINGLE_TWEET, {\n    variables: {\n      tweetId: props.id,\n      isSFW: sfw.SFW.value,\n    }\n  })\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n  if (error) return <FoF\n    msg=\"This tweet doesn’t exist\"\n  />\n\n  const tweet: TweetData = data.tweet\n  return (\n    <Fragment>\n\n      <Tweet\n        id={tweet.id}\n        text={tweet.text}\n        repliesCount={tweet.repliesCount}\n        createdAt={tweet.createdAt}\n        isLiked={tweet.isLiked}\n        user={tweet.user}\n        likesCount={tweet.likesCount}\n        quotedRetweetsCount={tweet.quotedRetweetsCount}\n        retweetsCount={tweet.retweetsCount}\n        state={tweet.state}\n        originalTweet={tweet.originalTweet}\n        repliedToTweet={tweet.repliedToTweet}\n      />\n    </Fragment>\n  );\n}\n\nexport default Retweet;","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/ListofReplies.tsx",["341","342"],"import React, { Fragment } from 'react';\nimport '../../styles/layout.css'\nimport Tweet from './Tweet';\nimport { TweetData } from './TweetData_interface'\nimport { useQuery } from '@apollo/client';\nimport { GET_SINGLE_TWEET } from './../../common/queries/GET_SINGLE_TWEET';\nimport { Get_SFW } from './../../common/queries/GET_SFW';\nimport Loading from './../../UI/Loading';\nimport FoF from './../../UI/FoF/FoF';\nimport { parseJwt } from '../../common/decode';\nimport { GET_TWEET_REPLIES } from '../../common/queries/GET_TWEET_REPLIES';\n\nconst Replies: React.FC<any> = (props: any) => {\n\n  const sfw = useQuery(Get_SFW).data;\n  const loggedUser = parseJwt(localStorage.getItem('token')!)\n\n  const { data, loading, error } = useQuery(GET_TWEET_REPLIES, {\n    variables: {\n      tweetId: props.id,\n      isSFW: sfw.SFW.value,\n      page: 0,\n    }\n  })\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n  if (error) {\n    console.log(error)\n\n    return <FoF\n      msg=\"Something wo'nt wrong\"\n    />\n  }\n  const tweet: any = data.tweet\n  console.log(tweet)\n  return (\n    <Fragment>\n      {tweet.replies.tweets.map((tweet: any) => {\n        return (\n          <Tweet\n            id={tweet.id}\n            text={tweet.text}\n            repliesCount={tweet.repliesCount}\n            createdAt={tweet.createdAt}\n            isLiked={tweet.isLiked}\n            user={tweet.user}\n            loggedUser={loggedUser}\n            tweet={tweet}\n            likesCount={tweet.likesCount}\n            key={tweet.id}\n            quotedRetweetsCount={tweet.quotedRetweetsCount}\n            retweetsCount={tweet.retweetsCount}\n            state={tweet.state}\n            originalTweet={tweet.originalTweet}\n            repliedToTweet={tweet.repliedToTweet}\n          />\n        );\n      })}\n    </Fragment>\n  );\n}\n\nexport default Replies;","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_TWEET_REPLIES.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/RETWEET.ts",[],{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","replacedBy":"346"},{"ruleId":"347","severity":1,"message":"348","line":12,"column":10,"nodeType":"349","messageId":"350","endLine":12,"endColumn":18},{"ruleId":"347","severity":1,"message":"351","line":13,"column":10,"nodeType":"349","messageId":"350","endLine":13,"endColumn":20},{"ruleId":"347","severity":1,"message":"352","line":4,"column":7,"nodeType":"349","messageId":"350","endLine":4,"endColumn":33},{"ruleId":"353","severity":1,"message":"354","line":14,"column":37,"nodeType":"355","messageId":"356","endLine":14,"endColumn":39},{"ruleId":"353","severity":1,"message":"354","line":22,"column":15,"nodeType":"355","messageId":"356","endLine":22,"endColumn":17},{"ruleId":"353","severity":1,"message":"354","line":49,"column":44,"nodeType":"355","messageId":"356","endLine":49,"endColumn":46},{"ruleId":"353","severity":1,"message":"354","line":56,"column":15,"nodeType":"355","messageId":"356","endLine":56,"endColumn":17},{"ruleId":"353","severity":1,"message":"354","line":85,"column":43,"nodeType":"355","messageId":"356","endLine":85,"endColumn":45},{"ruleId":"353","severity":1,"message":"354","line":92,"column":15,"nodeType":"355","messageId":"356","endLine":92,"endColumn":17},{"ruleId":"347","severity":1,"message":"357","line":5,"column":10,"nodeType":"349","messageId":"350","endLine":5,"endColumn":16},{"ruleId":"347","severity":1,"message":"358","line":6,"column":10,"nodeType":"349","messageId":"350","endLine":6,"endColumn":20},{"ruleId":"353","severity":1,"message":"354","line":33,"column":23,"nodeType":"355","messageId":"356","endLine":33,"endColumn":25},{"ruleId":"353","severity":1,"message":"354","line":21,"column":58,"nodeType":"355","messageId":"356","endLine":21,"endColumn":60},{"ruleId":"359","severity":1,"message":"360","line":63,"column":48,"nodeType":"361","messageId":"362","endLine":63,"endColumn":74,"fix":"363"},{"ruleId":"353","severity":1,"message":"354","line":32,"column":58,"nodeType":"355","messageId":"356","endLine":32,"endColumn":60},{"ruleId":"364","severity":1,"message":"365","line":49,"column":7,"nodeType":"366","endLine":49,"endColumn":66},{"ruleId":"364","severity":1,"message":"365","line":54,"column":7,"nodeType":"366","endLine":54,"endColumn":47},{"ruleId":"364","severity":1,"message":"365","line":70,"column":13,"nodeType":"366","endLine":71,"endColumn":88},{"ruleId":"364","severity":1,"message":"365","line":77,"column":7,"nodeType":"366","endLine":77,"endColumn":47},{"ruleId":"353","severity":1,"message":"354","line":40,"column":47,"nodeType":"355","messageId":"356","endLine":40,"endColumn":49},{"ruleId":"347","severity":1,"message":"367","line":6,"column":10,"nodeType":"349","messageId":"350","endLine":6,"endColumn":14},{"ruleId":"347","severity":1,"message":"368","line":72,"column":13,"nodeType":"349","messageId":"350","endLine":72,"endColumn":18},{"ruleId":"364","severity":1,"message":"365","line":81,"column":7,"nodeType":"366","endLine":81,"endColumn":109},{"ruleId":"353","severity":1,"message":"354","line":92,"column":38,"nodeType":"355","messageId":"356","endLine":92,"endColumn":40},{"ruleId":"364","severity":1,"message":"365","line":96,"column":15,"nodeType":"366","endLine":98,"endColumn":33},{"ruleId":"364","severity":1,"message":"365","line":64,"column":7,"nodeType":"366","endLine":64,"endColumn":79},{"ruleId":"347","severity":1,"message":"369","line":1,"column":9,"nodeType":"349","messageId":"350","endLine":1,"endColumn":17},{"ruleId":"347","severity":1,"message":"370","line":8,"column":10,"nodeType":"349","messageId":"350","endLine":8,"endColumn":21},{"ruleId":"347","severity":1,"message":"367","line":11,"column":10,"nodeType":"349","messageId":"350","endLine":11,"endColumn":14},{"ruleId":"347","severity":1,"message":"371","line":4,"column":10,"nodeType":"349","messageId":"350","endLine":4,"endColumn":19},{"ruleId":"347","severity":1,"message":"372","line":6,"column":10,"nodeType":"349","messageId":"350","endLine":6,"endColumn":26},"no-native-reassign",["373"],"no-negated-in-lhs",["374"],"@typescript-eslint/no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'GET_ISAUTH' is defined but never used.","'createPaginationAndCombine' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Tweets' is defined but never used.","'FeedTweets' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property quotedRetweetsCount.","MemberExpression","unexpectedWhitespace",{"range":"375","text":"376"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.","'TweetData' is defined but never used.","'GET_SINGLE_TWEET' is defined but never used.","no-global-assign","no-unsafe-negation",[2379,2381],"."]