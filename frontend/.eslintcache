[{"/home/toka/Twitter-Like-App/frontend/src/index.tsx":"1","/home/toka/Twitter-Like-App/frontend/src/reportWebVitals.ts":"2","/home/toka/Twitter-Like-App/frontend/src/App.tsx":"3","/home/toka/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts":"4","/home/toka/Twitter-Like-App/frontend/src/routes/routing.tsx":"5","/home/toka/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx":"6","/home/toka/Twitter-Like-App/frontend/src/routes/Explore.tsx":"7","/home/toka/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx":"8","/home/toka/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx":"9","/home/toka/Twitter-Like-App/frontend/src/components/Home.tsx":"10","/home/toka/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx":"11","/home/toka/Twitter-Like-App/frontend/src/components/profile/Profile.tsx":"12","/home/toka/Twitter-Like-App/frontend/src/common/queries/login_query.ts":"13","/home/toka/Twitter-Like-App/frontend/src/common/cache.ts":"14","/home/toka/Twitter-Like-App/frontend/src/components/logo/logo.tsx":"15","/home/toka/Twitter-Like-App/frontend/src/components/Register/formInput/formInput.tsx":"16","/home/toka/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx":"17","/home/toka/Twitter-Like-App/frontend/src/common/queries/createUser.ts":"18","/home/toka/Twitter-Like-App/frontend/src/components/SerachResult.tsx":"19","/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx":"20","/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx":"21","/home/toka/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx":"22","/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx":"23","/home/toka/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx":"24","/home/toka/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx":"25","/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx":"26","/home/toka/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx":"27","/home/toka/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts":"28","/home/toka/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts":"29","/home/toka/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts":"30","/home/toka/Twitter-Like-App/frontend/src/common/decode.ts":"31","/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx":"32","/home/toka/Twitter-Like-App/frontend/src/UI/Loading.tsx":"33","/home/toka/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx":"34","/home/toka/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx":"35","/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx":"36","/home/toka/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx":"37","/home/toka/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx":"38","/home/toka/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx":"39","/home/toka/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx":"40","/home/toka/Twitter-Like-App/frontend/src/common/queries/createTweet.ts":"41","/home/toka/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx":"42","/home/toka/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx":"43","/home/toka/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx":"44","/home/toka/Twitter-Like-App/frontend/src/common/utils/timestamp.ts":"45","/home/toka/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx":"46","/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx":"47","/home/toka/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx":"48","/home/toka/Twitter-Like-App/frontend/src/common/queries/Follow.ts":"49","/home/toka/Twitter-Like-App/frontend/src/common/queries/localUser.tsx":"50","/home/toka/Twitter-Like-App/frontend/src/common/queries/Get_isAuth.ts":"51","/home/toka/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts":"52","/home/toka/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx":"53","/home/toka/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx":"54","/home/toka/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx":"55","/home/toka/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx":"56","/home/toka/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts":"57","/home/toka/Twitter-Like-App/frontend/src/common/queries/EditUser.ts":"58","/home/toka/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx":"59"},{"size":294,"mtime":1619466734646,"results":"60","hashOfConfig":"61"},{"size":425,"mtime":1613475853584,"results":"62","hashOfConfig":"61"},{"size":734,"mtime":1619466734442,"results":"63","hashOfConfig":"61"},{"size":348,"mtime":1613475952652,"results":"64","hashOfConfig":"61"},{"size":2685,"mtime":1619466734650,"results":"65","hashOfConfig":"61"},{"size":2873,"mtime":1619466734498,"results":"66","hashOfConfig":"61"},{"size":1182,"mtime":1613475952652,"results":"67","hashOfConfig":"61"},{"size":2015,"mtime":1619466734494,"results":"68","hashOfConfig":"61"},{"size":124,"mtime":1613475952652,"results":"69","hashOfConfig":"61"},{"size":814,"mtime":1619466734482,"results":"70","hashOfConfig":"61"},{"size":4522,"mtime":1619466734498,"results":"71","hashOfConfig":"61"},{"size":661,"mtime":1619466734514,"results":"72","hashOfConfig":"61"},{"size":221,"mtime":1613475952652,"results":"73","hashOfConfig":"61"},{"size":1148,"mtime":1619466734454,"results":"74","hashOfConfig":"61"},{"size":279,"mtime":1613475952652,"results":"75","hashOfConfig":"61"},{"size":1344,"mtime":1613475952652,"results":"76","hashOfConfig":"61"},{"size":757,"mtime":1619466734554,"results":"77","hashOfConfig":"61"},{"size":233,"mtime":1617020849531,"results":"78","hashOfConfig":"61"},{"size":1218,"mtime":1613475952652,"results":"79","hashOfConfig":"61"},{"size":1538,"mtime":1613475952652,"results":"80","hashOfConfig":"61"},{"size":2172,"mtime":1617197303420,"results":"81","hashOfConfig":"61"},{"size":1485,"mtime":1619466734546,"results":"82","hashOfConfig":"61"},{"size":1019,"mtime":1619466734498,"results":"83","hashOfConfig":"61"},{"size":7194,"mtime":1619561470393,"results":"84","hashOfConfig":"61"},{"size":1246,"mtime":1619466734554,"results":"85","hashOfConfig":"61"},{"size":555,"mtime":1613475952652,"results":"86","hashOfConfig":"61"},{"size":2462,"mtime":1619466734522,"results":"87","hashOfConfig":"61"},{"size":288,"mtime":1613475952648,"results":"88","hashOfConfig":"61"},{"size":131,"mtime":1617046403291,"results":"89","hashOfConfig":"61"},{"size":212,"mtime":1613475952648,"results":"90","hashOfConfig":"61"},{"size":358,"mtime":1613475952648,"results":"91","hashOfConfig":"61"},{"size":800,"mtime":1613475952652,"results":"92","hashOfConfig":"61"},{"size":285,"mtime":1613475952648,"results":"93","hashOfConfig":"61"},{"size":545,"mtime":1613475952648,"results":"94","hashOfConfig":"61"},{"size":421,"mtime":1619466734470,"results":"95","hashOfConfig":"61"},{"size":970,"mtime":1613475952652,"results":"96","hashOfConfig":"61"},{"size":1396,"mtime":1619466734606,"results":"97","hashOfConfig":"61"},{"size":1050,"mtime":1619466734546,"results":"98","hashOfConfig":"61"},{"size":3547,"mtime":1619466734522,"results":"99","hashOfConfig":"61"},{"size":391,"mtime":1619466734454,"results":"100","hashOfConfig":"61"},{"size":177,"mtime":1617025976639,"results":"101","hashOfConfig":"61"},{"size":3138,"mtime":1619466734546,"results":"102","hashOfConfig":"61"},{"size":3103,"mtime":1619478234934,"results":"103","hashOfConfig":"61"},{"size":448,"mtime":1619466734462,"results":"104","hashOfConfig":"61"},{"size":524,"mtime":1619466734474,"results":"105","hashOfConfig":"61"},{"size":636,"mtime":1619466734498,"results":"106","hashOfConfig":"61"},{"size":1512,"mtime":1619466734506,"results":"107","hashOfConfig":"61"},{"size":1353,"mtime":1619466734474,"results":"108","hashOfConfig":"61"},{"size":208,"mtime":1613475952648,"results":"109","hashOfConfig":"61"},{"size":119,"mtime":1618953125342,"results":"110","hashOfConfig":"61"},{"size":104,"mtime":1619466734462,"results":"111","hashOfConfig":"61"},{"size":108,"mtime":1619466734462,"results":"112","hashOfConfig":"61"},{"size":595,"mtime":1619466734442,"results":"113","hashOfConfig":"61"},{"size":323,"mtime":1619466734442,"results":"114","hashOfConfig":"61"},{"size":7840,"mtime":1619466734510,"results":"115","hashOfConfig":"61"},{"size":1590,"mtime":1619466734554,"results":"116","hashOfConfig":"61"},{"size":144,"mtime":1619466734462,"results":"117","hashOfConfig":"61"},{"size":230,"mtime":1619466734454,"results":"118","hashOfConfig":"61"},{"size":1057,"mtime":1619466734510,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1goggsf",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"122"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"122"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"122"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"/home/toka/Twitter-Like-App/frontend/src/index.tsx",[],["247","248"],"/home/toka/Twitter-Like-App/frontend/src/reportWebVitals.ts",[],"/home/toka/Twitter-Like-App/frontend/src/App.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts",[],"/home/toka/Twitter-Like-App/frontend/src/routes/routing.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/routes/Explore.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/Home.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx",["249"],"import React, { FormEvent, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/client';\n\nimport \"./../Register.css\";\n\nimport { TweetButton } from \"./../../sideBar/tweetButton/tweetButton\";\nimport { Logo } from \"./../../logo/logo\";\nimport { FormInput } from \"./../formInput/formInput\";\nimport { ADD_USER } from '../../../common/queries/createUser';\nimport { New_User, User } from '../../../interface/signUp';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { DatePicker } from \"@material-ui/pickers\"\n\nexport function SignUpForm() {\n\n  //set state to catch changes in form \n  const [name, setName] = useState('');\n  const [userName, setUserName] = useState(' ');\n  const [email, setEmail] = useState(' ');\n  const [password, setPassword] = useState(' ');\n  const [birthDate, setBirthDate] = useState(' ')\n  // const [birthDate, setValue] = React.useState<any>(new Date(\"2014-08-18\"));\n\n\n  const [createUser, { error, data }] = useMutation<{ createUser: User }, { userInput: New_User }>(ADD_USER, {\n    variables: { userInput: { userName, email, password, name , birthDate } }\n  });\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <div>\n      <Logo />\n\n      <div className=\"register-container\">\n\n        <strong className=\"text-4xl font-serif mt-4 -ml-8\"> Create your account </strong>\n        {error ? <p> Oh no! {error.message}</p> : null}\n        {data && data.createUser ? <p></p> : null}\n\n\n        <form>\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            onChange={($e: FormEvent<HTMLInputElement>) => setEmail($e.currentTarget.value)}\n            className=\"w-full h-16 -ml-20 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-blue-300\"\n            placeholder=\"Email\"\n          />\n\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            onChange={($e: FormEvent<HTMLInputElement>) => setPassword($e.currentTarget.value)}\n            className=\"w-full h-16 -ml-20 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-blue-300\"\n            placeholder=\"Password\"\n          />\n\n\n\n          <div className=\"flex\">\n            <FormInput\n              type=\"name\"\n              name=\"name\"\n              onChange={($e: FormEvent<HTMLInputElement>) => setName($e.currentTarget.value)}\n              className=\"h-16 max-w-3xl -ml-20  rounded-lg border-2 border-gray-200 outline-none focus:border-blue-300 mt-6 pl-8 mr-10\"\n              placeholder=\"Name\"\n            />\n            <FormInput\n              type=\"name\"\n              name=\"userName\"\n              onChange={($e: FormEvent<HTMLInputElement>) => setUserName($e.currentTarget.value)}\n              className=\"h-16 max-w-3xl  rounded-lg border-2 border-gray-200 outline-none focus:border-blue-300 mt-6 pl-8 mr-20\"\n              placeholder=\"User name\"\n            />\n          </div>\n\n\n\n          <div className=\" mt-8 text-left -ml-8\" >\n            <strong className=\"text-2xl font-serif mr-16\"> Date of birth </strong>\n            <p className=\"text-1xl font-serif pr-4 text-gray-500\"> This will not be shown publicly. Confirm your own age. </p>\n          </div>\n\n\n{/* need to handle the output of picker in format yyyy-mm-dd */}\n{/* <div className = \"\" style={{color: \"red\"}}>\n<DatePicker\n          disableFuture\n          openTo=\"year\"\n          views={['year', 'month', 'date']}\n          value= {birthDate}\n          format =\"yyyy - MM - dd\"\n          onChange={(newValue) => {\n            setValue(\"2015-08-17\");\n            console.log(newValue)\n           } }\n         className = \" \"\n        />\n</div> */}\n\n\n      <FormInput \n            type = \"name\"\n            name=\"name\"\n            onChange={($e: FormEvent<HTMLInputElement>) => setBirthDate($e.currentTarget.value)}\n            className=\"w-full h-16 -ml-20 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-blue-300\" \n            placeholder = \"2011-01-01\"\n          />\n\n<Link to =\"/login\">\n       <TweetButton name = \"Next\" className =\"w-80 mt-8 h-12\" onClick={() => name && userName && email && password && birthDate && createUser()} />\n       </Link>\n\n          <div className=\"pl-24\" >\n            <Link to=\"/login\" className=\"a_login_form mt-12\">\n              Aready have account?\n            </Link >\n          </div>\n\n\n        </form>\n\n      </div>\n\n    </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n","/home/toka/Twitter-Like-App/frontend/src/components/profile/Profile.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/common/queries/login_query.ts",[],"/home/toka/Twitter-Like-App/frontend/src/common/cache.ts",[],"/home/toka/Twitter-Like-App/frontend/src/components/logo/logo.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/Register/formInput/formInput.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/common/queries/createUser.ts",[],"/home/toka/Twitter-Like-App/frontend/src/components/SerachResult.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx",["250"],"/home/toka/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx",["251"],"import React, { Fragment } from 'react';\nimport '../../App.css';\nimport './profile.css';\nimport ProfileInfo from \"./ProfileInfo\";\nimport '../../styles/layout.css'\nimport { useQuery } from '@apollo/client';\nimport { LoggedUser } from '../../common/queries/Userqery';\nimport TweetList from '../tweets/TweetList'\nimport { Switch, NavLink, Route } from \"react-router-dom\"\nimport { parseJwt } from '../../common/decode';\nimport Loading from \"../../UI/Loading\"\nimport Profilewallpage from './profileWallPage';\n\n\nfunction ProfileWall() {\n  let profile;\n  if (localStorage.getItem('token')) {\n    profile = parseJwt(localStorage.getItem('token'))\n  }\n\n  const { loading, error } = useQuery(LoggedUser, { variables: { id: profile.id } });\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n  if (error) return <p>`Error! ${error.message}`</p>\n  return (\n    <Fragment>\n      <ProfileInfo />\n      <nav >\n        <ul className=\"pf--nav-ul \">\n          <NavLink exact activeClassName=\"active\" className=\"pf--nav-link\" to=\"/profile\">\n            <li>Tweets</li>\n          </NavLink>\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to=\"/profile/replies\">\n            <li>Tweets & replies</li>\n          </NavLink>\n\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to=\"/profile/media\">\n            <li>Media</li>\n          </NavLink>\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to=\"/profile/likes\">\n            <li>Likes</li>\n          </NavLink>\n        </ul>\n      </nav>\n      <div className=\"tweets\">\n        <Switch>\n          <Route\n            exact\n            path='/profile'\n            render={() => (\n              <TweetList filter={``} />\n              // to test paganation go to profileWallPage\n              // <Profilewallpage  filter={``}/>\n            )}\n          />\n          <Route\n            exact\n            path='/profile/replies'\n            render={() => (\n              <TweetList filter={`replies&tweets`} />\n            )}\n          />\n          <Route\n            exact\n            path='/profile/media'\n            render={() => (\n              <TweetList filter={`media`} />\n            )}\n          />\n          <Route\n            exact\n            path='/profile/likes'\n            render={() => (\n              <TweetList filter={`likes`} />\n            )}\n          />\n        </Switch>\n\n\n\n      </div>\n\n\n    </Fragment>\n  );\n}\n\nexport default ProfileWall;","/home/toka/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts",[],"/home/toka/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts",[],"/home/toka/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts",[],"/home/toka/Twitter-Like-App/frontend/src/common/decode.ts",[],"/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/UI/Loading.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx",["252","253"],"import { useQuery } from '@apollo/client';\nimport { Fragment, useState } from 'react';\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\nimport { parseJwt } from '../../common/decode';\nimport { User } from '../../common/TypesAndInterfaces'\nimport { LoggedUser } from '../../common/queries/Userqery';\nimport Modal from '../../UI/Modal/Modal';\nimport EditProfile from './EditUser/EditProfile';\nimport { timeConverter } from '../../common/utils/timestamp';\nimport { EditProfileImageVal } from '../../common/cache';\nimport { decodedToken } from '../../App';\nimport { GET_ISAUTH } from '../../common/queries/Get_isAuth';\n\nfunction ProfileInfo() {\n\n  const [edit, setEdit] = useState<boolean>(false)\n  const modalClosed = () => {\n    EditProfileImageVal({\n      Image: false,\n      ImageURL: false\n    })\n    setEdit(false)\n  }\n  var profile;\n  if (localStorage.getItem('token') !== null) {\n    profile = parseJwt(localStorage.getItem('token'))\n  }\n\n\n\n  const data = useQuery(LoggedUser, { variables: { id: profile.id } }).data;\n  const user: User = data.user;\n  return (\n\n    <Fragment>\n      <Modal show={edit}\n        modalClosed={modalClosed}>\n        <EditProfile\n          user={user}\n          show={edit}\n          close={modalClosed} />\n      </Modal>\n\n      <header className=\"top-bar px-3 py-2\">\n        <span className=\" m-3\">\n          <a href=\"http://\">\n            <i className=\"fa fa-arrow-left  p--main-color\" aria-hidden=\"true\"></i>\n          </a>\n        </span>\n        <div>\n          <p className=\"font-extrabold text-lg \">Toka</p>\n          {/* featch fron tweet */}\n          <p className=\"p--light-color block \">{user.tweets?.totalCount} tweet</p>\n        </div>\n      </header>\n\n      <div className=\"pf--container\">\n\n        <div className=\"pf--bg\" >\n          {user.coverImageURL && (\n            <img className=\"pf--avatar-img\" src={user.coverImageURL}\n              alt=\"avatar\" />\n          )}\n\n        </div>\n\n        <div className=\"pf--avatar\">\n\n          {\n            <img src={user.imageURL || avatar}\n              alt=\"avatar\" />\n          }\n        </div>\n\n        <div className=\"pf--info\">\n          <div className=\"pf--flw-btn-div p-3 h-12\">\n            < button onClick={() => setEdit(true)} className={\"pf--follow-btn rounded-full px-3 font-semibold text-xm  py-2.5 mt-3 \"}>\n              Edit Profile\n            </button >\n\n\n          </div>\n          <div className=\"mx-2 \">\n            <p className=\"font-extrabold text-lg pb-1 mt-1.5\">{user.name} </p>\n            <p className=\"p--light-color block pb-1\">@{user.userName}</p>\n            <p className=\"whitespace-pre-wrap \">{user.bio}</p>\n            <div className=\"p--light-color pb-1\">\n              <span className=\"pr-2\"><i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i> Egypt ... cairo</span>\n              <span className=\"px-2\" ><i className=\"fa fa-gift\" aria-hidden=\"true\"></i> Born {user.birthDate} </span>\n              <span className=\"px-2\"><i className=\"fa fa-calendar\" aria-hidden=\"true\"></i> Joined {user.createdAt ? timeConverter(Number(user.createdAt), false) : null}</span>\n            </div>\n            <div className=\"font-bold pb-1\">\n              {/* featch followers count  */}\n              <a href=\"/\"> {user.followingCount} <span className=\"p--light-color mr-4 \">following</span> </a>\n              <a href=\"/\">{user.followersCount} <span className=\"p--light-color mr-4\">Follower</span> </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default ProfileInfo;\n\n\n\n\n\n","/home/toka/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/common/queries/createTweet.ts",[],"/home/toka/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx",["254","255"],"import React, {useState, useEffect} from 'react';\nimport { Logout } from '../../Register/logout/logout';\nimport { ToolBox } from '../toolbox/toolbox';\nimport './flootProfile.css';\nimport { useQuery } from '@apollo/client';\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\nimport { parseJwt } from '../../../common/decode';\nimport { LoggedUser } from '../../../common/queries/Userqery';\nimport Loading from \"../../../UI/Loading\"\nimport  {Get_SFW}  from '../../../common/queries/GET_SFW';\nimport {SFW} from '../../../common/cache'\ninterface IRecipeProps {\n  ingredients?: string[];\n  title?: string;\n  className?: string;\n  instructions?: string;\n}\n\nexport function FlootProfile () {\n\n \n\n\n\n      var profile;\n      if (localStorage.getItem('token') !== null) {\n        profile = parseJwt(localStorage.getItem('token'))\n      }\n    \n    \n      const [sfw, setsfw] = useState(true)\n      const {error, loading ,data} = useQuery(LoggedUser, { variables: { id: profile.id } });\n\n      const handleSFW =()=>{\n        (sfw)? setsfw (false): setsfw (true)\n      }\n      useEffect(() => {\n        const  local = localStorage.getItem ('SFW')\n        if (local === \"true\") {setsfw(true)}\n        else (setsfw(false))\n      }, [])\n      useEffect(() => {\n        SFW({value:sfw})\n        localStorage.setItem ('SFW',JSON.stringify( sfw))\n      }, [sfw])\n      const data2 = useQuery (Get_SFW).data \n\n      if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n      if (error) return <p>`Error! ${error.message}`</p>\n \n\n      const userYear:number = (data.user.birthDate).split(\"-\", 1)\n      const currentYear = new Date()\n      const age = currentYear.getFullYear() - userYear   ; \n      console.log (data2,age, userYear, currentYear.getFullYear())\n\n\n      return (\n\n         \n        <div>\n           <ToolBox className=\"fixed bottom-0 rounded-full w-60 mt-4 mb-2\n           bg-white hover:bg-blue-100 focus:bg-blue-200 focus:outline-none focus:shadow-outline hover:text-gray-900 \n           focus:ring-2  focus:ring-offset-gray-100\" design={\n<div className=\"flex justify-between items-start p-3\">\n\n<div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n  \n </div>\n\n <div className=\"flex-grow pr-20\">\n   <h3 className=\" text-xm font-bold\">{(data.user.name).split(\" \", 1)}</h3>\n   <p className=\"\"><span className=\"text-xm \">@</span>{data.user.userName}</p>   \n </div>\n\n <i className=\" fas fa-ellipsis-h\"></i>\n</div>\n           }>\n\n          <ul className= \"px-4 mt-28\" >\n          <a href=\"/profile\" className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \n          hover:text-gray-900  hover:rounded-full rounded-full\" role=\"menuitem\">My Account</a>\n          <Logout/>\n          {\n            (age > 18) &&\n            <button className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \n            hover:text-gray-900  hover:rounded-full rounded-full focus:outline-none\" role=\"menuitem\" \n            onClick={handleSFW}>{(sfw)?'Set NSFW':'Set SFW'}</button>\n\n          }\n\n            </ul>\n\n  </ToolBox>\n  </div>\n              \n\n\n      );\n    }\n","/home/toka/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx",["256","257"],"import React , { useState } from 'react'\nimport './tweet.css';\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\n\nimport { timeConverter } from '../../common/utils/timestamp';\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\nimport Modal from '../../UI/Modal/Modal';\n\nexport interface TweetData {\n  user?: {\n    imageURL?: string\n    name?: string\n    userName?: string\n  }\n  id?: string\n  text: string\n  likesCount?: number\n  repliesCount?: number\n  createdAt?: number\n  isLiked?: boolean\n  mediaURLs?:string[]\n}\n\nfunction Tweet(props:any){\n  const [edit, setEdit] = useState<boolean>(false);\n  const modalClosed = () => setEdit(false);\n  // const displayUploadedFiles=(urls:string[])=> {\n  //   return urls.map((url, i) => <img className=\"w-full h-15\" key={i} src={url}/>);\n  // }\n  const displayUploadedFiles=(urls:string[])=> {\n    console.log(urls, \"urls\")\n    return urls.map((url, i) => <img className=\"w-full h-15\" src={url} alt=\"\"/>);\n  }\n\n  return(\n\n\n    <div className=\"tweet-box \">\n\n    <Modal show={edit} modalClosed={modalClosed}>\n\n  </Modal>\n\n\n    <div className=\"tweet-icon mr-2\">\n      {props.user?.imageURL ? (\n        <img src={props.user?.imageURL}\n          alt=\"avatar\" />\n      ) : (<img src={avatar} alt=\"avatar\" />)}\n    </div>\n    <div className=\"tweet-aside\">\n      <div className=\"tweet-data py-1\">\n        <p className=\"font-bold mr-1\">{props.user?.name}</p>\n        <p className=\"p--light-color\"> @{props.user?.userName} . </p>\n        <p className=\"p--light-color px-1\"> {props.createdAt ? timeConverter(Number(props.createdAt)) : null}</p>\n        <span className=\"tweet-ellipsis p--light-color\">\n          <i className=\"fas fa-ellipsis-h\"></i>\n        </span>\n      </div>\n      \n      <div className=\"tweet-content\">\n        <span>\n          {props.text}\n        </span>\n        {/* {displayUploadedFiles (props.mediaURLs)} */}\n        {(props.mediaURLs)&& displayUploadedFiles (props.mediaURLs)}\n        <div className=\"tweet-toolbar p--light-color\">\n          <a href=\"/\">\n            <i className=\"fas fa-reply text-base font-sm \"></i>\n            <span>{props.repliesCount}</span>\n          </a>\n\n          <a>\n            <ToolBox \n            design = {\n              <div className = \"border-0\">\n              <i className=\"fas fa-retweet text-base font-sm\"></i>\n             <span>2</span>\n             </div>\n            }\n            >\n          <ul className= \"mb-40 absolute ml-12 bg-gray-100 \" >\n\n          <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >Retweet</a>\n          <a  className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" onClick={() => setEdit(true)}>quote Retweet</a>\n\n          </ul>\n            </ToolBox>\n          </a>\n\n          <a href=\"/\">\n            <i className=\"far fa-heart text-base font-sm\"></i>\n            <span>{props.likesCount}</span>\n\n          </a>\n        </div>\n      </div>\n    </div>\n\n  </div>\n  )\n}\n\nexport default Tweet ;","/home/toka/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/common/utils/timestamp.ts",[],"/home/toka/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx",["258"],"import React from 'react';\n\nimport { PersonEntity } from '../../../../common/TypesAndInterfaces';\n\nimport './PersonItem.css'\nimport '../../../profile/profile.css'\nimport FollowButton from '../../../FollowButton/FollowButton';\nimport { decodedToken } from '../../../../App';\n\n\nconst TrendItem: React.FC<PersonEntity> = ({ id, bio, isFollowing, name, username, followed = false, imageURI, numberOfFollowers }) => {\n  const profilePicture = (imageURI === undefined || imageURI === null) ?\n    <svg className=\"w-full h-full\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" /></svg> :\n    <img className=\"rounded-full w-full\" src={imageURI} alt=\"user\" />;\n  return (\n\n    <div className=\" person-item flex  justify-between items-start p-3\">\n\n      <div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n        {profilePicture}\n      </div>\n\n      <div className=\"flex-grow\">\n        <h1 className=\"person-item-name  text-xm font-bold\">{name}</h1>\n        <p className=\"person-item-username\"><span className=\"text-xm\">@</span>{username}</p>\n        <p>{bio}</p>\n      </div>\n      <div>\n          {decodedToken && (id == decodedToken.id) ? null :\n          <FollowButton id={id} following={isFollowing} />}\n      </div>\n    </div>\n  )\n}\nexport default TrendItem;\n","/home/toka/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/common/queries/Follow.ts",[],"/home/toka/Twitter-Like-App/frontend/src/common/queries/localUser.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/common/queries/Get_isAuth.ts",[],"/home/toka/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts",[],"/home/toka/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx",[],"/home/toka/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx",["259"],"import { Field, Formik } from 'formik';\nimport React, { createRef, MouseEventHandler, useRef } from 'react';\nimport { object, string } from 'yup';\nimport { User } from '../../../common/TypesAndInterfaces';\nimport '../profile.css';\nimport InputSet from './InputSet';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { EditUser } from '../../../common/queries/EditUser';\nimport avatar from \"../../../routes/mjv-d5z8_400x400.jpg\";\nimport './EditProfile.css'\nimport { EditProfileImageVal } from '../../../common/cache';\nimport { GetEditProfileImage } from '../../../common/queries/GetEditProfileImage';\nimport axios from 'axios';\n\n\ntype Props = {\n  user: User,\n  close: MouseEventHandler,\n  show: Boolean\n}\ninterface initials {\n  name: String,\n  bio?: String,\n  birthdate: String\n\n}\nconst EditProfile: React.FC<Props> = ({ user, close, show }) => {\n\n  const [editUser, { loading }] = useMutation(EditUser)\n\n  const { data: avatarData } = useQuery(GetEditProfileImage)\n  if (avatarData) {\n    var { EditProfileImage: { Image, ImageURL } } = avatarData\n  }\n\n  const { data: APIENDPOINT } = useQuery(gql`query{getUploadURL}`, { skip: !Image })\n\n  //initial values for formik\n  const initialValues: initials = {\n    name: user.name,\n    bio: user.bio || \"\",\n    birthdate: user.birthDate || \"06/11/1998\"\n  }\n\n  //validation schema for yup\n  const validationSchema = object({\n    name: string()\n      .required('Required')\n      .max(50, 'Too long'),\n    bio: string().max(250, \"Too long\"),\n  })\n\n  //formik ref\n  const formRef: any = useRef();\n  //used after save\n  const closeButton: any = createRef();\n  //avatar image ref\n  const avatarButton: any = useRef()\n\n\n  const save = () => {\n    const dataValues = formRef.current.values\n    dataValues.bio = dataValues.bio.replaceAll(/  +/g, ' ');\n    //convert date to string\n    let ageError\n    let yourDate = dataValues.birthdate\n    if (typeof yourDate == 'string') ageError = false\n    else {\n      console.log(dataValues.birthdate)\n      yourDate = new Date(dataValues.birthdate.getTime() - (yourDate.getTimezoneOffset() * 60 * 1000))\n      console.log(yourDate)\n      yourDate = yourDate.toISOString().split('T')[0]\n      console.log(yourDate)\n\n      //check age is older than 12\n      ageError = !((new Date().getFullYear() - Number(yourDate.substring(0, 4))) >= 12)\n      if (!ageError) dataValues.birthdate = yourDate\n\n    }\n\n\n    //overall error\n    let error = ((Object.keys(formRef.current.errors).length !== 0) || ageError)\n    console.log(error)\n\n    if (!error) {\n      if (Image) {\n        handleImageUpload()\n      }\n      editUser({\n        variables:\n        {\n          userInput:\n          {\n            name: dataValues.name,\n            bio: dataValues.bio,\n            birthDate: dataValues.birthdate,\n            imageURL: APIENDPOINT && APIENDPOINT.getUploadURL.split('?')[0]\n          },\n          /*refetchQueries: [{\n            query: LoggedUser\n          }]*/\n        }\n      })\n\n      closeButton.current.click()\n    }\n\n\n  }\n\n  const handleImageUpload = async () => {\n    APIENDPOINT && await axios.put(APIENDPOINT.getUploadURL, Image, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(\n      res => console.log(res)\n    )\n      .catch(error => console.error(error))\n  }\n\n  const handleAvatarPreview = (e: any) => {\n    EditProfileImageVal({\n      Image: e.target.files[0],\n      ImageURL: URL.createObjectURL(e.target.files[0])\n    })\n\n\n  }\n\n  return (\n    show && <div className=\"py-4\">\n\n      <header className=\"flex justify-between  items-center px-3 h-6 w-full border-b border-gray-200 pb-6 pt-2\">\n\n        <div onClick={close} ref={closeButton} className=\"hover:bg-red-100 p-1 rounded-full\">\n          <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </div>\n\n        <div><h1 className=\"font-bold font-lg\">Edit Profile</h1></div>\n\n        <div>\n          <button onClick={save}\n            className=\"inline-block rounded-full px-4 \n           py-1.5 font-semibold  text-gray-800 border border-blue-400\">\n            Save\n          </button>\n        </div>\n      </header>\n\n      <main className=\"p-4\">\n\n        <div className=\"media h-64\">\n          <div className=\"pf--bg\" >\n            {user.imageURL && (\n              <img src={user.coverImageURL}\n                alt=\"avatar\" />\n            )}\n\n          </div>\n\n\n          <div className=\"pf--avatar-edit\" >\n            {(\n              <img className=\"pf--avatar-img\" src={ImageURL || user.imageURL || avatar}\n                alt=\"avatar\" />\n            )}\n            <div className=\"absolute h-100 w-100 \n            hover:bg-gray-100 hover:bg-opacity-25 \n            rounded-full p-16 \"\n              onClick={() => avatarButton.current.click()}\n            >\n\n              <svg className=\"h-6 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n            </div>\n            <input className=\"file-upload  hidden\" type=\"file\" onChange={(e) => handleAvatarPreview(e)} accept=\"image/*\" ref={avatarButton} />\n          </div>\n\n        </div>\n\n        <div className=\"text w-full\">\n          <Formik initialValues={initialValues}\n            validationSchema={validationSchema}\n            innerRef={formRef} onSubmit={(values, actions) => {\n              console.log({ values, actions });\n\n            }}>\n            {({ values, setFieldValue, errors, touched }) => (<form>\n\n              <div className=\" hover:text-blue-500 hover:border-blue-400\n              rounded-md border border-gray-300 text-gray-800 px-2 mb-2 py\">\n\n                <label htmlFor=\"name\" className=\" w-14 inline-block text-xs \">\n                  Name\n                </label>\n                <p className=\"inline-block float-right text-xs\">{values.name.length}/{50}</p>\n                <Field className=\" w-full focus:outline-none block h-6 mb-2\"\n                  id=\"name\" name=\"name\" maxLength=\"50\" />\n                {errors.name && touched.name ? (\n                  <div className=\"text-red-600 font-semibold\">{errors.name}</div>\n                ) : null}\n              </div>\n\n              <br />\n              <div className=\" hover:text-blue-500 hover:border-blue-400\n              rounded-md border border-gray-300 text-gray-800 px-2 mb-2 py\">\n\n                <label htmlFor=\"bio\" className=\" w-14 inline-block text-xs \">\n                  Bio\n                </label>\n                <p className=\"inline-block float-right text-xs\">{(values.bio == null) ? \"0\" : values.bio?.length}/{250}</p>\n                <Field className=\" w-full focus:outline-none block h-32 resize-none\"\n                  id=\"bio\" name=\"bio\" maxLength=\"250\" as=\"textarea\" />\n                {errors.bio && touched.bio ? (\n                  <div className=\"text-red-600 font-semibold\">{errors.bio}</div>\n                ) : null}\n              </div>\n\n              <div className=\" \n              rounded-md text-gray-800 px-2 mb-2 py\">\n                <Field id=\"birthdate\" name=\"birthdate\" as={InputSet} bD={values.birthdate} setF={setFieldValue} ></Field>\n                {errors.birthdate && touched.birthdate ? (\n                  <div className=\"text-red-600 font-semibold\">{errors.birthdate}</div>\n                ) : null}\n              </div>\n\n            </form>)}\n          </Formik>\n        </div>\n\n      </main>\n    </div>\n  )\n}\nexport default EditProfile;\n","/home/toka/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx",["260"],"import React from 'react';\n\ninterface toolProps {\n  className?: string;\n  children?: any;\n  design?:any;\n}\n\nexport class ToolBox extends React.Component<toolProps>  {\ntoggleContainer:any =  React.createRef<HTMLDivElement>();\nstate = {\n        isOpen: true,\n    };\n\n  constructor(props :any) {\n    super(props);\n    this.state = { isOpen: false };\n    this.toggleContainer  =  React.createRef();\n\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onClickOutsideHandler = this.onClickOutsideHandler.bind(this);\n  }\n  \n  onClickHandler  = (e:any) => {\n      this.setState(state => {\n        if (this.state.isOpen){\n          return {\n            isOpen: false\n          };\n        }\n        else {\n          return {\n            isOpen: true\n          };\n        }\n\n      });\n    };\n\n    componentDidMount() {\n        document.addEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n    componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n\n\n    onClickOutsideHandler(event : any ) {\n      if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\n        this.setState({ isOpen: false });\n      }\n    }\n  \n    render() {\n      return (\n        <div className=\"flex-initial\"  ref={this.toggleContainer}>\n         {this.state.isOpen && (\n          <div>\n           { this.props.children}\n          </div>\n        )}\n\n          <div>\n          <a className= {`${this.props.className}`} onClick={this.onClickHandler}>\n      { this.props.design}\n    </a>\n    </div>\n\n </div>\n      );\n    }\n  }","/home/toka/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts",[],"/home/toka/Twitter-Like-App/frontend/src/common/queries/EditUser.ts",[],"/home/toka/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx",[],{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":14,"column":10,"nodeType":"267","messageId":"268","endLine":14,"endColumn":20},{"ruleId":"269","severity":1,"message":"270","line":102,"column":5,"nodeType":"271","endLine":102,"endColumn":61},{"ruleId":"265","severity":1,"message":"272","line":12,"column":8,"nodeType":"267","messageId":"268","endLine":12,"endColumn":23},{"ruleId":"265","severity":1,"message":"273","line":11,"column":10,"nodeType":"267","messageId":"268","endLine":11,"endColumn":22},{"ruleId":"265","severity":1,"message":"274","line":12,"column":10,"nodeType":"267","messageId":"268","endLine":12,"endColumn":20},{"ruleId":"265","severity":1,"message":"275","line":6,"column":8,"nodeType":"267","messageId":"268","endLine":6,"endColumn":14},{"ruleId":"265","severity":1,"message":"276","line":12,"column":11,"nodeType":"267","messageId":"268","endLine":12,"endColumn":23},{"ruleId":"277","severity":1,"message":"278","line":73,"column":11,"nodeType":"271","endLine":73,"endColumn":14},{"ruleId":"277","severity":1,"message":"278","line":86,"column":11,"nodeType":"271","endLine":87,"endColumn":62},{"ruleId":"279","severity":1,"message":"280","line":29,"column":32,"nodeType":"281","messageId":"282","endLine":29,"endColumn":34},{"ruleId":"265","severity":1,"message":"283","line":29,"column":22,"nodeType":"267","messageId":"268","endLine":29,"endColumn":29},{"ruleId":"277","severity":1,"message":"278","line":64,"column":11,"nodeType":"271","endLine":64,"endColumn":83},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"@typescript-eslint/no-unused-vars","'DatePicker' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Profilewallpage' is defined but never used.","'decodedToken' is defined but never used.","'GET_ISAUTH' is defined but never used.","'avatar' is defined but never used.","'IRecipeProps' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]