[{"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/index.tsx":"1","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/reportWebVitals.ts":"2","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/App.tsx":"3","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/apolloClient.ts":"4","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts":"5","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/routing.tsx":"6","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx":"7","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/cache.ts":"8","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/Profile.tsx":"9","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx":"10","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/Explore.tsx":"11","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx":"12","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Home.tsx":"13","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx":"14","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/login_query.ts":"15","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createUser.ts":"16","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx":"17","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx":"18","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx":"19","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx":"20","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/logo/logo.tsx":"21","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx":"22","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx":"23","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx":"24","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx":"25","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/SerachResult.tsx":"26","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx":"27","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/decode.ts":"28","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts":"29","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts":"30","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx":"31","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts":"32","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts":"33","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx":"34","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx":"35","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Loading.tsx":"36","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx":"37","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx":"38","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx":"39","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/FoF/FoF.tsx":"40","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx":"41","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx":"42","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx":"43","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx":"44","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/writeCache.ts":"45","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createTweet.ts":"46","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx":"47","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx":"48","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/timestamp.ts":"49","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx":"50","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx":"51","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx":"52","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx":"53","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_Info.tsx":"54","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx":"55","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx":"56","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_img.tsx":"57","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Follow.ts":"58","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/DeleteMedia.ts":"59","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditBgImage.ts":"60","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts":"61","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/EditUser.ts":"62","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx":"63","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/ExtendedTweet/ExtendedTweet.tsx":"64","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_toolbarIcons.tsx":"65","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SINGLE_TWEET.ts":"66","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/quotedTweet.tsx":"67","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/QoutedTweet.tsx":"68"},{"size":294,"mtime":1619594211320,"results":"69","hashOfConfig":"70"},{"size":425,"mtime":1612312753926,"results":"71","hashOfConfig":"70"},{"size":723,"mtime":1619711637872,"results":"72","hashOfConfig":"70"},{"size":534,"mtime":1619711637920,"results":"73","hashOfConfig":"70"},{"size":348,"mtime":1619594210148,"results":"74","hashOfConfig":"70"},{"size":2936,"mtime":1619843646459,"results":"75","hashOfConfig":"70"},{"size":124,"mtime":1619594210288,"results":"76","hashOfConfig":"70"},{"size":4664,"mtime":1619834572562,"results":"77","hashOfConfig":"70"},{"size":610,"mtime":1619843646267,"results":"78","hashOfConfig":"70"},{"size":13543,"mtime":1619744059689,"results":"79","hashOfConfig":"70"},{"size":1182,"mtime":1619594211548,"results":"80","hashOfConfig":"70"},{"size":1930,"mtime":1619594210172,"results":"81","hashOfConfig":"70"},{"size":821,"mtime":1619594210152,"results":"82","hashOfConfig":"70"},{"size":4526,"mtime":1619744059689,"results":"83","hashOfConfig":"70"},{"size":221,"mtime":1619594210144,"results":"84","hashOfConfig":"70"},{"size":233,"mtime":1619594210120,"results":"85","hashOfConfig":"70"},{"size":3427,"mtime":1619843646279,"results":"86","hashOfConfig":"70"},{"size":1538,"mtime":1619594210288,"results":"87","hashOfConfig":"70"},{"size":1191,"mtime":1619843646311,"results":"88","hashOfConfig":"70"},{"size":2172,"mtime":1619594210288,"results":"89","hashOfConfig":"70"},{"size":262,"mtime":1619744059741,"results":"90","hashOfConfig":"70"},{"size":2043,"mtime":1619843646283,"results":"91","hashOfConfig":"70"},{"size":555,"mtime":1619594210288,"results":"92","hashOfConfig":"70"},{"size":1019,"mtime":1619594210208,"results":"93","hashOfConfig":"70"},{"size":4089,"mtime":1619843646407,"results":"94","hashOfConfig":"70"},{"size":2671,"mtime":1619834572570,"results":"95","hashOfConfig":"70"},{"size":2468,"mtime":1619846167425,"results":"96","hashOfConfig":"70"},{"size":358,"mtime":1619594210080,"results":"97","hashOfConfig":"70"},{"size":212,"mtime":1619594210100,"results":"98","hashOfConfig":"70"},{"size":131,"mtime":1619594210120,"results":"99","hashOfConfig":"70"},{"size":468,"mtime":1619744059617,"results":"100","hashOfConfig":"70"},{"size":108,"mtime":1619594210100,"results":"101","hashOfConfig":"70"},{"size":303,"mtime":1619834572562,"results":"102","hashOfConfig":"70"},{"size":4419,"mtime":1619843646279,"results":"103","hashOfConfig":"70"},{"size":2903,"mtime":1619848649022,"results":"104","hashOfConfig":"70"},{"size":370,"mtime":1619705783601,"results":"105","hashOfConfig":"70"},{"size":646,"mtime":1619594210064,"results":"106","hashOfConfig":"70"},{"size":1023,"mtime":1619594211172,"results":"107","hashOfConfig":"70"},{"size":2747,"mtime":1619843646283,"results":"108","hashOfConfig":"70"},{"size":355,"mtime":1619744059461,"results":"109","hashOfConfig":"70"},{"size":970,"mtime":1619594210276,"results":"110","hashOfConfig":"70"},{"size":545,"mtime":1619594210068,"results":"111","hashOfConfig":"70"},{"size":1045,"mtime":1619711638112,"results":"112","hashOfConfig":"70"},{"size":1765,"mtime":1619744059717,"results":"113","hashOfConfig":"70"},{"size":3170,"mtime":1619834572570,"results":"114","hashOfConfig":"70"},{"size":457,"mtime":1619843646267,"results":"115","hashOfConfig":"70"},{"size":2005,"mtime":1619854150062,"results":"116","hashOfConfig":"70"},{"size":784,"mtime":1619856482105,"results":"117","hashOfConfig":"70"},{"size":524,"mtime":1619594210148,"results":"118","hashOfConfig":"70"},{"size":820,"mtime":1619856732196,"results":"119","hashOfConfig":"70"},{"size":1459,"mtime":1619744059661,"results":"120","hashOfConfig":"70"},{"size":717,"mtime":1619711638064,"results":"121","hashOfConfig":"70"},{"size":1649,"mtime":1619594211176,"results":"122","hashOfConfig":"70"},{"size":1679,"mtime":1619851108242,"results":"123","hashOfConfig":"70"},{"size":323,"mtime":1619594210032,"results":"124","hashOfConfig":"70"},{"size":10868,"mtime":1619709242411,"results":"125","hashOfConfig":"70"},{"size":659,"mtime":1619856786912,"results":"126","hashOfConfig":"70"},{"size":208,"mtime":1619594210100,"results":"127","hashOfConfig":"70"},{"size":140,"mtime":1619600216742,"results":"128","hashOfConfig":"70"},{"size":140,"mtime":1619594210104,"results":"129","hashOfConfig":"70"},{"size":145,"mtime":1619594210120,"results":"130","hashOfConfig":"70"},{"size":230,"mtime":1619594210080,"results":"131","hashOfConfig":"70"},{"size":1057,"mtime":1619594210328,"results":"132","hashOfConfig":"70"},{"size":2731,"mtime":1619846386640,"results":"133","hashOfConfig":"70"},{"size":2271,"mtime":1619843646443,"results":"134","hashOfConfig":"70"},{"size":751,"mtime":1619855256522,"results":"135","hashOfConfig":"70"},{"size":2001,"mtime":1619843646443,"results":"136","hashOfConfig":"70"},{"size":1978,"mtime":1619856834572,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"m46pjl",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"140"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"140"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"140"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"140"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"140"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"140"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"140"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"140"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"140"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"140"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"140"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"140"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"140"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"282","usedDeprecatedRules":"140"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/index.tsx",[],["289","290"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/reportWebVitals.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/App.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/apolloClient.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/routing.tsx",["291","292"],"import {\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { NotFoundPage } from '../components/notFound/notFound';\nimport { LandingPage } from '../components/Register/landingPage/landingPage';\nimport { SignUpForm } from '../components/Register/signup_form/signup';\nimport Explore from './Explore';\nimport Profile from '../components/profile/Profile';\nimport Home from \"../components/Home\";\nimport { useQuery } from '@apollo/client';\nimport { GET_ISAUTH } from '../common/queries/Get_isAuth';\nimport React from \"react\";\nimport { Login } from \"../components/Register/login_form/login\";\nimport ExtendedTweet from \"../components/tweets/ExtendedTweet/ExtendedTweet\";\n\nexport const Routing = () => {\n\n  return (\n    <div>\n\n      <Switch>\n        <PublicRoute path=\"/signup\">\n          <SignUpForm />\n        </PublicRoute>\n\n        <PublicRoute path=\"/login\">\n          <Login />\n        </PublicRoute>\n\n        <PrivateRoute path=\"/setting\">\n          <Setting />\n        </PrivateRoute>\n\n        <Route path=\"/error\">\n          <NotFoundPage />\n        </Route>\n\n        <PublicRoute path=\"/forget_password\">\n          <ForgetPassword />\n        </PublicRoute>\n\n\n        <Route path=\"/explore\">\n          <Explore />\n        </Route>\n\n        <PrivateRoute path=\"/messages\">\n          <Messages />\n        </PrivateRoute>\n\n\n        <PublicRoute path=\"/LandingPage\">\n          <LandingPage />\n        </PublicRoute>\n\n\n        <PrivateRoute path=\"/Notifications\">\n          <Notifications />\n        </PrivateRoute>\n\n\n        <PrivateRoute path=\"/\" exact >\n          <Home />\n        </PrivateRoute>\n\n\n        <PrivateRoute path=\"/tweet/:id\">\n          <ExtendedTweet />\n        </PrivateRoute>\n\n        <PrivateRoute path=\"/profile\">\n          <Profile />\n        </PrivateRoute>\n\n        <Route path='/:id'>\n          <Profile />\n        </Route>\n\n      </Switch>\n\n    </div>\n  )\n};\n\nconst PrivateRoute = ({ children, ...rest }: any) => {\n  let auth = localStorage.getItem('token') ? true : false\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n\n\nconst PublicRoute = ({ children, ...rest }: any) => {\n  let auth = localStorage.getItem('token') ? false : true\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction Setting() {\n  return <h2>setting</h2>;\n}\n\n\n\nfunction Messages() {\n  return <h2>Messages</h2>;\n}\nfunction Notifications() {\n  return <h2>Notifications</h2>;\n}\n\nfunction ForgetPassword() {\n  return <h2>forget_password</h2>;\n}\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/cache.ts",["293","294","295","296","297","298","299"],"import { InMemoryCache, makeVar, ReactiveVar } from \"@apollo/client\";\nimport { searchBarValue } from \"./TypesAndInterfaces\";\n\nconst createPaginationAndCombine = (keyArgs: any[]) => ({\n    merge(existing: any, incoming: any) {\n        const merged = existing ? existing.slice(0) : [];\n\n        let breakFlag = 0;\n        let i = 0;\n        let j = 0;\n        for (i = 0; i < merged.length; i++) {\n            if (breakFlag) break;\n            for (j = 0; j < incoming.length; j++) {\n                if (merged[i].__ref == incoming[j].__ref) {\n                    breakFlag = 1;\n                    i -= 2;\n                    break;\n                }\n            }\n            j = 0;\n        }\n        if (i == merged.length) i--;\n        for (; j < incoming.length; j++) {\n            merged[++i] = incoming[j];\n        }\n        return merged.slice(0, i + 1);\n    },\n    read(existing: any) {\n        return existing;\n    },\n    keyArgs,\n});\nconst createPaginationAndCombineTweetsElements = (keyArgs: any[]) => ({\n    merge(existing: any, incoming: any) {\n        const merged = existing\n            ? { totalCount: existing.totalCount, tweets: [...existing.tweets] }\n            : { totalCount: 0, tweets: [] };\n        merged.totalCount = incoming.totalCount;\n        let breakFlag = 0;\n        let i = 0;\n        let j = 0;\n        for (i = 0; i < merged.tweets.length; i++) {\n            if (breakFlag) break;\n            for (j = 0; j < incoming.tweets.length; j++) {\n                if (merged.tweets[i].__ref == incoming.tweets[j].__ref) {\n                    breakFlag = 1;\n                    i -= 2;\n                    break;\n                }\n            }\n            j = 0;\n        }\n        if (i == merged.tweets.length) i--;\n        for (; j < incoming.tweets.length; j++) {\n            merged.tweets[++i] = incoming.tweets[j];\n        }\n        merged.tweets.slice(0, i + 1);\n        return merged;\n    },\n    read(existing: any) {\n        return existing;\n    },\n    keyArgs,\n});\n\nconst createPaginationAndCombineUsersElements = (keyArgs: any[]) => ({\n    merge(existing: any, incoming: any) {\n        const merged = existing\n            ? { totalCount: existing.totalCount, users: [...existing.users] }\n            : { totalCount: 0, users: [] };\n        merged.totalCount = incoming.totalCount;\n        let breakFlag = 0;\n        let i = 0;\n        let j = 0;\n        for (i = 0; i < merged.users.length; i++) {\n            if (breakFlag) break;\n            for (j = 0; j < incoming.users.length; j++) {\n                if (merged.users[i].__ref == incoming.users[j].__ref) {\n                    breakFlag = 1;\n                    i -= 2;\n                    break;\n                }\n            }\n            j = 0;\n        }\n        if (i == merged.users.length) i--;\n        for (; j < incoming.users.length; j++) {\n            merged.users[++i] = incoming.users[j];\n        }\n        merged.users.slice(0, i + 1);\n        return merged;\n    },\n    read(existing: any) {\n        return existing;\n    },\n    keyArgs,\n});\n\nexport const cache: InMemoryCache = new InMemoryCache({\n    typePolicies: {\n        Query: {\n            fields: {\n                searchBarValue: {\n                    read() {\n                        return searchBarVar();\n                    },\n                },\n                EditProfileImage: {\n                    read() {\n                        return EditProfileImageVal();\n                    },\n                },\n                EditProfileBg: {\n                    read() {\n                        return EditProfileBgVal();\n                    },\n                },\n\n                SFW: {\n                    read() {\n                        return SFW();\n                    },\n                },\n                getFeed: createPaginationAndCombineTweetsElements([\"isSFW\"]),\n                tweets: createPaginationAndCombineTweetsElements([\n                    \"userId\",\n                    \"filter\",\n                    \"isSFW\",\n                ]),\n                users: createPaginationAndCombineUsersElements([\"search\"]),\n            },\n        },\n    },\n});\n\nexport const searchBarVar: ReactiveVar<searchBarValue> = makeVar<searchBarValue>(\n    { value: \"\" }\n);\n\nexport const EditProfileImageVal: ReactiveVar<{\n    Image: object | false;\n    ImageURL: string | false;\n}> = makeVar<any>({\n    Image: false,\n    ImageURL: false,\n});\nexport const EditProfileBgVal: ReactiveVar<{\n    BgImage: object | false;\n    BgImageURL: string | false;\n}> = makeVar<any>({\n    BgImage: false,\n    BgImageURL: false,\n});\n\nexport const SFW: ReactiveVar<{ value: boolean }> = makeVar<any>({\n    value: true,\n});\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/Profile.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/Explore.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Home.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/login_query.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createUser.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx",["300"],"import React, { Fragment, useState } from 'react';\nimport '../../App.css';\nimport './profile.css';\nimport ProfileInfo from \"./ProfileInfo\";\nimport '../../styles/layout.css'\nimport { useQuery } from '@apollo/client';\nimport { LoggedUser } from '../../common/queries/Userqery';\nimport TweetList from '../tweets/TweetList'\nimport { Switch, NavLink, Route, useLocation, useRouteMatch } from \"react-router-dom\"\nimport { parseJwt } from '../../common/decode';\nimport Loading from \"../../UI/Loading\"\nimport FoF from '../../UI/FoF/FoF';\n\n\nfunction ProfileWall() {\n  let self = false;\n  let ID: string;\n  let profile;\n  if (localStorage.getItem('token')) {\n    profile = parseJwt(localStorage.getItem('token'))\n  }\n\n  const location = useLocation()\n  const match = useRouteMatch();\n  const path = location.pathname.substr(1)\n  const lastIndex = location.pathname.lastIndexOf('/')\n  let urlId = path\n\n\n  if (lastIndex !== 0) urlId = urlId.substr(0, lastIndex - 1)\n  console.log(urlId)\n  if (urlId === 'profile' ||\n    (profile && urlId == profile.id)) {\n    ID = profile.id; self = true;\n    console.log(typeof urlId, typeof profile.id)\n  }\n  else ID = urlId\n\n\n  const { data, loading, error } = useQuery(LoggedUser, { variables: { id: ID } });\n  const [tweetsPage, setTweetsPage] = useState<any>(1);\n  const [tweetsRepliesPage, setTweetsRepliesPage] = useState<any>(1);\n  const [mediaPage, setMediaPage] = useState<any>(1);\n  const [likesPage, setLikesPage] = useState<any>(1);\n\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n  if (error) return <FoF\n    msg=\"This account doesn’t exist\"\n    secMsg=\"try search for another\"\n  />\n  return (\n    < Fragment >\n      <ProfileInfo user={data.user} self={self} />\n      <nav >\n        <ul className=\"pf--nav-ul \">\n          <NavLink exact activeClassName=\"active\" className=\"pf--nav-link\" to={match.url}>\n            <li>Tweets</li>\n          </NavLink>\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/replies'}>\n            <li>Tweets & replies</li>\n          </NavLink>\n\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/media'}>\n            <li>Media</li>\n          </NavLink>\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/likes'}>\n            <li>Likes</li>\n          </NavLink>\n        </ul>\n      </nav>\n      <div className=\"tweets\">\n        <Switch>\n          <Route\n            exact\n            path={match.url}\n            render={() => (\n              <TweetList filter={``} page={tweetsPage} setPage={setTweetsPage} id={ID} />\n              // to test paganation go to profileWallPage\n              // <Profilewallpage  filter={``}/>\n            )}\n          />\n          <Route\n            exact\n            path={match.url + '/replies'}\n            render={() => (\n              <TweetList filter={`replies&tweets`} page={tweetsRepliesPage} setPage={setTweetsRepliesPage} id={ID} />\n            )}\n          />\n          <Route\n            exact\n            path={match.url + '/media'}\n            render={() => (\n              <TweetList filter={`media`} page={mediaPage} setPage={setMediaPage} id={ID} />\n            )}\n          />\n          <Route\n            exact\n            path={match.url + '/likes'}\n            render={() => (\n              <TweetList filter={`likes`} page={likesPage} setPage={setLikesPage} id={ID} />\n            )}\n          />\n        </Switch>\n\n\n\n      </div>\n\n\n    </Fragment >\n  );\n}\n\nexport default ProfileWall;","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/logo/logo.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx",["301","302","303","304","305"],"import { ErrorMessage, Field, Form, Formik } from \"formik\"\nimport React, { useRef } from \"react\"\nimport * as Yup from \"yup\"\nimport { TweetButton } from '../sideBar/tweetButton/tweetButton'\nimport { Tweets } from '../../common/queries/TweetQuery'\nimport { FeedTweets } from '../../common/queries/Feedtweets'\nimport { Post_Tweet } from '../../common/queries/createTweet'\nimport { useMutation } from \"@apollo/client\"\nimport {updateTweetsCacheForCreateTweet} from \"../../common/utils/writeCache\"\nimport './tweet.css';\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\nimport { parseJwt } from '../../common/decode';\ninterface Post {\n  text: string\n}\nconst PostTweet = () => {\n  var profile: any;\n  if (localStorage.getItem('token') !== \"LOGOUT\") {\n    profile = parseJwt(localStorage.getItem('token'))\n  }\n  console.log(profile.id)\n  // const userData = useQuery (Get_Logged_user)\n  // const user:User = userData.data.logUser.user\n  // console.log (user.imageURL)\n\n  const inputRef: any = useRef()\n  // mutation\n  const [createTweet, { data }] = useMutation(Post_Tweet, {\n    update: updateTweetsCacheForCreateTweet\n  });\n  console.log(`this ${inputRef.current}`)\n\n  const initialValues: Post = {\n    text: \"\"\n  }\n  /********   dynamic hight control funtion   ***********/\n  function setInputHight(element: React.ChangeEvent<HTMLElement>) {\n    element.target.style.height = \"60px\"\n    element.target.style.height = (element.target.scrollHeight) + \"px\"\n    inputRef.current.style.height = (element.target.scrollHeight) + \"px\"\n    console.log(`in ${element.target.style.height}`)\n    console.log(`out ${inputRef.current.style.height}`)\n    console.log(`scroll ${element.target.scrollHeight}`)\n  }\n  const validationSchema = Yup.object({\n    text: Yup.string()\n      .required()\n      .min(1, \"Must be more than 1 character\")\n      .max(256, \"Must be less than 257 characters\")\n  })\n  return (\n    <div className=\"mb-3 p-3 w-full shadow bg-white flex\">\n      {/* this should be dynamic */}\n      <div className=\"tweet-icon\">\n      <img src={profile.imageURL || avatar } alt=\"avatar\" />\n      </div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={({ text }, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          console.log(text);\n          createTweet({\n            variables: { tweetInput: { text } },\n          });\n          console.log(`this ${data}`)\n          setSubmitting(false);\n          resetForm();\n        }}\n      >\n        <div className=\"w-full mx-4 flex flex-col\">\n          <Form >\n            <div ref={inputRef} className=\"w-full mb-2 tweet-text flex h-16\">\n              <Field\n\n                name=\"text\"\n                type=\"text\"\n                as=\"textarea\"\n                onKeyPress={setInputHight}\n                className=\"w-full placeholder-gray4 p-3 ml-2 \n              focus:outline-none resize-none overflow-hidden min-h-12\"\n                placeholder=\"What's happening...\" />\n            </div>\n            <hr className=\"my-2\" />\n            <div className=\"flex justify-between items-center\">\n              <button className=\"hover:bg-blue-100 rounded-full py-2 px-3 transition\">\n                <svg\n                  className=\"h-8 w-8 text-blue-400 \"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n              </button>\n              <ErrorMessage name=\"text\" render={msg => <div className=\"text-red-500\">{msg}</div>} />\n\n              <TweetButton name=\"Tweet\" type=\"submit\" className=\" rounded-full py-3 px-6\" />\n            </div>\n\n          </Form>\n        </div>\n      </Formik>\n    </div>\n  )\n}\n\nexport default PostTweet\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/SerachResult.tsx",["306","307"],"\nimport { useQuery } from '@apollo/client';\nimport React, { Fragment, useState } from 'react';\nimport { Get_SearchBar_Value } from '../common/queries/Get_SearchBar_Value';\nimport { Get_Search_Result } from '../common/queries/Get_Search_Result';\nimport { PersonEntity } from '../common/TypesAndInterfaces';\nimport ListOfUsers from './TrendsBar/ListOfUsers/listofusers';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport PersonItem from \"./TrendsBar/ListOfUsers/PersonItem/PersonItem\";\nimport Loading from '../UI/Loading';\n\nconst SearchResult: React.FC = () => {\n\n  //static behaviour\n  /*\n    const location = useLocation()\n    const searchQ = location.search.substr(6)\n  */\n\n  //dynamic behaviour\n  const search = useQuery(Get_SearchBar_Value)\n  const searchQ: string = search.data.searchBarValue.value\n\n  const [page, setPage] = useState<any>(1)\n  const { data, loading, error, fetchMore} = useQuery(Get_Search_Result, { variables: { name: searchQ } })\n  if (searchQ === \"\") {\n    return <h1 className=\"text-lg text-center pt-4\">Try searching for people, names, usernames\n</h1>\n  }\n  if(!loading && data && data?.users?.users?.length === 10 && data?.users?.totalCount > 10){\n    fetchMore({\n        variables: {\n            page: 2,\n            name: searchQ,\n        },\n    })\n}\n  if (loading) return <Loading />\n  if (error) return <h1 className=\"text-lg text-center pt-4 text-gray-500\">Something went wrong :( </h1>\n\n  const list: PersonEntity[] = data.users.users\n  if (list.length === 0)\n        return <h1 className=\"text-lg text-center pt-4\">No Results</h1>;\n  return (\n    <InfiniteScroll\n            dataLength={list?.length || 0}\n            next={() => {\n                setPage(((list?.length || 10)/10) + 1);\n                return fetchMore({\n                    variables: {\n                        page: ((list?.length || 10)/10) + 1,\n                        name: searchQ,\n                    },\n                });\n            }}\n            hasMore={data?.users?.totalCount >= page * 10 || false}\n            loader={<Loading />}\n        >\n            {list.map((person) => {\n                return (\n                    <PersonItem\n                        key={person.username}\n                        id={person.id}\n                        name={person.name}\n                        username={person.username}\n                        followed={person.followed}\n                        imageURI={person.imageURI}\n                        isFollowing={person.isFollowing}\n                        bio={person.bio}\n                    />\n                );\n            })}\n        </InfiniteScroll>\n\n  )\n}\nexport default SearchResult;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx",["308","309"],"import React, { useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useQuery } from \"@apollo/client\";\nimport Tweet from \"./Tweet\";\nimport { TweetData } from \"./Tweet\";\nimport { FeedTweets } from \"../../common/queries/Feedtweets\";\nimport Loading from \"../../UI/Loading\";\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\n\nfunction HomeTweets() {\n    let [page, setPage] = useState(1);\n    const sfw = useQuery(Get_SFW).data;\n    const { loading, error, data, fetchMore } = useQuery(FeedTweets, {\n        variables: {\n            isSFW: sfw.SFW.value,\n        },\n    });\n    if(!loading && data && data?.getFeed?.tweets?.length == 10 && page == 1){\n        setPage(page + 1);\n        fetchMore({\n            variables: {\n                isSFW: sfw.SFW.value,\n                page: page + 1,\n            },\n        })\n    }\n    if (loading) return <Loading />;\n    if (error) return <p>`Error! this is the one ${error.message}`</p>;\n\n    return (\n        <InfiniteScroll\n            dataLength={data?.getFeed?.tweets?.length || 0}\n            next={() => {\n                setPage(((data?.getFeed?.tweets?.length || 10)/10) +1 );\n                return fetchMore({\n                    variables: {\n                        isSFW: sfw.SFW.value,\n                        page: ((data?.getFeed?.tweets?.length || 10)/10) +1 ,\n                    },\n                });\n            }}\n            hasMore={data?.getFeed?.totalCount >= page * 10 || false}\n            loader={<Loading />}\n            style={{\n                overflow: \"hidden\"\n            }}\n        >\n            {data?.getFeed?.tweets?.map((tweet: TweetData) => {\n                return (\n                    <Tweet\n                        mediaURLs={tweet.mediaURLs}\n                        text={tweet.text}\n                        repliesCount={tweet.repliesCount}\n                        createdAt={tweet.createdAt}\n                        isLiked={tweet.isLiked}\n                        user={tweet.user}\n                        likesCount={tweet.likesCount}\n                        key={tweet.id}\n                    />\n                );\n            })}\n        </InfiniteScroll>\n    );\n}\n\nexport default HomeTweets;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/decode.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx",["310","311","312"],"import React, { Fragment } from \"react\";\n\nimport { useQuery } from \"@apollo/client\";\n// import Tweet from '../Tweet';\nimport Tweet from \"./Tweet\";\nimport { Tweets } from \"../../common/queries/TweetQuery\";\nimport { TweetData } from \"./Tweet\";\nimport { parseJwt } from \"../../common/decode\";\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\nimport Loading from \"../../UI/Loading\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nexport interface TweetFilter {\n    filter: string;\n    page: number;\n    setPage: any;\n    id: string;\n}\n\nconst TweetList: React.FC<TweetFilter> = (props) => {\n\n    const { filter, page, setPage } = props;\n    const sfw = useQuery(Get_SFW).data;\n    const { loading, error, data, fetchMore } = useQuery(Tweets, {\n        variables: {\n            userId: props.id,\n            filter: filter,\n            isSFW: sfw.SFW.value,\n        },\n    });\n    if (!loading && data && data?.tweets?.tweets?.length == 10 && page == 1) {\n        setPage(page + 1);\n        fetchMore({\n            variables: {\n                userId: props.id,\n                isSFW: sfw.SFW.value,\n                page: page + 1,\n                filter: filter\n            },\n        })\n    }\n    if (loading) return <Fragment><br /> <br /> <Loading size={30} /></Fragment>;\n    if (error) return <p>`Error! ${error.message}`</p>;\n\n    return (\n        <InfiniteScroll\n            dataLength={data?.tweets?.tweets?.length || 0}\n            next={() => {\n                setPage(((data?.tweets?.tweets?.length || 10) / 10) + 1);\n                return fetchMore({\n                    variables: {\n                        userId: props.id,\n                        isSFW: sfw.SFW.value,\n                        page: ((data?.tweets?.tweets?.length || 10) / 10) + 1,\n                        filter: filter\n                    },\n                });\n            }}\n            style={{\n                overflow: \"hidden\"\n            }}\n            hasMore={data?.tweets?.totalCount > page * 10 || false}\n            loader={<Loading />}\n        >\n            {data.tweets.tweets.map((tweet: TweetData) => {\n                return (\n                    <Tweet\n                        id={tweet.id}\n                        text={tweet.text}\n                        repliesCount={tweet.repliesCount}\n                        createdAt={tweet.createdAt}\n                        isLiked={tweet.isLiked}\n                        user={tweet.user}\n                        likesCount={tweet.likesCount}\n                        key={tweet.id}\n                        quotedRetweetsCount={tweet.quotedRetweetsCount}\n                        retweetsCount={tweet.retweetsCount}\n                        state={tweet.state}\n                        originalTweet={tweet.originalTweet}\n                    />\n                );\n            })}\n        </InfiniteScroll>\n    );\n};\n\nexport default TweetList;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Loading.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx",["313"],"import React, {useState, useEffect} from 'react';\nimport { Logout } from '../../Register/logout/logout';\nimport { ToolBox } from '../toolbox/toolbox';\nimport './flootProfile.css';\nimport { useQuery } from '@apollo/client';\nimport { parseJwt } from '../../../common/decode';\nimport { LoggedUser } from '../../../common/queries/Userqery';\nimport Loading from \"../../../UI/Loading\"\nimport  {Get_SFW}  from '../../../common/queries/GET_SFW';\nimport {SFW} from '../../../common/cache'\n\nexport function FlootProfile () {\n      var profile;\n      if (localStorage.getItem('token') !== null) {\n        profile = parseJwt(localStorage.getItem('token'))\n      }\n      const [sfw, setsfw] = useState(true)\n      const {error, loading ,data} = useQuery(LoggedUser, { variables: { id: profile.id } });\n\n      const handleSFW =()=>{\n        (sfw)? setsfw (false): setsfw (true)\n      }\n      useEffect(() => {\n        const  local = localStorage.getItem ('SFW')\n        if (local === \"true\") {setsfw(true)}\n        else (setsfw(false))\n      }, [])\n      useEffect(() => {\n        SFW({value:sfw})\n        localStorage.setItem ('SFW',JSON.stringify( sfw))\n      }, [sfw])\n      const data2 = useQuery (Get_SFW).data \n\n      if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n      if (error) return <p>`Error! ${error.message}`</p>\n \n\n      const userYear:number = (data.user.birthDate).split(\"-\", 1)\n      const currentYear = new Date()\n      const age = currentYear.getFullYear() - userYear   ; \n      console.log (data2,age, userYear, currentYear.getFullYear())\n      return (\n\n         \n        <div>\n           <ToolBox className=\"fixed bottom-0 rounded-full w-60 mt-4 mb-2\n           bg-white hover:bg-blue-100 focus:bg-blue-200 focus:outline-none focus:shadow-outline hover:text-gray-900 \n           focus:ring-2  focus:ring-offset-gray-100\" design={\n<div className=\"flex justify-between items-start p-3\">\n\n<div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n  \n </div>\n\n <div className=\"flex-grow pr-20\">\n   <h3 className=\" text-xm font-bold\">{(data.user.name).split(\" \", 1)}</h3>\n   <p className=\"\"><span className=\"text-xm \">@</span>{data.user.userName}</p>   \n </div>\n\n <i className=\" fas fa-ellipsis-h\"></i>\n</div>\n           }>\n\n          <ul className= \"px-4 mt-16\" >\n          <a href=\"/profile\" className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \n          hover:text-gray-900  hover:rounded-full rounded-full\" role=\"menuitem\">My Account</a>\n\n          {\n            (age > 18) &&\n            <button className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \n            hover:text-gray-900  hover:rounded-full rounded-full focus:outline-none\" role=\"menuitem\" \n            onClick={handleSFW}>{(sfw)?'Set NSFW':'Set SFW'}</button>\n          }\n          <Logout/>\n            </ul>\n\n  </ToolBox>\n  </div>\n              \n\n\n      );\n    }\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/FoF/FoF.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx",["314"],"import React from 'react';\n\nimport { PersonEntity } from '../../../../common/TypesAndInterfaces';\n\nimport './PersonItem.css'\nimport '../../../profile/profile.css'\nimport FollowButton from '../../../FollowButton/FollowButton';\nimport { parseJwt } from '../../../../common/decode';\nimport { useHistory } from 'react-router';\n\n\nconst TrendItem: React.FC<PersonEntity> = ({ id, bio, isFollowing, name, username, followed = false, imageURI, numberOfFollowers }) => {\n  const history = useHistory();\n\n  const goToProfile = () => {\n    history.push({\n      pathname: '/' + id,\n    })\n\n  }\n\n  const profilePicture = (imageURI === undefined || imageURI === null) ?\n    <svg className=\"w-full h-full\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" /></svg> :\n    <img className=\"rounded-full w-full\" src={imageURI} alt=\"user\" />;\n\n  return (\n\n    <div className=\" person-item flex  justify-between items-start p-3 hover:bg-gray-100\" onClick={goToProfile}>\n\n      <div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n        {profilePicture}\n      </div>\n\n      <div className=\"flex-grow\">\n        <h1 className=\"person-item-name  text-xm font-bold\">{name}</h1>\n        <p className=\"person-item-username\"><span className=\"text-xm\">@</span>{username}</p>\n        <p>{bio}</p>\n      </div>\n      <div>\n        {localStorage.getItem('token') && (id == parseJwt(localStorage.getItem('token')).id) ? null :\n          <FollowButton id={id} following={isFollowing} />}\n      </div>\n    </div>\n  )\n}\nexport default TrendItem;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/writeCache.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createTweet.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx",["315","316","317"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/timestamp.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx",["318"],"import React from 'react';\nimport { Link } from \"react-router-dom\"\nimport { useHistory } from \"react-router-dom\";\nimport {useApolloClient} from '@apollo/client'\n\n\n\n\n\n    \n\nexport function Logout() {\n    const history = useHistory()\n    const client = useApolloClient()\n\n    async function logoutSubmit() {\n        \n        localStorage.clear()\n        await client.clearStore()\n        console.log(\"store reseted\")\n        history.push('/')\n    }\n    return (\n        <div>\n         <button className=\" mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700  hover:bg-gray-100 hover:text-gray-900 \n         hover:rounded-full rounded-full\"  onClick={() => logoutSubmit()}>logout</button>\n\n        </div>\n    )\n}\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx",["319"],"import React, { Fragment } from 'react';\n\ninterface toolProps {\n  className?: string;\n  children?: any;\n  design?:any;\n}\n\nexport class ToolBox extends React.Component<toolProps>  {\ntoggleContainer:any =  React.createRef<HTMLDivElement>();\nstate = {\n        isOpen: true,\n    };\n\n  constructor(props :any) {\n    super(props);\n    this.state = { isOpen: false };\n    this.toggleContainer  =  React.createRef();\n\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onClickOutsideHandler = this.onClickOutsideHandler.bind(this);\n  }\n  \n  onClickHandler  = (e:any) => {\n      this.setState(state => {\n        if (this.state.isOpen){\n          return {\n            isOpen: false\n          };\n        }\n        else {\n          return {\n            isOpen: true\n          };\n        }\n\n      });\n    };\n\n    componentDidMount() {\n        document.addEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n    componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n\n\n    onClickOutsideHandler(event : any ) {\n      if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\n        this.setState({ isOpen: false });\n      }\n    }\n  \n    render() {\n      return (\n        <Fragment>\n        <div className=\"flex-initial\"  ref={this.toggleContainer}>\n         {this.state.isOpen && (\n          <div>\n           { this.props.children}\n          </div>\n        )}\n <div>\n      <a className= {`${this.props.className}`} onClick={this.onClickHandler}>\n        <div>\n      { this.props.design}\n      </div>\n       </a>\n  </div>\n </div>\n </Fragment>\n      );\n    }\n  }","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_Info.tsx",["320","321","322"],"import './tweet.css';\nimport { timeConverter } from '../../common/utils/timestamp';\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\nimport { Link, useHistory } from 'react-router-dom';\n\n\nexport interface TweetData {\n  user?: {\n    imageURL?: string\n    name?: string\n    userName?: string\n  }\n  id?: string\n  text: string\n  likesCount?: number\n  repliesCount?: number\n  createdAt?: number\n  isLiked?: boolean\n}\n\nfunction TweetInfo(props: any) {\n  const history = useHistory();\n\n  const goToProfile = () => {\n    history.push({\n      pathname: '/' + props.id,\n    })\n  }\n  return (\n\n    <div className={`flex flex-row my-1 px-2 w-full   ${props.className}`}>\n      <div></div>\n      <a onClick={(e) => { goToProfile(); e.stopPropagation() }} className=\"font-bold mr-1 hover:underline\">{props.name}</a>\n      <p className=\"p--light-color\"> @{props.userName}. </p>\n      <p className=\"p--light-color px-1 hover:underline\"> {props.createdAt ? timeConverter(Number(props.createdAt)) : null}</p>\n      <span className=\"tweet-ellipsis p--light-color z-10 inline-block float-right\">\n\n\n        <ToolBox\n          design={\n            <i className=\"fas fa-ellipsis-h\"></i>\n          }\n        >\n          <ul className=\"mb-40 ml-4 absolute bg-gray-100 \" >\n            <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >block</a>\n            <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >mute</a>\n\n          </ul>\n        </ToolBox>\n\n      </span>\n    </div>\n\n\n  )\n}\n\nexport default TweetInfo;","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_img.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Follow.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/DeleteMedia.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditBgImage.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/EditUser.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/ExtendedTweet/ExtendedTweet.tsx",["323"],"import React, { Fragment } from 'react';\nimport '../../../styles/layout.css'\nimport Tweet, { TweetData } from '../Tweet';\nimport { SideBar } from '../../sideBar/sideBar';\nimport TrendsBar from '../../TrendsBar/TrendsBar';\nimport { useQuery } from '@apollo/client';\nimport { GET_SINGLE_TWEET } from '../../../common/queries/GET_SINGLE_TWEET';\nimport { Get_SFW } from '../../../common/queries/GET_SFW';\nimport { useLocation } from 'react-router';\nimport Loading from '../../../UI/Loading';\nimport FoF from '../../../UI/FoF/FoF';\nimport { Link } from 'react-router-dom';\n// import Profilewallpage from './profileWallPage';\n\nconst ExtendedTweet: React.FC = () => {\n\n  const sfw = useQuery(Get_SFW).data;\n  const location = useLocation()\n  let urlId = location.pathname.substr(7)\n\n  console.log(urlId)\n  const { data, loading, error } = useQuery(GET_SINGLE_TWEET, {\n    variables: {\n      tweetId: urlId,\n      isSFW: sfw.SFW.value,\n    }\n  })\n  console.log(error)\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n  if (error) return <FoF\n    msg=\"This tweet doesn’t exist\"\n  />\n  console.log(data)\n\n  const tweet: TweetData = data.tweet\n  //console.log(tweet)\n  return (\n    <Fragment>\n\n      <main className=\"main-container\">\n        <aside className=\"sb-left\">< SideBar /></aside>\n        <article className=\"wall\">\n          <header className=\"top-bar px-3 py-2\">\n            <span className=\" m-3\">\n              <Link to=\"/\">\n\n                <i className=\"fa fa-arrow-left  p--main-color\" aria-hidden=\"true\"></i>\n              </Link>\n\n            </span>\n            <div>\n              <p className=\"font-extrabold text-lg \">{tweet.user?.name}'s awosome Tweet</p>\n              {/* featch front tweet */}\n\n            </div>\n          </header>\n\n          <Tweet\n            id={tweet.id}\n            text={tweet.text}\n            repliesCount={tweet.repliesCount}\n            createdAt={tweet.createdAt}\n            isLiked={tweet.isLiked}\n            user={tweet.user}\n            likesCount={tweet.likesCount}\n            quotedRetweetsCount={tweet.quotedRetweetsCount}\n            retweetsCount={tweet.retweetsCount}\n            state={tweet.state}\n            originalTweet={tweet.originalTweet}\n\n          />\n\n          <div>\n            <pre className=\"p-4 bg-gray-900 text-blue-200\" ><span className=\"text-green-500 block\">//TODO: fetch tweet replies</span>\n              <span className=\"text-blue-400\">const</span> replies <span className=\"text-white\">=</span> fetch(<span className=\"text-blue-400\">replies</span>);\n\n            </pre>\n          </div>\n        </article>\n\n        <aside className=\"sb-right\">< TrendsBar /></aside>\n      </main>\n    </Fragment>\n  );\n}\n\nexport default ExtendedTweet;","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_toolbarIcons.tsx",["324","325","326","327"],"import React, { useState } from 'react'\nimport './tweet.css';\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\nimport Modal from '../../UI/Modal/Modal';\nimport PostTweet from './PostTweet';\n\nfunction Tweet_toolbarIcons(props: any) {\n  const [edit, setEdit] = useState<boolean>(false);\n  const modalClosed = () => setEdit(false);\n\n  return (\n      \n <div className=\"tweet-toolbar p--light-color\">\n          <Modal show={edit} modalClosed={modalClosed} className=\"pb-4\" >\n\n           <header className=\"flex justify-between items-center px-3 h-8 w-full border-b border-gray-200 pb-6 pt-2\">\n\n          <div onClick={modalClosed} className=\" p-1 rounded-full\">\n            <svg className=\"h-8 w-5 pt-2 mt-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </div>\n\n        </header>\n        <PostTweet/>\n        </Modal>\n            <a onClick={(e) => { setEdit(true); e.stopPropagation() }}>\n              <i className=\"fas fa-reply text-base font-sm \" ></i>\n              <span>{props.repliesCount}</span>\n            </a>\n\n            <a>\n              <ToolBox\n                design={\n                  <div className=\"border-0\">\n                    <i className=\"fas fa-retweet text-base font-sm\"></i>\n                    <span>{ props.retweetsCount + props. quotedRetweetsCount} </span>\n                  </div>\n                }\n              >\n                <ul className=\"mb-40 absolute ml-12 bg-gray-100\">\n\n          <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >Retweet</a>\n          <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" onClick={(e) => { setEdit(true); e.stopPropagation() }}>quote Retweet</a>\n\n                </ul>\n              </ToolBox>\n            </a>\n\n            <a href=\"/\">\n              <i className=\"far fa-heart text-base font-sm\"></i>\n              <span>{props.likesCount}</span>\n            </a>\n\n          </div>\n\n  )\n}\nexport default Tweet_toolbarIcons;","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SINGLE_TWEET.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/quotedTweet.tsx",["328","329","330","331","332"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/QoutedTweet.tsx",["333","334","335","336","337","338","339","340"],{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","severity":1,"message":"346","line":12,"column":10,"nodeType":"347","messageId":"348","endLine":12,"endColumn":18},{"ruleId":"345","severity":1,"message":"349","line":13,"column":10,"nodeType":"347","messageId":"348","endLine":13,"endColumn":20},{"ruleId":"345","severity":1,"message":"350","line":4,"column":7,"nodeType":"347","messageId":"348","endLine":4,"endColumn":33},{"ruleId":"351","severity":1,"message":"352","line":14,"column":37,"nodeType":"353","messageId":"354","endLine":14,"endColumn":39},{"ruleId":"351","severity":1,"message":"352","line":22,"column":15,"nodeType":"353","messageId":"354","endLine":22,"endColumn":17},{"ruleId":"351","severity":1,"message":"352","line":45,"column":44,"nodeType":"353","messageId":"354","endLine":45,"endColumn":46},{"ruleId":"351","severity":1,"message":"352","line":53,"column":15,"nodeType":"353","messageId":"354","endLine":53,"endColumn":17},{"ruleId":"351","severity":1,"message":"352","line":78,"column":43,"nodeType":"353","messageId":"354","endLine":78,"endColumn":45},{"ruleId":"351","severity":1,"message":"352","line":86,"column":15,"nodeType":"353","messageId":"354","endLine":86,"endColumn":17},{"ruleId":"351","severity":1,"message":"352","line":33,"column":23,"nodeType":"353","messageId":"354","endLine":33,"endColumn":25},{"ruleId":"345","severity":1,"message":"355","line":14,"column":8,"nodeType":"347","messageId":"348","endLine":14,"endColumn":19},{"ruleId":"345","severity":1,"message":"356","line":15,"column":8,"nodeType":"347","messageId":"348","endLine":15,"endColumn":11},{"ruleId":"345","severity":1,"message":"357","line":25,"column":20,"nodeType":"347","messageId":"348","endLine":25,"endColumn":31},{"ruleId":"345","severity":1,"message":"358","line":36,"column":25,"nodeType":"347","messageId":"348","endLine":36,"endColumn":29},{"ruleId":"359","severity":1,"message":"360","line":76,"column":9,"nodeType":"361","endLine":76,"endColumn":120},{"ruleId":"345","severity":1,"message":"362","line":3,"column":17,"nodeType":"347","messageId":"348","endLine":3,"endColumn":25},{"ruleId":"345","severity":1,"message":"363","line":7,"column":8,"nodeType":"347","messageId":"348","endLine":7,"endColumn":19},{"ruleId":"351","severity":1,"message":"352","line":18,"column":58,"nodeType":"353","messageId":"354","endLine":18,"endColumn":60},{"ruleId":"351","severity":1,"message":"352","line":18,"column":72,"nodeType":"353","messageId":"354","endLine":18,"endColumn":74},{"ruleId":"345","severity":1,"message":"364","line":8,"column":10,"nodeType":"347","messageId":"348","endLine":8,"endColumn":18},{"ruleId":"351","severity":1,"message":"352","line":31,"column":58,"nodeType":"353","messageId":"354","endLine":31,"endColumn":60},{"ruleId":"351","severity":1,"message":"352","line":31,"column":72,"nodeType":"353","messageId":"354","endLine":31,"endColumn":74},{"ruleId":"345","severity":1,"message":"365","line":28,"column":13,"nodeType":"347","messageId":"348","endLine":28,"endColumn":18},{"ruleId":"351","severity":1,"message":"352","line":40,"column":47,"nodeType":"353","messageId":"354","endLine":40,"endColumn":49},{"ruleId":"366","severity":1,"message":"367","line":53,"column":9,"nodeType":"361","endLine":53,"endColumn":97},{"ruleId":"366","severity":1,"message":"368","line":56,"column":11,"nodeType":"361","endLine":61,"endColumn":13},{"ruleId":"366","severity":1,"message":"369","line":71,"column":13,"nodeType":"361","endLine":76,"endColumn":15},{"ruleId":"345","severity":1,"message":"370","line":2,"column":10,"nodeType":"347","messageId":"348","endLine":2,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":64,"column":7,"nodeType":"361","endLine":64,"endColumn":79},{"ruleId":"345","severity":1,"message":"370","line":4,"column":10,"nodeType":"347","messageId":"348","endLine":4,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":33,"column":7,"nodeType":"361","endLine":33,"endColumn":109},{"ruleId":"371","severity":1,"message":"372","line":47,"column":13,"nodeType":"361","endLine":48,"endColumn":33},{"ruleId":"373","severity":1,"message":"374","line":74,"column":100,"nodeType":"375","endLine":74,"endColumn":127},{"ruleId":"371","severity":1,"message":"372","line":27,"column":13,"nodeType":"361","endLine":27,"endColumn":72},{"ruleId":"371","severity":1,"message":"372","line":32,"column":13,"nodeType":"361","endLine":32,"endColumn":16},{"ruleId":"376","severity":1,"message":"377","line":37,"column":51,"nodeType":"378","messageId":"379","endLine":37,"endColumn":77,"fix":"380"},{"ruleId":"371","severity":1,"message":"372","line":45,"column":11,"nodeType":"361","endLine":46,"endColumn":88},{"ruleId":"366","severity":1,"message":"367","line":31,"column":7,"nodeType":"361","endLine":31,"endColumn":74},{"ruleId":"366","severity":1,"message":"368","line":34,"column":9,"nodeType":"361","endLine":38,"endColumn":11},{"ruleId":"366","severity":1,"message":"367","line":54,"column":7,"nodeType":"361","endLine":54,"endColumn":86},{"ruleId":"366","severity":1,"message":"368","line":57,"column":9,"nodeType":"361","endLine":62,"endColumn":11},{"ruleId":"366","severity":1,"message":"369","line":78,"column":1,"nodeType":"361","endLine":83,"endColumn":5},{"ruleId":"345","severity":1,"message":"381","line":7,"column":8,"nodeType":"347","messageId":"348","endLine":7,"endColumn":26},{"ruleId":"345","severity":1,"message":"382","line":10,"column":10,"nodeType":"347","messageId":"348","endLine":10,"endColumn":13},{"ruleId":"345","severity":1,"message":"383","line":10,"column":15,"nodeType":"347","messageId":"348","endLine":10,"endColumn":27},{"ruleId":"345","severity":1,"message":"346","line":10,"column":29,"nodeType":"347","messageId":"348","endLine":10,"endColumn":37},{"ruleId":"345","severity":1,"message":"384","line":11,"column":10,"nodeType":"347","messageId":"348","endLine":11,"endColumn":26},{"ruleId":"345","severity":1,"message":"385","line":12,"column":10,"nodeType":"347","messageId":"348","endLine":12,"endColumn":17},{"ruleId":"366","severity":1,"message":"367","line":40,"column":7,"nodeType":"361","endLine":40,"endColumn":118},{"ruleId":"366","severity":1,"message":"386","line":43,"column":9,"nodeType":"361","endLine":48,"endColumn":11},"no-native-reassign",["387"],"no-negated-in-lhs",["388"],"@typescript-eslint/no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'GET_ISAUTH' is defined but never used.","'createPaginationAndCombine' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ReactPlayer' is defined but never used.","'FoF' is defined but never used.","'setmediaURL' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Fragment' is defined but never used.","'ListOfUsers' is defined but never used.","'parseJwt' is defined but never used.","'data2' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Tweet_img must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Tweet_info must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Tweet_toolbarIcons must be in PascalCase or SCREAMING_SNAKE_CASE","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","no-whitespace-before-property","Unexpected whitespace before property quotedRetweetsCount.","MemberExpression","unexpectedWhitespace",{"range":"389","text":"390"},"'Tweet_toolbarIcons' is defined but never used.","'gql' is defined but never used.","'useLazyQuery' is defined but never used.","'GET_SINGLE_TWEET' is defined but never used.","'Get_SFW' is defined but never used.","Imported JSX component Tweet_Info must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation",[1443,1445],"."]