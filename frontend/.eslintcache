[{"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\index.tsx":"1","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\App.tsx":"3","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\apolloClient.ts":"4","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\jwtDecoder.ts":"5","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\routes\\routing.tsx":"6","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\cache.ts":"7","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\routes\\Explore.tsx":"8","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\Profile.tsx":"9","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Home.tsx":"10","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\FollowWall.tsx":"11","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\notFound\\notFound.tsx":"12","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\landingPage\\landingPage.tsx":"13","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\signup_form\\signup.tsx":"14","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\login_form\\login.tsx":"15","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\ExtendedTweet\\ExtendedTweet.tsx":"16","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\SerachResult.tsx":"17","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\TrendsBar.tsx":"18","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\sideBar.tsx":"19","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\SearchBar\\SearchBar.tsx":"20","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\login_query.ts":"21","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\CurrentTrends\\CurrentTrends.tsx":"22","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\createUser.ts":"23","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\ProfileWall.tsx":"24","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\PostTweet.tsx":"25","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\HomeTweets.tsx":"26","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\logo\\logo.tsx":"27","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\Footer\\Footer.tsx":"28","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\tweetButton\\tweetButton.tsx":"29","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_SFW.ts":"30","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_SINGLE_TWEET.ts":"31","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Loading.tsx":"32","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Tweet.tsx":"33","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\ListofReplies.tsx":"34","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\FoF\\FoF.tsx":"35","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\decode.ts":"36","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_Hashtags.ts":"37","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\writeCache.ts":"38","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Userqery.tsx":"39","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\createTweet.ts":"40","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\ProfileInfo.tsx":"41","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Get_SearchBar_Value.ts":"42","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\ListOfUsers\\PersonItem\\PersonItem.tsx":"43","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetList.tsx":"44","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\CurrentTrends\\TrendItem\\TrendItem.tsx":"45","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Get_Search_Result.ts":"46","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Feedtweets.tsx":"47","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\ListOfUsers\\listofusers.tsx":"48","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Modal\\Modal.tsx":"49","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_TWEET_REPLIES.ts":"50","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\sideBarItem\\sideBarItem.tsx":"51","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\flootProfile\\flootProfile.tsx":"52","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\SideList\\SideList.tsx":"53","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetImg.tsx":"54","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Retweet.tsx":"55","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\QoutedTweet.tsx":"56","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetToolbarIcons.tsx":"57","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetInfo.tsx":"58","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\TweetQuery.tsx":"59","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\FollowButton\\FollowButton.tsx":"60","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\timestamp.ts":"61","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\deleteTweet.ts":"62","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\RETWEET.ts":"63","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\DeleteMedia.ts":"64","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\logout\\logout.tsx":"65","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\toolbox\\toolbox.tsx":"66","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Dialogs\\ErroDialog.tsx":"67","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Dialogs\\DeleteConfirmationDialog.tsx":"68","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Follow.ts":"69","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Backdrop\\Backdrop.tsx":"70","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\EditUser\\EditProfile.tsx":"71","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GetEditBgImage.ts":"72","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GetEditProfileImage.ts":"73","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\EditUser.ts":"74","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\EditUser\\InputSet.tsx":"75","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\FollowList.tsx":"76"},{"size":312,"mtime":1621817510203,"results":"77","hashOfConfig":"78"},{"size":425,"mtime":1612315084930,"results":"79","hashOfConfig":"78"},{"size":750,"mtime":1619787981064,"results":"80","hashOfConfig":"78"},{"size":555,"mtime":1619787981069,"results":"81","hashOfConfig":"78"},{"size":359,"mtime":1619595537253,"results":"82","hashOfConfig":"78"},{"size":3476,"mtime":1621930811897,"results":"83","hashOfConfig":"78"},{"size":5163,"mtime":1621817566089,"results":"84","hashOfConfig":"78"},{"size":1226,"mtime":1619595538780,"results":"85","hashOfConfig":"78"},{"size":637,"mtime":1619843288596,"results":"86","hashOfConfig":"78"},{"size":852,"mtime":1619765000848,"results":"87","hashOfConfig":"78"},{"size":789,"mtime":1621948011200,"results":"88","hashOfConfig":"78"},{"size":132,"mtime":1619595538365,"results":"89","hashOfConfig":"78"},{"size":1983,"mtime":1619765000849,"results":"90","hashOfConfig":"78"},{"size":13830,"mtime":1619787981111,"results":"91","hashOfConfig":"78"},{"size":4630,"mtime":1619787981108,"results":"92","hashOfConfig":"78"},{"size":2564,"mtime":1621941226057,"results":"93","hashOfConfig":"78"},{"size":2770,"mtime":1621938832402,"results":"94","hashOfConfig":"78"},{"size":1602,"mtime":1619595538316,"results":"95","hashOfConfig":"78"},{"size":2112,"mtime":1619843288714,"results":"96","hashOfConfig":"78"},{"size":2245,"mtime":1619595538239,"results":"97","hashOfConfig":"78"},{"size":229,"mtime":1619595537232,"results":"98","hashOfConfig":"78"},{"size":1053,"mtime":1619595537770,"results":"99","hashOfConfig":"78"},{"size":249,"mtime":1619765000845,"results":"100","hashOfConfig":"78"},{"size":3505,"mtime":1621945240612,"results":"101","hashOfConfig":"78"},{"size":3896,"mtime":1621939464284,"results":"102","hashOfConfig":"78"},{"size":3169,"mtime":1621939464282,"results":"103","hashOfConfig":"78"},{"size":274,"mtime":1619787981120,"results":"104","hashOfConfig":"78"},{"size":576,"mtime":1619595537813,"results":"105","hashOfConfig":"78"},{"size":1226,"mtime":1619843288715,"results":"106","hashOfConfig":"78"},{"size":116,"mtime":1619765000820,"results":"107","hashOfConfig":"78"},{"size":1039,"mtime":1621939464549,"results":"108","hashOfConfig":"78"},{"size":380,"mtime":1619787981067,"results":"109","hashOfConfig":"78"},{"size":6489,"mtime":1622004745825,"results":"110","hashOfConfig":"78"},{"size":1848,"mtime":1621939464282,"results":"111","hashOfConfig":"78"},{"size":402,"mtime":1621939464274,"results":"112","hashOfConfig":"78"},{"size":367,"mtime":1619595536867,"results":"113","hashOfConfig":"78"},{"size":225,"mtime":1619595536944,"results":"114","hashOfConfig":"78"},{"size":6220,"mtime":1621817566095,"results":"115","hashOfConfig":"78"},{"size":1022,"mtime":1621939085564,"results":"116","hashOfConfig":"78"},{"size":1282,"mtime":1619937914116,"results":"117","hashOfConfig":"78"},{"size":4921,"mtime":1621933043854,"results":"118","hashOfConfig":"78"},{"size":139,"mtime":1619765000825,"results":"119","hashOfConfig":"78"},{"size":1813,"mtime":1621929042937,"results":"120","hashOfConfig":"78"},{"size":3282,"mtime":1621939464359,"results":"121","hashOfConfig":"78"},{"size":999,"mtime":1619595537809,"results":"122","hashOfConfig":"78"},{"size":323,"mtime":1619789758984,"results":"123","hashOfConfig":"78"},{"size":1438,"mtime":1621939464276,"results":"124","hashOfConfig":"78"},{"size":1082,"mtime":1619787981116,"results":"125","hashOfConfig":"78"},{"size":671,"mtime":1619765000813,"results":"126","hashOfConfig":"78"},{"size":887,"mtime":1621939464276,"results":"127","hashOfConfig":"78"},{"size":1055,"mtime":1619765000863,"results":"128","hashOfConfig":"78"},{"size":2920,"mtime":1619937914121,"results":"129","hashOfConfig":"78"},{"size":567,"mtime":1619595536851,"results":"130","hashOfConfig":"78"},{"size":686,"mtime":1619937914204,"results":"131","hashOfConfig":"78"},{"size":1440,"mtime":1621939464405,"results":"132","hashOfConfig":"78"},{"size":3213,"mtime":1622007216947,"results":"133","hashOfConfig":"78"},{"size":4275,"mtime":1622001213193,"results":"134","hashOfConfig":"78"},{"size":3685,"mtime":1621939464358,"results":"135","hashOfConfig":"78"},{"size":1353,"mtime":1621939464278,"results":"136","hashOfConfig":"78"},{"size":1509,"mtime":1619787981076,"results":"137","hashOfConfig":"78"},{"size":538,"mtime":1619765000847,"results":"138","hashOfConfig":"78"},{"size":175,"mtime":1621817566094,"results":"139","hashOfConfig":"78"},{"size":295,"mtime":1621939464277,"results":"140","hashOfConfig":"78"},{"size":151,"mtime":1619765000817,"results":"141","hashOfConfig":"78"},{"size":699,"mtime":1619937914118,"results":"142","hashOfConfig":"78"},{"size":1800,"mtime":1622008511300,"results":"143","hashOfConfig":"78"},{"size":675,"mtime":1621817566088,"results":"144","hashOfConfig":"78"},{"size":964,"mtime":1621817566087,"results":"145","hashOfConfig":"78"},{"size":219,"mtime":1619595536889,"results":"146","hashOfConfig":"78"},{"size":338,"mtime":1619595536844,"results":"147","hashOfConfig":"78"},{"size":11084,"mtime":1621939464280,"results":"148","hashOfConfig":"78"},{"size":149,"mtime":1619765000821,"results":"149","hashOfConfig":"78"},{"size":155,"mtime":1619765000823,"results":"150","hashOfConfig":"78"},{"size":243,"mtime":1619765000818,"results":"151","hashOfConfig":"78"},{"size":1099,"mtime":1619765000856,"results":"152","hashOfConfig":"78"},{"size":2939,"mtime":1621948071930,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},"9iq5vy",{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"156"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"178","usedDeprecatedRules":"156"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"156"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"156"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"156"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"156"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"156"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"156"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"156"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"156"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"156"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"318","usedDeprecatedRules":"156"},"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\index.tsx",[],["319","320"],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\App.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\apolloClient.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\jwtDecoder.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\routes\\routing.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\cache.ts",["321","322","323","324","325","326","327"],"import { InMemoryCache, makeVar, ReactiveVar } from \"@apollo/client\";\r\nimport { searchBarValue } from \"./TypesAndInterfaces\";\r\n\r\nconst createPaginationAndCombine = (keyArgs: any[]) => ({\r\n    merge(existing: any, incoming: any) {\r\n        const merged = existing ? existing.slice(0) : [];\r\n\r\n        let breakFlag = 0;\r\n        let i = 0;\r\n        let j = 0;\r\n        for (i = 0; i < merged.length; i++) {\r\n            if (breakFlag) break;\r\n            for (j = 0; j < incoming.length; j++) {\r\n                if (merged[i].__ref == incoming[j].__ref) {\r\n                    breakFlag = 1;\r\n                    i -= 2;\r\n                    break;\r\n                }\r\n            }\r\n            j = 0;\r\n        }\r\n        if (i == merged.length) i--;\r\n        for (; j < incoming.length; j++) {\r\n            merged[++i] = incoming[j];\r\n        }\r\n        return merged.slice(0, i + 1);\r\n    },\r\n    read(existing: any) {\r\n        return existing;\r\n    },\r\n    keyArgs,\r\n});\r\nconst createPaginationAndCombineTweetsElements = (keyArgs: any[]) => ({\r\n    merge(existing: any, incoming: any) {\r\n        const merged = existing\r\n            ? { totalCount: existing.totalCount, tweets: [...existing.tweets] }\r\n            : { totalCount: 0, tweets: [] };\r\n        merged.totalCount = incoming.totalCount;\r\n        let i = 0;\r\n        let j = 0;\r\n        let k = 0;\r\n        for (i = 0; i < merged.tweets.length; i++) {\r\n            for (j = k; j < incoming.tweets.length; j++) {\r\n                if (merged.tweets[i].__ref < incoming.tweets[j].__ref) {\r\n                    merged.tweets.unshift(incoming.tweets[j])\r\n                    k++;\r\n                    break\r\n                }\r\n                if (merged.tweets[i].__ref == incoming.tweets[j].__ref) {\r\n                    merged.tweets[i] = incoming.tweets[j];\r\n                    k++;        \r\n                    break;\r\n                }\r\n            }\r\n        }  \r\n        if (i == merged.tweets.length) i--;\r\n        for (j=k; j < incoming.tweets.length; j++) {\r\n            merged.tweets[++i] = incoming.tweets[j];\r\n        }\r\n        merged.tweets.slice(0, i + 1);\r\n        return merged;\r\n    },\r\n    read(existing: any) {\r\n        return existing;\r\n    },\r\n    keyArgs,\r\n});\r\n\r\nconst createPaginationAndCombineUsersElements = (keyArgs: any[]) => ({\r\n    merge(existing: any, incoming: any) {\r\n        const merged = existing\r\n            ? { totalCount: existing.totalCount, users: [...existing.users] }\r\n            : { totalCount: 0, users: [] };\r\n        merged.totalCount = incoming.totalCount;\r\n        let i = 0;\r\n        let j = 0;\r\n        let k = 0;\r\n        for (i = 0; i < merged.users.length; i++) {\r\n            for (j = k; j < incoming.users.length; j++) {\r\n                if (merged.users[i].__ref < incoming.users[j].__ref) {\r\n                    merged.users.unshift(incoming.users[j])\r\n                    k++;\r\n                    break\r\n                }\r\n                if (merged.users[i].__ref == incoming.users[j].__ref) {\r\n                    merged.users[i] = incoming.users[j]\r\n                    k++\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (i == merged.users.length) i--;\r\n        for (j=k; j < incoming.users.length; j++) {\r\n            merged.users[++i] = incoming.users[j];\r\n        }\r\n        merged.users.slice(0, i + 1);\r\n        return merged;\r\n    },\r\n    read(existing: any) {\r\n        return existing;\r\n    },\r\n    keyArgs,\r\n});\r\n\r\nexport const cache: InMemoryCache = new InMemoryCache({\r\n    typePolicies: {\r\n        Query: {\r\n            fields: {\r\n                searchBarValue: {\r\n                    read() {\r\n                        return searchBarVar();\r\n                    },\r\n                },\r\n                EditProfileImage: {\r\n                    read() {\r\n                        return EditProfileImageVal();\r\n                    },\r\n                },\r\n                EditProfileBg: {\r\n                    read() {\r\n                        return EditProfileBgVal();\r\n                    },\r\n                },\r\n\r\n                SFW: {\r\n                    read() {\r\n                        return SFW();\r\n                    },\r\n                },\r\n                getFeed: createPaginationAndCombineTweetsElements([\"isSFW\"]),\r\n                tweets: createPaginationAndCombineTweetsElements([\r\n                    \"userId\",\r\n                    \"filter\",\r\n                    \"isSFW\",\r\n                ]),\r\n                users: createPaginationAndCombineUsersElements([\"search\"]),\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport const searchBarVar: ReactiveVar<searchBarValue> = makeVar<searchBarValue>(\r\n    { value: \"\" }\r\n);\r\n\r\nexport const EditProfileImageVal: ReactiveVar<{\r\n    Image: object | false;\r\n    ImageURL: string | false;\r\n}> = makeVar<any>({\r\n    Image: false,\r\n    ImageURL: false,\r\n});\r\nexport const EditProfileBgVal: ReactiveVar<{\r\n    BgImage: object | false;\r\n    BgImageURL: string | false;\r\n}> = makeVar<any>({\r\n    BgImage: false,\r\n    BgImageURL: false,\r\n});\r\n\r\nexport const SFW: ReactiveVar<{ value: boolean }> = makeVar<any>({\r\n    value: true,\r\n});\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\routes\\Explore.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\Profile.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Home.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\FollowWall.tsx",["328"],"import { Fragment } from 'react';\r\nimport { SideBar } from \"../sideBar/sideBar\";\r\nimport '../../App.css';\r\nimport './profile.css';\r\nimport TrendsBar from '../TrendsBar/TrendsBar';\r\nimport '../../styles/layout.css'\r\nimport FollowList from './FollowList';\r\n\r\n\r\nexport interface FollowType {\r\n  FollowType: string,\r\n}\r\n  const FollowWall: React.FC <FollowType> = ({ FollowType:FollowType }) => {\r\n  return (\r\n    <Fragment>\r\n\r\n      <main className=\"main-container\">\r\n        <aside className=\"sb-left\">< SideBar /></aside>\r\n        <article className=\"wall\">\r\n         \r\n          <FollowList FollowType={FollowType} /> \r\n          \r\n          </article>\r\n        <aside className=\"sb-right\">< TrendsBar /></aside>\r\n      </main>\r\n   \r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default FollowWall; ","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\notFound\\notFound.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\landingPage\\landingPage.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\signup_form\\signup.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\login_form\\login.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\ExtendedTweet\\ExtendedTweet.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\SerachResult.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\TrendsBar.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\sideBar.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\SearchBar\\SearchBar.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\login_query.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\CurrentTrends\\CurrentTrends.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\createUser.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\ProfileWall.tsx",["329"],"import { Fragment, useState } from 'react';\r\nimport '../../App.css';\r\nimport './profile.css';\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport '../../styles/layout.css'\r\nimport { useQuery } from '@apollo/client';\r\nimport { LoggedUser } from '../../common/queries/Userqery';\r\nimport TweetList from '../tweets/TweetList'\r\nimport { Switch, NavLink, Route, useLocation, useRouteMatch } from \"react-router-dom\"\r\nimport { parseJwt } from '../../common/decode';\r\nimport Loading from \"../../UI/Loading\"\r\nimport FoF from '../../UI/FoF/FoF';\r\n\r\n\r\nfunction ProfileWall() {\r\n  let self = false;\r\n  let ID: string;\r\n  let profile;\r\n  if (localStorage.getItem('token')) {\r\n    profile = parseJwt(localStorage.getItem('token'))\r\n  }\r\n\r\n  const location = useLocation()\r\n  console.log(location.pathname.substr(1))\r\n  const match = useRouteMatch();\r\n  const path = location.pathname.substr(1)\r\n  const lastIndex = location.pathname.lastIndexOf('/')\r\n  let urlId = path\r\n\r\n\r\n  if (lastIndex !== 0) urlId = urlId.substr(0, lastIndex - 1)\r\n  if (urlId === 'profile' ||\r\n    (profile && urlId == profile.id)) {\r\n    ID = profile.id; self = true;\r\n  }\r\n  else ID = urlId\r\n\r\n\r\n  const { data, loading, error } = useQuery(LoggedUser, { variables: { id: ID } });\r\n  const [tweetsPage, setTweetsPage] = useState<any>(1);\r\n  const [tweetsRepliesPage, setTweetsRepliesPage] = useState<any>(1);\r\n  const [mediaPage, setMediaPage] = useState<any>(1);\r\n  const [likesPage, setLikesPage] = useState<any>(1);\r\n\r\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\r\n  if (error) return <FoF\r\n    msg=\"This account doesn’t exist\"\r\n    secMsg=\"try search for another\"\r\n  />\r\n  return (\r\n    < Fragment >\r\n      <ProfileInfo user={data.user} self={self} />\r\n\r\n      <nav >\r\n        <ul className=\"pf--nav-ul \">\r\n          <NavLink exact activeClassName=\"active\" className=\"pf--nav-link\" to={match.url}>\r\n            <li>Tweets</li>\r\n          </NavLink>\r\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/replies'}>\r\n            <li>Tweets & replies</li>\r\n          </NavLink>\r\n\r\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/media'}>\r\n            <li>Media</li>\r\n          </NavLink>\r\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/likes'}>\r\n            <li>Likes</li>\r\n          </NavLink>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"tweets\">\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={match.url}\r\n            render={() => (\r\n              <TweetList filter={``} page={tweetsPage} setPage={setTweetsPage} id={ID} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={match.url + '/replies'}\r\n            render={() => (\r\n              <TweetList filter={`replies&tweets`} page={tweetsRepliesPage} setPage={setTweetsRepliesPage} id={ID} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={match.url + '/media'}\r\n            render={() => (\r\n              <TweetList filter={`media`} page={mediaPage} setPage={setMediaPage} id={ID} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={match.url + '/likes'}\r\n            render={() => (\r\n              <TweetList filter={`likes`} page={likesPage} setPage={setLikesPage} id={ID} />\r\n            )}\r\n          />\r\n        </Switch>\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </Fragment >\r\n  );\r\n}\r\n\r\nexport default ProfileWall;","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\PostTweet.tsx",["330","331","332"],"import { ErrorMessage, Field, Form, Formik } from \"formik\"\r\nimport React, { useRef } from \"react\"\r\nimport * as Yup from \"yup\"\r\nimport { TweetButton } from '../sideBar/tweetButton/tweetButton'\r\nimport { Tweets } from '../../common/queries/TweetQuery'\r\nimport { FeedTweets } from '../../common/queries/Feedtweets'\r\nimport { Post_Tweet } from '../../common/queries/createTweet'\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { updateTweetsCacheForCreateTweet } from \"../../common/utils/writeCache\"\r\nimport './tweet.css';\r\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\r\nimport { parseJwt } from '../../common/decode';\r\ninterface Post {\r\n  text: string\r\n}\r\nconst PostTweet = () => {\r\n  var profile: any;\r\n  if (localStorage.getItem('token') !== \"LOGOUT\") {\r\n    profile = parseJwt(localStorage.getItem('token'))\r\n  }\r\n  // const userData = useQuery (Get_Logged_user)\r\n  // const user:User = userData.data.logUser.user\r\n  // console.log (user.imageURL)\r\n\r\n  const inputRef: any = useRef()\r\n  // mutation\r\n  const [createTweet, { data }] = useMutation(Post_Tweet, {\r\n    update: updateTweetsCacheForCreateTweet\r\n  });\r\n\r\n  const initialValues: Post = {\r\n    text: \"\"\r\n  }\r\n  /********   dynamic hight control funtion   ***********/\r\n  function setInputHight(element: React.ChangeEvent<HTMLElement>) {\r\n    element.target.style.height = \"60px\"\r\n    element.target.style.height = (element.target.scrollHeight) + \"px\"\r\n    inputRef.current.style.height = (element.target.scrollHeight) + \"px\"\r\n\r\n  }\r\n  const validationSchema = Yup.object({\r\n    text: Yup.string()\r\n      .required()\r\n      .min(1, \"Must be more than 1 character\")\r\n      .max(256, \"Must be less than 257 characters\")\r\n  })\r\n  return (\r\n    <div className=\"mb-3 p-3 w-full shadow bg-white flex\">\r\n      {/* this should be dynamic */}\r\n      <div className=\"tweet-icon\">\r\n        <img src={profile.imageURL || avatar} alt=\"avatar\" />\r\n      </div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={({ text }, { setSubmitting, resetForm }) => {\r\n          setSubmitting(true);\r\n          createTweet({\r\n            variables: { tweetInput: { text } },\r\n          });\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        <div className=\"w-full mx-4 flex flex-col\">\r\n          <Form >\r\n            <div ref={inputRef} className=\"w-full mb-2 tweet-text flex h-16\">\r\n              <Field\r\n\r\n                name=\"text\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                onKeyPress={setInputHight}\r\n                className=\"w-full placeholder-gray4 p-3 ml-2 \r\n              focus:outline-none resize-none overflow-hidden min-h-12\"\r\n                placeholder=\"What's happening...\" />\r\n            </div>\r\n            <hr className=\"my-2\" />\r\n            <div className=\"flex justify-between items-center\">\r\n              <button className=\"hover:bg-blue-100 rounded-full py-2 px-3 transition\">\r\n                <svg\r\n                  className=\"h-8 w-8 text-blue-400 \"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                </svg>\r\n              </button>\r\n              <ErrorMessage name=\"text\" render={msg => <div className=\"text-red-500\">{msg}</div>} />\r\n\r\n              <TweetButton name=\"Tweet\" type=\"submit\" className=\" rounded-full py-3 px-6\" />\r\n            </div>\r\n\r\n          </Form>\r\n        </div>\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostTweet\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\HomeTweets.tsx",["333"],"import React, { useState } from \"react\";\r\n\r\nimport { useQuery } from \"@apollo/client\";\r\nimport Tweet from \"./Tweet\";\r\nimport { TweetData } from \"./TweetData_interface\";\r\nimport { FeedTweets } from \"../../common/queries/Feedtweets\";\r\nimport Loading from \"../../UI/Loading\";\r\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { parseJwt } from '../../common/utils/jwtDecoder'\r\n\r\nfunction HomeTweets() {\r\n    let [page, setPage] = useState(1);\r\n    const sfw = useQuery(Get_SFW).data;\r\n    const loggedUser = parseJwt(localStorage.getItem('token')!)\r\n    const { loading, error, data, fetchMore } = useQuery(FeedTweets, {\r\n        variables: {\r\n            isSFW: sfw.SFW.value,\r\n        },\r\n    });\r\n    if (!loading && data && data?.getFeed?.tweets?.length == 10 && data?.getFeed?.totalCount > 10) {\r\n        fetchMore({\r\n            variables: {\r\n                isSFW: sfw.SFW.value,\r\n                page: 2,\r\n            },\r\n        })\r\n    }\r\n    if (loading) return <Loading />;\r\n    if (error) return <p>`Error! this is the one ${error.message}`</p>;\r\n    console.log(data?.getFeed?.tweets)\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            dataLength={data?.getFeed?.tweets?.length || 0}\r\n            next={() => {\r\n                setPage(Math.floor((data?.getFeed?.tweets?.length || 10) / 10) + 1);\r\n                return fetchMore({\r\n                    variables: {\r\n                        isSFW: sfw.SFW.value,\r\n                        page: Math.floor((data?.getFeed?.tweets?.length || 10) / 10) + 1,\r\n                    },\r\n                });\r\n            }}\r\n            hasMore={data?.getFeed?.totalCount >= page * 10 || false}\r\n            loader={<Loading />}\r\n            style={{\r\n                overflow: \"hidden\"\r\n            }}\r\n        >\r\n            {data?.getFeed?.tweets?.map((tweet: TweetData) => {\r\n                if ((tweet.state !== 'R') ||\r\n                    (tweet.state === 'R' && (loggedUser.id !== tweet.user.id)))\r\n                    return (\r\n                        <Tweet\r\n                            id={tweet.id}\r\n                            text={tweet.text}\r\n                            repliesCount={tweet.repliesCount}\r\n                            createdAt={tweet.createdAt}\r\n                            isLiked={tweet.isLiked}\r\n                            isRetweeted={tweet.isRetweeted}\r\n                            user={tweet.user}\r\n                            loggedUser={loggedUser}\r\n                            tweet={tweet}\r\n                            likesCount={tweet.likesCount}\r\n                            key={tweet.id}\r\n                            quotedRetweetsCount={tweet.quotedRetweetsCount}\r\n                            retweetsCount={tweet.retweetsCount}\r\n                            state={tweet.state}\r\n                            originalTweet={tweet.originalTweet}\r\n                            repliedToTweet={tweet.repliedToTweet}\r\n                        />\r\n\r\n\r\n                    );\r\n                return null;\r\n\r\n            })}\r\n        </InfiniteScroll>\r\n    );\r\n}\r\n\r\nexport default HomeTweets;\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\logo\\logo.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\Footer\\Footer.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\tweetButton\\tweetButton.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_SFW.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_SINGLE_TWEET.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Loading.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Tweet.tsx",["334"],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\ListofReplies.tsx",["335","336"],"import React, { Fragment } from 'react';\r\nimport '../../styles/layout.css'\r\nimport Tweet from './Tweet';\r\nimport { TweetData } from './TweetData_interface'\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_SINGLE_TWEET } from './../../common/queries/GET_SINGLE_TWEET';\r\nimport { Get_SFW } from './../../common/queries/GET_SFW';\r\nimport Loading from './../../UI/Loading';\r\nimport FoF from './../../UI/FoF/FoF';\r\nimport { parseJwt } from '../../common/decode';\r\nimport { GET_TWEET_REPLIES } from '../../common/queries/GET_TWEET_REPLIES';\r\n\r\nconst Replies: React.FC<any> = (props: any) => {\r\n\r\n  const sfw = useQuery(Get_SFW).data;\r\n  const loggedUser = parseJwt(localStorage.getItem('token')!)\r\n\r\n  const { data, loading, error } = useQuery(GET_TWEET_REPLIES, {\r\n    variables: {\r\n      tweetId: props.id,\r\n      isSFW: sfw.SFW.value,\r\n      page: 0,\r\n    }\r\n  })\r\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\r\n  if (error) {\r\n\r\n    return <FoF\r\n      msg=\"Something wo'nt wrong\"\r\n    />\r\n  }\r\n  const tweet: any = data.tweet\r\n  return (\r\n    <Fragment>\r\n      {tweet.replies.tweets.map((tweet: any) => {\r\n        return (\r\n          <Tweet\r\n            id={tweet.id}\r\n            text={tweet.text}\r\n            repliesCount={tweet.repliesCount}\r\n            createdAt={tweet.createdAt}\r\n            isLiked={tweet.isLiked}\r\n            user={tweet.user}\r\n            loggedUser={loggedUser}\r\n            tweet={tweet}\r\n            likesCount={tweet.likesCount}\r\n            key={tweet.id}\r\n            quotedRetweetsCount={tweet.quotedRetweetsCount}\r\n            retweetsCount={tweet.retweetsCount}\r\n            state={tweet.state}\r\n            originalTweet={tweet.originalTweet}\r\n            repliedToTweet={tweet.repliedToTweet}\r\n          />\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Replies;","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\FoF\\FoF.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\decode.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_Hashtags.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\writeCache.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Userqery.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\createTweet.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\ProfileInfo.tsx",["337","338"],"import React, { Fragment, useState } from 'react';\r\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\r\nimport { User } from '../../common/TypesAndInterfaces'\r\nimport Modal from '../../UI/Modal/Modal';\r\nimport EditProfile from './EditUser/EditProfile';\r\nimport { timeConverter } from '../../common/utils/timestamp';\r\nimport { EditProfileBgVal, EditProfileImageVal } from '../../common/cache';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router';\r\nimport Viewer from 'react-viewer';\r\nimport FollowButton from '../FollowButton/FollowButton';\r\n\r\n\r\nconst ProfileInfo: React.FC<{ user: User, self: boolean }> = ({ user, self }) => {\r\n\r\n  //EDIT PROFILE MODAL\r\n  const [edit, setEdit] = useState<boolean>(false)\r\n\r\n  //background viewer\r\n  const [bgVisible, setBgVisible] = useState(false);\r\n\r\n  //profile picture viewer\r\n  const [pfVisible, setPfVisible] = useState(false);\r\n\r\n\r\n  const modalClosed = () => {\r\n    EditProfileImageVal({\r\n      Image: false,\r\n      ImageURL: false\r\n    })\r\n    EditProfileBgVal({\r\n      BgImage: false,\r\n      BgImageURL: false\r\n    })\r\n    setEdit(false)\r\n  }\r\n\r\nconst location = useHistory();\r\nconst handlePathFollowing = () => {\r\n  location.push({\r\n    pathname: location.location.pathname + \"/following\"\r\n  })\r\n  }\r\n  \r\nconst handlePathFollower = () => {\r\n  location.push({\r\n    pathname: location.location.pathname + \"/follower\"\r\n  })\r\n  }\r\n\r\n  return (\r\n\r\n    <Fragment>\r\n      <Modal show={edit}\r\n        modalClosed={modalClosed}>\r\n        <EditProfile\r\n          user={user}\r\n          show={edit}\r\n          close={modalClosed} />\r\n      </Modal>\r\n\r\n      <header className=\"top-bar px-3 py-2\">\r\n        <span className=\" m-3\">\r\n          <Link to=\"/\">\r\n\r\n            <i className=\"fa fa-arrow-left  p--main-color\" aria-hidden=\"true\"></i>\r\n          </Link>\r\n\r\n        </span>\r\n        <div>\r\n          <p className=\"font-extrabold text-lg \">{user.name}</p>\r\n          {/* featch front tweet */}\r\n          <p className=\"p--light-color block \">{user.tweets?.totalCount} tweet</p>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"pf--container\">\r\n\r\n        <div className=\"pf--bg\" >\r\n          {user.coverImageURL && (\r\n\r\n            <img className=\"pf--avatar-img\" src={user.coverImageURL}\r\n              alt=\"avatar\" onClick={() => user.coverImageURL && setBgVisible(true)} />\r\n          )}\r\n          <Viewer\r\n            visible={bgVisible}\r\n            onClose={() => { setBgVisible(false); }}\r\n            images={[{ src: user.coverImageURL || \"\", alt: 'background image' }]}\r\n          />\r\n\r\n        </div>\r\n\r\n        <div className=\"pf--avatar\">\r\n\r\n          {\r\n            <img src={user.imageURL || avatar} className=\"pf--avatar-img\"\r\n              alt=\"avatar\" onClick={() => user.imageURL && setPfVisible(true)} />\r\n\r\n\r\n          }\r\n          <Viewer\r\n            visible={pfVisible}\r\n            onClose={() => { setPfVisible(false); }}\r\n            images={[{ src: user.imageURL || \"\", alt: 'profile image' }]}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"pf--info\">\r\n          <div className=\"pf--flw-btn-div p-3 h-12\">\r\n            {self ? < button onClick={() => setEdit(true)} className={\"pf--follow-btn rounded-full px-3 font-semibold text-xm  py-2 mt-3 \"}>\r\n              Edit Profile\r\n            </button > :\r\n              <FollowButton id={user.id} following={user.isFollowing} py=\"py-2\" px=\"px-4\" />\r\n            }\r\n\r\n\r\n          </div>\r\n          <div className=\"mx-2 \">\r\n            <p className=\"font-extrabold text-lg pb-1 mt-1.5\">{user.name} </p>\r\n            <p className=\"p--light-color block pb-1\">@{user.userName} {!self && user.isFollower && <span className=\" text-gray-600 bg-gray-200 rounded font-light p-0.5 ml-1\">follows you</span>}</p>\r\n            <p className=\"whitespace-pre-wrap \">{user.bio}</p>\r\n            <div className=\"p--light-color pb-1\">\r\n              <span className=\"pr-2\"><i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i> Egypt ... cairo</span>\r\n              <span className=\"px-2\" ><i className=\"fa fa-gift\" aria-hidden=\"true\"></i> Born {user.birthDate} </span>\r\n              <span className=\"px-2\"><i className=\"fa fa-calendar\" aria-hidden=\"true\"></i> Joined {user.createdAt ? timeConverter(Number(user.createdAt), false) : null}</span>\r\n            </div>\r\n            <div className=\"font-bold pb-1 space-x-2 \">\r\n              {/* fetch followers count  */}\r\n              <a onClick={ handlePathFollowing } className =\"hover:underline\"> {Number(user.followingCount) - 1} <span className=\"p--light-color mr-4 hover:underline\">Following</span> </a>\r\n              <a onClick={ handlePathFollower }  className=\"hover:underline \"> {Number(user.followersCount) - 1} <span className=\"p--light-color mr-4\">Follower</span> </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Get_SearchBar_Value.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\ListOfUsers\\PersonItem\\PersonItem.tsx",["339"],"import React from 'react';\r\n\r\nimport { PersonEntity } from '../../../../common/TypesAndInterfaces';\r\n\r\nimport './PersonItem.css'\r\nimport '../../../profile/profile.css'\r\nimport FollowButton from '../../../FollowButton/FollowButton';\r\nimport { parseJwt } from '../../../../common/decode';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst TrendItem: React.FC<PersonEntity> = ({ id, bio, isFollowing, name, username, followed = false, imageURI, numberOfFollowers }) => {\r\n  const history = useHistory();\r\n\r\n  const goToProfile = () => {\r\n    history.push({\r\n      pathname: '/' + id,\r\n    })\r\n\r\n  }\r\n\r\n  const profilePicture = (imageURI === undefined || imageURI === null) ?\r\n    <svg className=\"w-full h-full\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" /></svg> :\r\n    <img className=\"rounded-full w-full\" src={imageURI} alt=\"user\" />;\r\n\r\n  return (\r\n\r\n    <div className=\" person-item flex  justify-between items-start p-3 hover:bg-gray-100\" onClick={goToProfile}>\r\n\r\n      <div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\r\n        {profilePicture}\r\n      </div>\r\n\r\n      <div className=\"flex-grow\">\r\n        <h1 className=\"person-item-name  text-xm font-bold\">{name}</h1>\r\n        <p className=\"person-item-username\"><span className=\"text-xm\">@</span>{username}</p>\r\n        <p>{bio}</p>\r\n      </div>\r\n      <div>\r\n        {localStorage.getItem('token') && (id == parseJwt(localStorage.getItem('token')).id) ? null :\r\n          <FollowButton id={id} following={isFollowing} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default TrendItem;\r\n\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetList.tsx",["340"],"import React, { Fragment } from \"react\";\r\n\r\nimport { useQuery } from \"@apollo/client\";\r\n// import Tweet from '../Tweet';\r\nimport Tweet from \"./Tweet\";\r\nimport { Tweets } from \"../../common/queries/TweetQuery\";\r\nimport { TweetData } from \"./TweetData_interface\";\r\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\r\nimport Loading from \"../../UI/Loading\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { parseJwt } from \"../../common/decode\";\r\n\r\nexport interface TweetFilter {\r\n    filter: string;\r\n    page: number;\r\n    setPage: any;\r\n    id: string;\r\n}\r\n\r\nconst TweetList: React.FC<TweetFilter> = (props) => {\r\n\r\n    const { filter, page, setPage } = props;\r\n    const sfw = useQuery(Get_SFW).data;\r\n    const loggedUser = parseJwt(localStorage.getItem('token')!)\r\n    const { loading, error, data, fetchMore } = useQuery(Tweets, {\r\n        variables: {\r\n            userId: props.id,\r\n            filter: filter,\r\n            isSFW: sfw.SFW.value,\r\n        },\r\n    });\r\n    if (!loading && data && data?.tweets?.tweets?.length == 10 && data?.tweets?.totalCount > 10) {\r\n        fetchMore({\r\n            variables: {\r\n                userId: props.id,\r\n                isSFW: sfw.SFW.value,\r\n                page: 2,\r\n                filter: filter\r\n            },\r\n        })\r\n    }\r\n    if (loading) return <Fragment><br /> <br /> <Loading size={30} /></Fragment>;\r\n    if (error) return <p>`Error! ${error.message}`</p>;\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            dataLength={data?.tweets?.tweets?.length || 0}\r\n            next={() => {\r\n                setPage(Math.floor((data?.tweets?.tweets?.length || 10) / 10) + 1);\r\n                return fetchMore({\r\n                    variables: {\r\n                        userId: props.id,\r\n                        isSFW: sfw.SFW.value,\r\n                        page: Math.floor((data?.tweets?.tweets?.length || 10) / 10) + 1,\r\n                        filter: filter\r\n                    },\r\n                });\r\n            }}\r\n            style={{\r\n                overflow: \"hidden\"\r\n            }}\r\n            hasMore={data?.tweets?.totalCount > page * 10 || false}\r\n            loader={<Loading />}\r\n        >\r\n            {data.tweets.tweets.map((tweet: TweetData) => {\r\n                return (\r\n                    <Tweet\r\n                        id={tweet.id}\r\n                        text={tweet.text}\r\n                        repliesCount={tweet.repliesCount}\r\n                        createdAt={tweet.createdAt}\r\n                        isLiked={tweet.isLiked}\r\n                        isRetweeted={tweet.isRetweeted}\r\n                        user={tweet.user}\r\n                        loggedUser={loggedUser}\r\n                        tweet={tweet}\r\n                        likesCount={tweet.likesCount}\r\n                        key={tweet.id}\r\n                        quotedRetweetsCount={tweet.quotedRetweetsCount}\r\n                        retweetsCount={tweet.retweetsCount}\r\n                        state={tweet.state}\r\n                        originalTweet={tweet.originalTweet}\r\n                        repliedToTweet={tweet.repliedToTweet}\r\n                    />\r\n                );\r\n            })}\r\n        </InfiniteScroll>\r\n    );\r\n};\r\n\r\nexport default TweetList;\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\CurrentTrends\\TrendItem\\TrendItem.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Get_Search_Result.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Feedtweets.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\ListOfUsers\\listofusers.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Modal\\Modal.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_TWEET_REPLIES.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\sideBarItem\\sideBarItem.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\flootProfile\\flootProfile.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\SideList\\SideList.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetImg.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Retweet.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\QoutedTweet.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetToolbarIcons.tsx",["341","342","343","344"],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetInfo.tsx",["345","346","347","348","349"],"import './tweet.css';\r\nimport { timeConverter } from '../../common/utils/timestamp';\r\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\r\nimport deleteTweetMutation from '../../common/queries/deleteTweet'\r\nimport { DeleteMedia } from '../../common/queries/DeleteMedia'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useMutation } from \"@apollo/client\"\r\nimport { CustomDialog } from 'react-st-modal'\r\nimport DeleteConfirmationDialog from \"../../UI/Dialogs/DeleteConfirmationDialog\"\r\nimport ErrorDialog from \"../../UI/Dialogs/ErroDialog\"\r\nimport { updateTweetsCacheForDeleteTweet } from \"../../common/utils/writeCache\"\r\n\r\nexport interface TweetData {\r\n  user?: {\r\n    imageURL?: string\r\n    name?: string\r\n    userName?: string\r\n  }\r\n  id?: string\r\n  text: string\r\n  likesCount?: number\r\n  repliesCount?: number\r\n  createdAt?: number\r\n  isLiked?: boolean\r\n}\r\n\r\nfunction TweetInfo(props: any) {\r\n  const history = useHistory();\r\n  const { tweet } = props\r\n  const [deleteMedia] = useMutation(DeleteMedia)\r\n  const [deleteTweet] = useMutation(deleteTweetMutation, {\r\n    update(cache) {\r\n      const normalizedId = cache.identify({\r\n        id: tweet.id,\r\n        __typename: \"Tweet\",\r\n      });\r\n      if (normalizedId) {\r\n        cache.evict({ id: normalizedId });\r\n        updateTweetsCacheForDeleteTweet(cache, tweet)\r\n      }\r\n    }\r\n  })\r\n\r\n  const goToProfile = () => {\r\n    history.replace({\r\n      pathname: '/' + props.id,\r\n\r\n    })\r\n  }\r\n  const handleDeleteButton = async () => {\r\n    try {\r\n      const result = await CustomDialog(<DeleteConfirmationDialog />, {\r\n        title: 'Confirm Delete',\r\n        showCloseIcon: false,\r\n      });\r\n      if (result) {\r\n        await deleteTweet({\r\n          variables: {\r\n            id: props.tweetId\r\n          }\r\n        })\r\n        tweet.mediaURLs.forEach((mediaURL: any) => {\r\n          deleteMedia({\r\n            variables: {\r\n              id: mediaURL.split('/')[3]\r\n            }\r\n          })\r\n        })\r\n      }\r\n    }\r\n    catch (e) {\r\n      const error = await CustomDialog(<ErrorDialog message={e.message} />, {\r\n        title: 'Error!',\r\n        showCloseIcon: false,\r\n      });\r\n    }\r\n  }\r\n  return (\r\n\r\n    <div className={`flex flex-row my-1 ml-2  w-full ${props.className}`}>\r\n      <a onClick={(e) => { goToProfile(); e.stopPropagation() }} className=\"font-bold mr-1 hover:underline\">{props.name}</a>\r\n      <p className=\"p--light-color\"> @{props.userName}. </p>\r\n      <p className=\"p--light-color px-1 hover:underline\"> {props.createdAt ? timeConverter(Number(props.createdAt)) : null}</p>\r\n      <span onClick={(e) => e.stopPropagation()} className=\"tweet-ellipsis p--light-color z-10 inline-block float-right\">\r\n\r\n        {/*Don't display settings in qouted tweet*/}\r\n        {(props.type === 'Q') ? null :\r\n          <ToolBox\r\n            design={<i className=\"fas fa-ellipsis-h\"></i>}\r\n          >\r\n            <ul className=\" mb-40 right-4 absolute bg-gray-100 \" >\r\n              {props?.loggedUser?.id == props?.tweet?.user?.id ? <button onClick={handleDeleteButton} className=\"mt-1 w-40 text-center outline:none block px-4 py-2 text-sm text-red-700 bg-gray-100 hover:bg-gray-200\r\n          \" >Delete</button> : null}\r\n              <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\r\n          hover:text-gray-900\" >block</a>\r\n              <a className=\"mt-1 w-40 text-center block \r\n            px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\r\n          hover:text-gray-900\" >mute</a>\r\n\r\n            </ul>\r\n          </ToolBox>}\r\n\r\n      </span>\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default TweetInfo;","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\TweetQuery.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\FollowButton\\FollowButton.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\timestamp.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\deleteTweet.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\RETWEET.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\DeleteMedia.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\logout\\logout.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\toolbox\\toolbox.tsx",["350"],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Dialogs\\ErroDialog.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Dialogs\\DeleteConfirmationDialog.tsx",["351"],"import {useState} from \"react\"\r\nimport { useDialog } from 'react-st-modal';\r\n\r\nfunction DeleteConfirmationDialog() {\r\n  const dialog = useDialog();\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-red-700 text-lg text-center\">Are you sure you want to delete this tweet?</h1>\r\n      <div className=\"grid mt-8 mb-8 grid-cols-2 gap-4 w-3/5 mx-auto\">\r\n      <button\r\n        className=\"p-3 bg-red-700 text-white rounded-md border-transparent outline-none transform transition focus:outline-none hover:scale-110\"\r\n        onClick={() => {\r\n          dialog.close(1);\r\n        }}\r\n      >\r\n       Yes\r\n      </button>\r\n      <button\r\n        className=\"p-3 bg-gray-400 text-white rounded-md border-transparent outline-none transform transition focus:outline-none hover:scale-110\"\r\n        onClick={() => {\r\n          dialog.close(0);\r\n        }}\r\n      >\r\n        No\r\n      </button>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\nexport default DeleteConfirmationDialog","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Follow.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Backdrop\\Backdrop.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\EditUser\\EditProfile.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GetEditBgImage.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GetEditProfileImage.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\EditUser.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\EditUser\\InputSet.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\FollowList.tsx",["352","353","354","355","356"],"import { useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { LoggedUser } from \"../../common/queries/Userqery\";\r\nimport { parseJwt } from \"../../common/decode\";\r\nimport Loading from \"../../UI/Loading\";\r\nimport FoF from \"../../UI/FoF/FoF\";\r\nimport TrendItem from \"../TrendsBar/ListOfUsers/PersonItem/PersonItem\";\r\nimport { Link, useLocation  } from \"react-router-dom\";\r\n\r\nexport interface FollowType {\r\n  FollowType: string,\r\n}\r\n  const FollowList: React.FC <FollowType> = ({ FollowType:FollowType }) => {\r\nvar profile;\r\nlet ID ;\r\n\r\n if (localStorage.getItem('token')) {\r\n    profile = parseJwt(localStorage.getItem('token'))\r\n  }\r\n  let currentId = profile.id\r\n\r\nconst location = useLocation();\r\nconst path = location.pathname.split(\"/\")[1];\r\nif (path == \"profile\" ){\r\n ID = profile.id;\r\n  }\r\nelse {\r\nID = path;\r\n}\r\n\r\n const { data , loading , error } = useQuery(LoggedUser, { variables: { id: ID , page : 1} });\r\n if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\r\n if (error) return <FoF msg=\"This account doesn’t exist\"/>\r\n\r\n if (FollowType == \"follower\" ) \r\n {\r\n  return (\r\n    <div>\r\n  <header className=\"top-bar px-3 py-2\">\r\n    <span className=\" m-3\">\r\n      <Link  to=\"/profile\">\r\n        <i className=\"fa fa-arrow-left  p--main-color\" aria-hidden=\"true\"></i>\r\n      </Link>\r\n\r\n    </span>\r\n    <div>\r\n      <p className=\"font-extrabold text-lg mt-3 \"> Follower list</p>\r\n\r\n    </div>\r\n  </header>\r\n\r\n{data.user.followers.users.map((person:any) => {\r\nreturn(\r\n<div>\r\n              {(person.id != currentId) ?\r\n                <TrendItem  \r\n               key ={person.userName}             \r\n               id={person.id}\r\n               name={person.name}\r\n               username={person.userName}\r\n               followed={person.isFollower}\r\n               imageURI={person.imageURL}\r\n               isFollowing={person.isFollowing}\r\n               bio={person.bio}\r\n               />:null\r\n\r\n            }\r\n      </div>\r\n);\r\n})}\r\n</div> \r\n);\r\n } \r\n else {\r\n  return (\r\n    <div>\r\n  <header className=\"top-bar px-3 py-2\">\r\n    <span className=\" m-3\">\r\n      <Link  to=\"/profile\">\r\n        <i className=\"fa fa-arrow-left  p--main-color\" aria-hidden=\"true\"></i>\r\n      </Link>\r\n\r\n    </span>\r\n    <div>\r\n      <p className=\"font-extrabold text-lg mt-3 \"> Following list</p>\r\n\r\n    </div>\r\n  </header>\r\n\r\n{data.user.following.users.map((person:any) => {\r\nreturn(\r\n<div>\r\n              {(person.id != currentId) ?\r\n                <TrendItem   \r\n               key ={person.userName}               \r\n               id={person.id}\r\n               name={person.name}\r\n               username={person.userName}\r\n               followed={person.isFollower}\r\n               imageURI={person.imageURL}\r\n               isFollowing={person.isFollowing}\r\n               bio={person.bio}\r\n               />:null\r\n\r\n            }\r\n      </div>\r\n);\r\n})}\r\n</div> \r\n);\r\n }\r\n};\r\n\r\n\r\nexport default FollowList;\r\n",{"ruleId":"357","replacedBy":"358"},{"ruleId":"359","replacedBy":"360"},{"ruleId":"361","severity":1,"message":"362","line":4,"column":7,"nodeType":"363","messageId":"364","endLine":4,"endColumn":33},{"ruleId":"365","severity":1,"message":"366","line":14,"column":37,"nodeType":"367","messageId":"368","endLine":14,"endColumn":39},{"ruleId":"365","severity":1,"message":"366","line":22,"column":15,"nodeType":"367","messageId":"368","endLine":22,"endColumn":17},{"ruleId":"365","severity":1,"message":"366","line":49,"column":44,"nodeType":"367","messageId":"368","endLine":49,"endColumn":46},{"ruleId":"365","severity":1,"message":"366","line":56,"column":15,"nodeType":"367","messageId":"368","endLine":56,"endColumn":17},{"ruleId":"365","severity":1,"message":"366","line":85,"column":43,"nodeType":"367","messageId":"368","endLine":85,"endColumn":45},{"ruleId":"365","severity":1,"message":"366","line":92,"column":15,"nodeType":"367","messageId":"368","endLine":92,"endColumn":17},{"ruleId":"369","severity":1,"message":"370","line":13,"column":48,"nodeType":"371","messageId":"372","endLine":13,"endColumn":69,"fix":"373"},{"ruleId":"365","severity":1,"message":"366","line":33,"column":23,"nodeType":"367","messageId":"368","endLine":33,"endColumn":25},{"ruleId":"361","severity":1,"message":"374","line":5,"column":10,"nodeType":"363","messageId":"364","endLine":5,"endColumn":16},{"ruleId":"361","severity":1,"message":"375","line":6,"column":10,"nodeType":"363","messageId":"364","endLine":6,"endColumn":20},{"ruleId":"361","severity":1,"message":"376","line":27,"column":25,"nodeType":"363","messageId":"364","endLine":27,"endColumn":29},{"ruleId":"365","severity":1,"message":"366","line":21,"column":59,"nodeType":"367","messageId":"368","endLine":21,"endColumn":61},{"ruleId":"365","severity":1,"message":"366","line":170,"column":38,"nodeType":"367","messageId":"368","endLine":170,"endColumn":40},{"ruleId":"361","severity":1,"message":"377","line":4,"column":10,"nodeType":"363","messageId":"364","endLine":4,"endColumn":19},{"ruleId":"361","severity":1,"message":"378","line":6,"column":10,"nodeType":"363","messageId":"364","endLine":6,"endColumn":26},{"ruleId":"379","severity":1,"message":"380","line":129,"column":15,"nodeType":"381","endLine":129,"endColumn":79},{"ruleId":"379","severity":1,"message":"380","line":130,"column":15,"nodeType":"381","endLine":130,"endColumn":79},{"ruleId":"365","severity":1,"message":"366","line":40,"column":47,"nodeType":"367","messageId":"368","endLine":40,"endColumn":49},{"ruleId":"365","severity":1,"message":"366","line":32,"column":58,"nodeType":"367","messageId":"368","endLine":32,"endColumn":60},{"ruleId":"379","severity":1,"message":"380","line":69,"column":7,"nodeType":"381","endLine":69,"endColumn":71},{"ruleId":"379","severity":1,"message":"380","line":74,"column":7,"nodeType":"381","endLine":74,"endColumn":47},{"ruleId":"379","severity":1,"message":"380","line":96,"column":13,"nodeType":"381","endLine":97,"endColumn":88},{"ruleId":"379","severity":1,"message":"380","line":103,"column":7,"nodeType":"381","endLine":103,"endColumn":47},{"ruleId":"361","severity":1,"message":"382","line":6,"column":10,"nodeType":"363","messageId":"364","endLine":6,"endColumn":14},{"ruleId":"361","severity":1,"message":"383","line":72,"column":13,"nodeType":"363","messageId":"364","endLine":72,"endColumn":18},{"ruleId":"379","severity":1,"message":"380","line":81,"column":7,"nodeType":"381","endLine":81,"endColumn":109},{"ruleId":"365","severity":1,"message":"366","line":92,"column":38,"nodeType":"367","messageId":"368","endLine":92,"endColumn":40},{"ruleId":"379","severity":1,"message":"380","line":96,"column":15,"nodeType":"381","endLine":98,"endColumn":33},{"ruleId":"379","severity":1,"message":"380","line":63,"column":7,"nodeType":"381","endLine":63,"endColumn":91},{"ruleId":"361","severity":1,"message":"384","line":1,"column":9,"nodeType":"363","messageId":"364","endLine":1,"endColumn":17},{"ruleId":"369","severity":1,"message":"370","line":13,"column":48,"nodeType":"371","messageId":"372","endLine":13,"endColumn":69,"fix":"385"},{"ruleId":"365","severity":1,"message":"366","line":24,"column":10,"nodeType":"367","messageId":"368","endLine":24,"endColumn":12},{"ruleId":"365","severity":1,"message":"366","line":35,"column":17,"nodeType":"367","messageId":"368","endLine":35,"endColumn":19},{"ruleId":"365","severity":1,"message":"386","line":55,"column":27,"nodeType":"367","messageId":"368","endLine":55,"endColumn":29},{"ruleId":"365","severity":1,"message":"386","line":93,"column":27,"nodeType":"367","messageId":"368","endLine":93,"endColumn":29},"no-native-reassign",["387"],"no-negated-in-lhs",["388"],"@typescript-eslint/no-unused-vars","'createPaginationAndCombine' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-rename","Destructuring assignment FollowType unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"389","text":"390"},"'Tweets' is defined but never used.","'FeedTweets' is defined but never used.","'data' is assigned a value but never used.","'TweetData' is defined but never used.","'GET_SINGLE_TWEET' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.",{"range":"391","text":"390"},"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",[363,384],"FollowType",[495,516]]