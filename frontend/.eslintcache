[{"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\index.tsx":"1","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\App.tsx":"3","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\jwtDecoder.ts":"4","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\routes\\routing.tsx":"5","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\apolloClient.ts":"6","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\routes\\Explore.tsx":"7","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\cache.ts":"8","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Home.tsx":"9","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\Profile.tsx":"10","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\notFound\\notFound.tsx":"11","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\landingPage\\landingPage.tsx":"12","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\signup_form\\signup.tsx":"13","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\login_form\\login.tsx":"14","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\ExtendedTweet\\ExtendedTweet.tsx":"15","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\sideBar.tsx":"16","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\SearchBar\\SearchBar.tsx":"17","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\TrendsBar.tsx":"18","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\CurrentTrends\\CurrentTrends.tsx":"19","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\SerachResult.tsx":"20","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\login_query.ts":"21","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\createUser.ts":"22","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_SFW.ts":"23","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\HomeTweets.tsx":"24","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\PostTweet.tsx":"25","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\ProfileWall.tsx":"26","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\Footer\\Footer.tsx":"27","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_SINGLE_TWEET.ts":"28","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\tweetButton\\tweetButton.tsx":"29","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\logo\\logo.tsx":"30","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Tweet.tsx":"31","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\FoF\\FoF.tsx":"32","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Loading.tsx":"33","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Get_SearchBar_Value.ts":"34","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Get_Search_Result.ts":"35","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_Hashtags.ts":"36","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\decode.ts":"37","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\createTweet.ts":"38","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\writeCache.ts":"39","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\SideList\\SideList.tsx":"40","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\CurrentTrends\\TrendItem\\TrendItem.tsx":"41","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\ListOfUsers\\PersonItem\\PersonItem.tsx":"42","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\ListOfUsers\\listofusers.tsx":"43","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetList.tsx":"44","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\ProfileInfo.tsx":"45","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Userqery.tsx":"46","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\flootProfile\\flootProfile.tsx":"47","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Modal\\Modal.tsx":"48","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\sideBarItem\\sideBarItem.tsx":"49","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Feedtweets.tsx":"50","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Tweet_Info.tsx":"51","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Tweet_img.tsx":"52","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\toolbox\\toolbox.tsx":"53","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\timestamp.ts":"54","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\TweetQuery.tsx":"55","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Backdrop\\Backdrop.tsx":"56","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\FollowButton\\FollowButton.tsx":"57","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\EditUser\\EditProfile.tsx":"58","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\logout\\logout.tsx":"59","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Follow.ts":"60","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GetEditProfileImage.ts":"61","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\EditUser.ts":"62","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GetEditBgImage.ts":"63","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\DeleteMedia.ts":"64","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\EditUser\\InputSet.tsx":"65","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Tweet_toolbarIcons.tsx":"66","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\quotedTweet.tsx":"67"},{"size":312,"mtime":1619595538737,"results":"68","hashOfConfig":"69"},{"size":425,"mtime":1612315084930,"results":"70","hashOfConfig":"69"},{"size":750,"mtime":1619787981064,"results":"71","hashOfConfig":"69"},{"size":359,"mtime":1619595537253,"results":"72","hashOfConfig":"69"},{"size":3082,"mtime":1619787981134,"results":"73","hashOfConfig":"69"},{"size":555,"mtime":1619787981069,"results":"74","hashOfConfig":"69"},{"size":1226,"mtime":1619595538780,"results":"75","hashOfConfig":"69"},{"size":4821,"mtime":1619789758977,"results":"76","hashOfConfig":"69"},{"size":852,"mtime":1619765000848,"results":"77","hashOfConfig":"69"},{"size":637,"mtime":1619765000857,"results":"78","hashOfConfig":"69"},{"size":132,"mtime":1619595538365,"results":"79","hashOfConfig":"69"},{"size":1983,"mtime":1619765000849,"results":"80","hashOfConfig":"69"},{"size":13830,"mtime":1619787981111,"results":"81","hashOfConfig":"69"},{"size":4630,"mtime":1619787981108,"results":"82","hashOfConfig":"69"},{"size":2621,"mtime":1619787981129,"results":"83","hashOfConfig":"69"},{"size":2112,"mtime":1619765000862,"results":"84","hashOfConfig":"69"},{"size":2245,"mtime":1619595538239,"results":"85","hashOfConfig":"69"},{"size":1602,"mtime":1619595538316,"results":"86","hashOfConfig":"69"},{"size":1053,"mtime":1619595537770,"results":"87","hashOfConfig":"69"},{"size":2748,"mtime":1619789759012,"results":"88","hashOfConfig":"69"},{"size":229,"mtime":1619595537232,"results":"89","hashOfConfig":"69"},{"size":249,"mtime":1619765000845,"results":"90","hashOfConfig":"69"},{"size":116,"mtime":1619765000820,"results":"91","hashOfConfig":"69"},{"size":2475,"mtime":1619838125272,"results":"92","hashOfConfig":"69"},{"size":4199,"mtime":1619837706872,"results":"93","hashOfConfig":"69"},{"size":3538,"mtime":1619788131254,"results":"94","hashOfConfig":"69"},{"size":576,"mtime":1619595537813,"results":"95","hashOfConfig":"69"},{"size":389,"mtime":1619787981071,"results":"96","hashOfConfig":"69"},{"size":1226,"mtime":1619787981127,"results":"97","hashOfConfig":"69"},{"size":274,"mtime":1619787981120,"results":"98","hashOfConfig":"69"},{"size":1746,"mtime":1619838309847,"results":"99","hashOfConfig":"69"},{"size":366,"mtime":1619787981065,"results":"100","hashOfConfig":"69"},{"size":380,"mtime":1619787981067,"results":"101","hashOfConfig":"69"},{"size":139,"mtime":1619765000825,"results":"102","hashOfConfig":"69"},{"size":323,"mtime":1619789758984,"results":"103","hashOfConfig":"69"},{"size":225,"mtime":1619595536944,"results":"104","hashOfConfig":"69"},{"size":367,"mtime":1619595536867,"results":"105","hashOfConfig":"69"},{"size":478,"mtime":1619789758988,"results":"106","hashOfConfig":"69"},{"size":3285,"mtime":1619789759010,"results":"107","hashOfConfig":"69"},{"size":567,"mtime":1619595536851,"results":"108","hashOfConfig":"69"},{"size":999,"mtime":1619595537809,"results":"109","hashOfConfig":"69"},{"size":1811,"mtime":1619787981115,"results":"110","hashOfConfig":"69"},{"size":1082,"mtime":1619787981116,"results":"111","hashOfConfig":"69"},{"size":2930,"mtime":1619838034485,"results":"112","hashOfConfig":"69"},{"size":4550,"mtime":1619787983536,"results":"113","hashOfConfig":"69"},{"size":490,"mtime":1619787981072,"results":"114","hashOfConfig":"69"},{"size":2827,"mtime":1619765000861,"results":"115","hashOfConfig":"69"},{"size":671,"mtime":1619765000813,"results":"116","hashOfConfig":"69"},{"size":1055,"mtime":1619765000863,"results":"117","hashOfConfig":"69"},{"size":544,"mtime":1619837842875,"results":"118","hashOfConfig":"69"},{"size":1688,"mtime":1619800029456,"results":"119","hashOfConfig":"69"},{"size":597,"mtime":1619799448157,"results":"120","hashOfConfig":"69"},{"size":1722,"mtime":1619765000894,"results":"121","hashOfConfig":"69"},{"size":538,"mtime":1619765000847,"results":"122","hashOfConfig":"69"},{"size":533,"mtime":1619840434918,"results":"123","hashOfConfig":"69"},{"size":338,"mtime":1619595536844,"results":"124","hashOfConfig":"69"},{"size":1509,"mtime":1619787981076,"results":"125","hashOfConfig":"69"},{"size":11193,"mtime":1619787981122,"results":"126","hashOfConfig":"69"},{"size":747,"mtime":1619787981109,"results":"127","hashOfConfig":"69"},{"size":219,"mtime":1619595536889,"results":"128","hashOfConfig":"69"},{"size":155,"mtime":1619765000823,"results":"129","hashOfConfig":"69"},{"size":243,"mtime":1619765000818,"results":"130","hashOfConfig":"69"},{"size":149,"mtime":1619765000821,"results":"131","hashOfConfig":"69"},{"size":151,"mtime":1619765000817,"results":"132","hashOfConfig":"69"},{"size":1099,"mtime":1619765000856,"results":"133","hashOfConfig":"69"},{"size":2331,"mtime":1619796819918,"results":"134","hashOfConfig":"69"},{"size":2092,"mtime":1619837680584,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"tdv7qg",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"138"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"138"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"138"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"189","usedDeprecatedRules":"138"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"138"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"138"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"138"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"138"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"234","usedDeprecatedRules":"138"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"138"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"138"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"138"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"283","usedDeprecatedRules":"138"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\index.tsx",[],["286","287"],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\App.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\jwtDecoder.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\routes\\routing.tsx",["288","289"],"import {\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { NotFoundPage } from '../components/notFound/notFound';\r\nimport { LandingPage } from '../components/Register/landingPage/landingPage';\r\nimport { SignUpForm } from '../components/Register/signup_form/signup';\r\nimport Explore from './Explore';\r\nimport Profile from '../components/profile/Profile';\r\nimport Home from \"../components/Home\";\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_ISAUTH } from '../common/queries/Get_isAuth';\r\nimport React from \"react\";\r\nimport { Login } from \"../components/Register/login_form/login\";\r\nimport ExtendedTweet from \"../components/tweets/ExtendedTweet/ExtendedTweet\";\r\n\r\nexport const Routing = () => {\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Switch>\r\n        <PublicRoute path=\"/signup\">\r\n          <SignUpForm />\r\n        </PublicRoute>\r\n\r\n        <PublicRoute path=\"/login\">\r\n          <Login />\r\n        </PublicRoute>\r\n\r\n        <PrivateRoute path=\"/setting\">\r\n          <Setting />\r\n        </PrivateRoute>\r\n\r\n        <Route path=\"/error\">\r\n          <NotFoundPage />\r\n        </Route>\r\n\r\n        <PublicRoute path=\"/forget_password\">\r\n          <ForgetPassword />\r\n        </PublicRoute>\r\n\r\n\r\n        <Route path=\"/explore\">\r\n          <Explore />\r\n        </Route>\r\n\r\n        <PrivateRoute path=\"/messages\">\r\n          <Messages />\r\n        </PrivateRoute>\r\n\r\n\r\n        <PublicRoute path=\"/LandingPage\">\r\n          <LandingPage />\r\n        </PublicRoute>\r\n\r\n\r\n        <PrivateRoute path=\"/Notifications\">\r\n          <Notifications />\r\n        </PrivateRoute>\r\n\r\n\r\n        <PrivateRoute path=\"/\" exact >\r\n          <Home />\r\n        </PrivateRoute>\r\n\r\n\r\n        <PrivateRoute path=\"/tweet/:id\">\r\n          <ExtendedTweet />\r\n        </PrivateRoute>\r\n\r\n        <PrivateRoute path=\"/profile\">\r\n          <Profile />\r\n        </PrivateRoute>\r\n\r\n        <Route path='/:id'>\r\n          <Profile />\r\n        </Route>\r\n\r\n      </Switch>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nconst PrivateRoute = ({ children, ...rest }: any) => {\r\n  let auth = localStorage.getItem('token') ? true : false\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        auth ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\n\r\n\r\nconst PublicRoute = ({ children, ...rest }: any) => {\r\n  let auth = localStorage.getItem('token') ? false : true\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        auth ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Setting() {\r\n  return <h2>setting</h2>;\r\n}\r\n\r\n\r\n\r\nfunction Messages() {\r\n  return <h2>Messages</h2>;\r\n}\r\nfunction Notifications() {\r\n  return <h2>Notifications</h2>;\r\n}\r\n\r\nfunction ForgetPassword() {\r\n  return <h2>forget_password</h2>;\r\n}\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\apolloClient.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\routes\\Explore.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\cache.ts",["290","291","292","293","294","295","296"],"import { InMemoryCache, makeVar, ReactiveVar } from \"@apollo/client\";\r\nimport { searchBarValue } from \"./TypesAndInterfaces\";\r\n\r\nconst createPaginationAndCombine = (keyArgs: any[]) => ({\r\n    merge(existing: any, incoming: any) {\r\n        const merged = existing ? existing.slice(0) : [];\r\n\r\n        let breakFlag = 0;\r\n        let i = 0;\r\n        let j = 0;\r\n        for (i = 0; i < merged.length; i++) {\r\n            if (breakFlag) break;\r\n            for (j = 0; j < incoming.length; j++) {\r\n                if (merged[i].__ref == incoming[j].__ref) {\r\n                    breakFlag = 1;\r\n                    i -= 2;\r\n                    break;\r\n                }\r\n            }\r\n            j = 0;\r\n        }\r\n        if (i == merged.length) i--;\r\n        for (; j < incoming.length; j++) {\r\n            merged[++i] = incoming[j];\r\n        }\r\n        return merged.slice(0, i + 1);\r\n    },\r\n    read(existing: any) {\r\n        return existing;\r\n    },\r\n    keyArgs,\r\n});\r\nconst createPaginationAndCombineTweetsElements = (keyArgs: any[]) => ({\r\n    merge(existing: any, incoming: any) {\r\n        const merged = existing\r\n            ? { totalCount: existing.totalCount, tweets: [...existing.tweets] }\r\n            : { totalCount: 0, tweets: [] };\r\n        merged.totalCount = incoming.totalCount;\r\n        let breakFlag = 0;\r\n        let i = 0;\r\n        let j = 0;\r\n        for (i = 0; i < merged.tweets.length; i++) {\r\n            if (breakFlag) break;\r\n            for (j = 0; j < incoming.tweets.length; j++) {\r\n                if (merged.tweets[i].__ref == incoming.tweets[j].__ref) {\r\n                    breakFlag = 1;\r\n                    i -= 2;\r\n                    break;\r\n                }\r\n            }\r\n            j = 0;\r\n        }\r\n        if (i == merged.tweets.length) i--;\r\n        for (; j < incoming.tweets.length; j++) {\r\n            merged.tweets[++i] = incoming.tweets[j];\r\n        }\r\n        merged.tweets.slice(0, i + 1);\r\n        return merged;\r\n    },\r\n    read(existing: any) {\r\n        return existing;\r\n    },\r\n    keyArgs,\r\n});\r\n\r\nconst createPaginationAndCombineUsersElements = (keyArgs: any[]) => ({\r\n    merge(existing: any, incoming: any) {\r\n        const merged = existing\r\n            ? { totalCount: existing.totalCount, users: [...existing.users] }\r\n            : { totalCount: 0, users: [] };\r\n        merged.totalCount = incoming.totalCount;\r\n        let breakFlag = 0;\r\n        let i = 0;\r\n        let j = 0;\r\n        for (i = 0; i < merged.users.length; i++) {\r\n            if (breakFlag) break;\r\n            for (j = 0; j < incoming.users.length; j++) {\r\n                if (merged.users[i].__ref == incoming.users[j].__ref) {\r\n                    breakFlag = 1;\r\n                    i -= 2;\r\n                    break;\r\n                }\r\n            }\r\n            j = 0;\r\n        }\r\n        if (i == merged.users.length) i--;\r\n        for (; j < incoming.users.length; j++) {\r\n            merged.users[++i] = incoming.users[j];\r\n        }\r\n        merged.users.slice(0, i + 1);\r\n        return merged;\r\n    },\r\n    read(existing: any) {\r\n        return existing;\r\n    },\r\n    keyArgs,\r\n});\r\n\r\nexport const cache: InMemoryCache = new InMemoryCache({\r\n    typePolicies: {\r\n        Query: {\r\n            fields: {\r\n                searchBarValue: {\r\n                    read() {\r\n                        return searchBarVar();\r\n                    },\r\n                },\r\n                EditProfileImage: {\r\n                    read() {\r\n                        return EditProfileImageVal();\r\n                    },\r\n                },\r\n                EditProfileBg: {\r\n                    read() {\r\n                        return EditProfileBgVal();\r\n                    },\r\n                },\r\n\r\n                SFW: {\r\n                    read() {\r\n                        return SFW();\r\n                    },\r\n                },\r\n                getFeed: createPaginationAndCombineTweetsElements([\"isSFW\"]),\r\n                tweets: createPaginationAndCombineTweetsElements([\r\n                    \"userId\",\r\n                    \"filter\",\r\n                    \"isSFW\",\r\n                ]),\r\n                users: createPaginationAndCombineUsersElements([\"search\"]),\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nexport const searchBarVar: ReactiveVar<searchBarValue> = makeVar<searchBarValue>(\r\n    { value: \"\" }\r\n);\r\n\r\nexport const EditProfileImageVal: ReactiveVar<{\r\n    Image: object | false;\r\n    ImageURL: string | false;\r\n}> = makeVar<any>({\r\n    Image: false,\r\n    ImageURL: false,\r\n});\r\nexport const EditProfileBgVal: ReactiveVar<{\r\n    BgImage: object | false;\r\n    BgImageURL: string | false;\r\n}> = makeVar<any>({\r\n    BgImage: false,\r\n    BgImageURL: false,\r\n});\r\n\r\nexport const SFW: ReactiveVar<{ value: boolean }> = makeVar<any>({\r\n    value: true,\r\n});\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Home.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\Profile.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\notFound\\notFound.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\landingPage\\landingPage.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\signup_form\\signup.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\login_form\\login.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\ExtendedTweet\\ExtendedTweet.tsx",["297"],"import React, { Fragment } from 'react';\r\nimport '../../../styles/layout.css'\r\nimport Tweet, { TweetData } from '../Tweet';\r\nimport { SideBar } from '../../sideBar/sideBar';\r\nimport TrendsBar from '../../TrendsBar/TrendsBar';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_SINGLE_TWEET } from '../../../common/queries/GET_SINGLE_TWEET';\r\nimport { Get_SFW } from '../../../common/queries/GET_SFW';\r\nimport { useLocation } from 'react-router';\r\nimport Loading from '../../../UI/Loading';\r\nimport FoF from '../../../UI/FoF/FoF';\r\nimport { Link } from 'react-router-dom';\r\n// import Profilewallpage from './profileWallPage';\r\n\r\nconst ExtendedTweet: React.FC = () => {\r\n\r\n  const sfw = useQuery(Get_SFW).data;\r\n  const location = useLocation()\r\n  let urlId = location.pathname.substr(7)\r\n\r\n  console.log(urlId)\r\n  const { data, loading, error } = useQuery(GET_SINGLE_TWEET, {\r\n    variables: {\r\n      tweetId: urlId,\r\n      isSFW: sfw.SFW.value,\r\n    }\r\n  })\r\n  console.log(error)\r\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\r\n  if (error) return <FoF\r\n    msg=\"This tweet doesn’t exist\"\r\n  />\r\n  console.log(data)\r\n\r\n  const tweet: TweetData = data.tweet\r\n  console.log(tweet)\r\n  return (\r\n    <Fragment>\r\n\r\n      <main className=\"main-container\">\r\n        <aside className=\"sb-left\">< SideBar /></aside>\r\n        <article className=\"wall\">\r\n          <header className=\"top-bar px-3 py-2\">\r\n            <span className=\" m-3\">\r\n              <Link to=\"/\">\r\n\r\n                <i className=\"fa fa-arrow-left  p--main-color\" aria-hidden=\"true\"></i>\r\n              </Link>\r\n\r\n            </span>\r\n            <div>\r\n              <p className=\"font-extrabold text-lg \">{tweet.user?.name}'s awosome Tweet</p>\r\n              {/* featch front tweet */}\r\n\r\n            </div>\r\n          </header>\r\n\r\n          <Tweet\r\n            id={tweet.id}\r\n            text={tweet.text}\r\n            repliesCount={tweet.repliesCount}\r\n            createdAt={tweet.createdAt}\r\n            isLiked={tweet.isLiked}\r\n            user={tweet.user}\r\n            likesCount={tweet.likesCount}\r\n          />\r\n\r\n          <div>\r\n            <pre className=\"p-4 bg-gray-900 text-blue-200\" ><span className=\"text-green-500 block\">//TODO: fetch tweet replies</span>\r\n              <span className=\"text-blue-400\">const</span> replies <span className=\"text-white\">=</span> fetch(<span className=\"text-blue-400\">replies</span>);\r\n\r\n            </pre>\r\n          </div>\r\n        </article>\r\n\r\n        <aside className=\"sb-right\">< TrendsBar /></aside>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ExtendedTweet;","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\sideBar.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\SearchBar\\SearchBar.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\TrendsBar.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\CurrentTrends\\CurrentTrends.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\SerachResult.tsx",["298","299"],"\r\nimport { useQuery } from '@apollo/client';\r\nimport React, { Fragment, useState } from 'react';\r\nimport { Get_SearchBar_Value } from '../common/queries/Get_SearchBar_Value';\r\nimport { Get_Search_Result } from '../common/queries/Get_Search_Result';\r\nimport { PersonEntity } from '../common/TypesAndInterfaces';\r\nimport ListOfUsers from './TrendsBar/ListOfUsers/listofusers';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport PersonItem from \"./TrendsBar/ListOfUsers/PersonItem/PersonItem\";\r\nimport Loading from '../UI/Loading';\r\n\r\nconst SearchResult: React.FC = () => {\r\n\r\n  //static behaviour\r\n  /*\r\n    const location = useLocation()\r\n    const searchQ = location.search.substr(6)\r\n  */\r\n\r\n  //dynamic behaviour\r\n  const search = useQuery(Get_SearchBar_Value)\r\n  const searchQ: string = search.data.searchBarValue.value\r\n\r\n  const [page, setPage] = useState<any>(1)\r\n  const { data, loading, error, fetchMore} = useQuery(Get_Search_Result, { variables: { name: searchQ } })\r\n  if (searchQ === \"\") {\r\n    return <h1 className=\"text-lg text-center pt-4\">Try searching for people, names, usernames\r\n</h1>\r\n  }\r\n  if(!loading && data && data?.users?.users?.length === 10 && data?.users?.totalCount > 10){\r\n    fetchMore({\r\n        variables: {\r\n            page: 2,\r\n            name: searchQ,\r\n        },\r\n    })\r\n}\r\n  if (loading) return <Loading />\r\n  if (error) return <h1 className=\"text-lg text-center pt-4 text-gray-500\">Something went wrong :( </h1>\r\n\r\n  const list: PersonEntity[] = data.users.users\r\n  if (list.length === 0)\r\n        return <h1 className=\"text-lg text-center pt-4\">No Results</h1>;\r\n  return (\r\n    <InfiniteScroll\r\n            dataLength={list?.length || 0}\r\n            next={() => {\r\n                setPage(((list?.length || 10)/10) + 1);\r\n                return fetchMore({\r\n                    variables: {\r\n                        page: ((list?.length || 10)/10) + 1,\r\n                        name: searchQ,\r\n                    },\r\n                });\r\n            }}\r\n            hasMore={data?.users?.totalCount >= page * 10 || false}\r\n            loader={<Loading />}\r\n        >\r\n            {list.map((person) => {\r\n                return (\r\n                    <PersonItem\r\n                        key={person.username}\r\n                        id={person.id}\r\n                        name={person.name}\r\n                        username={person.username}\r\n                        followed={person.followed}\r\n                        imageURI={person.imageURI}\r\n                        isFollowing={person.isFollowing}\r\n                        bio={person.bio}\r\n                    />\r\n                );\r\n            })}\r\n        </InfiniteScroll>\r\n\r\n  )\r\n}\r\nexport default SearchResult;\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\login_query.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\createUser.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_SFW.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\HomeTweets.tsx",["300","301","302"],"import React, { useState } from \"react\";\r\n\r\nimport { useQuery } from \"@apollo/client\";\r\nimport Tweet from \"./Tweet\";\r\nimport { TweetData } from \"./Tweet\";\r\nimport { FeedTweets } from \"../../common/queries/Feedtweets\";\r\nimport Loading from \"../../UI/Loading\";\r\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nfunction HomeTweets() {\r\n    let [page, setPage] = useState(1);\r\n    const sfw = useQuery(Get_SFW).data;\r\n    const { loading, error, data, fetchMore } = useQuery(FeedTweets, {\r\n        variables: {\r\n            isSFW: sfw.SFW.value,\r\n        },\r\n    });\r\n    if(!loading && data && data?.getFeed?.tweets?.length == 10 && page == 1){\r\n        setPage(page + 1);\r\n        fetchMore({\r\n            variables: {\r\n                isSFW: sfw.SFW.value,\r\n                page: page + 1,\r\n            },\r\n        })\r\n    }\r\n    if (loading) return <Loading />;\r\n    if (error) return <p>`Error! this is the one ${error.message}`</p>;\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            dataLength={data?.getFeed?.tweets?.length || 0}\r\n            next={() => {\r\n                setPage(((data?.getFeed?.tweets?.length || 10)/10) +1 );\r\n                return fetchMore({\r\n                    variables: {\r\n                        isSFW: sfw.SFW.value,\r\n                        page: ((data?.getFeed?.tweets?.length || 10)/10) +1 ,\r\n                    },\r\n                });\r\n            }}\r\n            hasMore={data?.getFeed?.totalCount >= page * 10 || false}\r\n            loader={<Loading />}\r\n            style={{\r\n                overflow: \"hidden\"\r\n            }}\r\n        >\r\n            {data?.getFeed?.tweets?.map((tweet: TweetData) => {\r\n                return (\r\n                    <Tweet\r\n                        id={tweet.id}\r\n                        text={tweet.text}\r\n                        repliesCount={tweet.repliesCount}\r\n                        createdAt={tweet.createdAt}\r\n                        isLiked={tweet.isLiked}\r\n                        user={tweet.user}\r\n                        likesCount={tweet.likesCount}\r\n                        key={tweet.id}\r\n                        quotedRetweetsCount = {tweet. quotedRetweetsCount}\r\n                        retweetsCount = { tweet.retweetsCount}\r\n                        state= {tweet.state}\r\n                    />\r\n                );\r\n            })}\r\n        </InfiniteScroll>\r\n    );\r\n}\r\n\r\nexport default HomeTweets;\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\PostTweet.tsx",["303","304"],"import { ErrorMessage, Field, Form, Formik } from \"formik\"\r\nimport React, { useRef } from \"react\"\r\nimport * as Yup from \"yup\"\r\nimport { TweetButton } from '../sideBar/tweetButton/tweetButton'\r\nimport { Tweets } from '../../common/queries/TweetQuery'\r\nimport { FeedTweets } from '../../common/queries/Feedtweets'\r\nimport { Post_Tweet } from '../../common/queries/createTweet'\r\nimport { useMutation } from \"@apollo/client\"\r\nimport {updateTweetsCacheForCreateTweet} from \"../../common/utils/writeCache\"\r\nimport './tweet.css';\r\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\r\nimport { parseJwt } from '../../common/decode';\r\ninterface Post {\r\n  text: string\r\n}\r\nconst PostTweet = () => {\r\n  var profile: any;\r\n  if (localStorage.getItem('token') !== \"LOGOUT\") {\r\n    profile = parseJwt(localStorage.getItem('token'))\r\n  }\r\n  console.log(profile.id)\r\n  // const userData = useQuery (Get_Logged_user)\r\n  // const user:User = userData.data.logUser.user\r\n  // console.log (user.imageURL)\r\n\r\n  const inputRef: any = useRef()\r\n  // mutation\r\n  const [createTweet, { data }] = useMutation(Post_Tweet, {\r\n    update: updateTweetsCacheForCreateTweet\r\n  });\r\n  console.log(`this ${inputRef.current}`)\r\n\r\n  const initialValues: Post = {\r\n    text: \"\"\r\n  }\r\n  /********   dynamic hight control funtion   ***********/\r\n  function setInputHight(element: React.ChangeEvent<HTMLElement>) {\r\n    element.target.style.height = \"60px\"\r\n    element.target.style.height = (element.target.scrollHeight) + \"px\"\r\n    inputRef.current.style.height = (element.target.scrollHeight) + \"px\"\r\n    console.log(`in ${element.target.style.height}`)\r\n    console.log(`out ${inputRef.current.style.height}`)\r\n    console.log(`scroll ${element.target.scrollHeight}`)\r\n  }\r\n  const validationSchema = Yup.object({\r\n    text: Yup.string()\r\n      .required()\r\n      .min(1, \"Must be more than 1 character\")\r\n      .max(256, \"Must be less than 257 characters\")\r\n  })\r\n  return (\r\n    <div className=\"mb-3 p-3 w-full shadow bg-white flex\">\r\n      {/* this should be dynamic */}\r\n      <div className=\"tweet-icon\">\r\n      <img src={profile.imageURL || avatar } alt=\"avatar\" />\r\n      </div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={({ text }, { setSubmitting, resetForm }) => {\r\n          setSubmitting(true);\r\n          console.log(text);\r\n          createTweet({\r\n            variables: { tweetInput: { text } },\r\n          });\r\n          console.log(`this ${data}`)\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        <div className=\"w-full mx-4 flex flex-col\">\r\n          <Form >\r\n            <div ref={inputRef} className=\"w-full mb-2 tweet-text flex h-16\">\r\n              <Field\r\n\r\n                name=\"text\"\r\n                type=\"text\"\r\n                as=\"textarea\"\r\n                onKeyPress={setInputHight}\r\n                className=\"w-full placeholder-gray4 p-3 ml-2 \r\n              focus:outline-none resize-none overflow-hidden min-h-12\"\r\n                placeholder=\"What's happening...\" />\r\n            </div>\r\n            <hr className=\"my-2\" />\r\n            <div className=\"flex justify-between items-center\">\r\n              <button className=\"hover:bg-blue-100 rounded-full py-2 px-3 transition\">\r\n                <svg\r\n                  className=\"h-8 w-8 text-blue-400 \"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                </svg>\r\n              </button>\r\n              <ErrorMessage name=\"text\" render={msg => <div className=\"text-red-500\">{msg}</div>} />\r\n\r\n              <TweetButton name=\"Tweet\" type=\"submit\" className=\" rounded-full py-3 px-6\" />\r\n            </div>\r\n\r\n          </Form>\r\n        </div>\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostTweet\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\ProfileWall.tsx",["305"],"import React, { Fragment, useState } from 'react';\r\nimport '../../App.css';\r\nimport './profile.css';\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport '../../styles/layout.css'\r\nimport { useQuery } from '@apollo/client';\r\nimport { LoggedUser } from '../../common/queries/Userqery';\r\nimport TweetList from '../tweets/TweetList'\r\nimport { Switch, NavLink, Route, useLocation, useRouteMatch } from \"react-router-dom\"\r\nimport { parseJwt } from '../../common/decode';\r\nimport Loading from \"../../UI/Loading\"\r\nimport FoF from '../../UI/FoF/FoF';\r\n\r\n\r\nfunction ProfileWall() {\r\n  let self = false;\r\n  let ID: string;\r\n  let profile;\r\n  if (localStorage.getItem('token')) {\r\n    profile = parseJwt(localStorage.getItem('token'))\r\n  }\r\n\r\n  const location = useLocation()\r\n  const match = useRouteMatch();\r\n  const path = location.pathname.substr(1)\r\n  const lastIndex = location.pathname.lastIndexOf('/')\r\n  let urlId = path\r\n\r\n\r\n  if (lastIndex !== 0) urlId = urlId.substr(0, lastIndex - 1)\r\n  console.log(urlId)\r\n  if (urlId === 'profile' ||\r\n    (profile && urlId == profile.id)) {\r\n    ID = profile.id; self = true;\r\n    console.log(typeof urlId, typeof profile.id)\r\n  }\r\n  else ID = urlId\r\n\r\n\r\n  const { data, loading, error } = useQuery(LoggedUser, { variables: { id: ID } });\r\n  const [tweetsPage, setTweetsPage] = useState<any>(1);\r\n  const [tweetsRepliesPage, setTweetsRepliesPage] = useState<any>(1);\r\n  const [mediaPage, setMediaPage] = useState<any>(1);\r\n  const [likesPage, setLikesPage] = useState<any>(1);\r\n\r\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\r\n  if (error) return <FoF\r\n    msg=\"This account doesn’t exist\"\r\n    secMsg=\"try search for another\"\r\n  />\r\n  return (\r\n    < Fragment >\r\n      <ProfileInfo user={data.user} self={self} />\r\n      <nav >\r\n        <ul className=\"pf--nav-ul \">\r\n          <NavLink exact activeClassName=\"active\" className=\"pf--nav-link\" to={match.url}>\r\n            <li>Tweets</li>\r\n          </NavLink>\r\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/replies'}>\r\n            <li>Tweets & replies</li>\r\n          </NavLink>\r\n\r\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/media'}>\r\n            <li>Media</li>\r\n          </NavLink>\r\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to={match.url + '/likes'}>\r\n            <li>Likes</li>\r\n          </NavLink>\r\n        </ul>\r\n      </nav>\r\n      <div className=\"tweets\">\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={match.url}\r\n            render={() => (\r\n              <TweetList filter={``} page={tweetsPage} setPage={setTweetsPage} id={ID} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={match.url + '/replies'}\r\n            render={() => (\r\n              <TweetList filter={`replies&tweets`} page={tweetsRepliesPage} setPage={setTweetsRepliesPage} id={ID} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={match.url + '/media'}\r\n            render={() => (\r\n              <TweetList filter={`media`} page={mediaPage} setPage={setMediaPage} id={ID} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={match.url + '/likes'}\r\n            render={() => (\r\n              <TweetList filter={`likes`} page={likesPage} setPage={setLikesPage} id={ID} />\r\n            )}\r\n          />\r\n        </Switch>\r\n\r\n\r\n\r\n      </div>\r\n\r\n\r\n    </Fragment >\r\n  );\r\n}\r\n\r\nexport default ProfileWall;","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\Footer\\Footer.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_SINGLE_TWEET.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\tweetButton\\tweetButton.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\logo\\logo.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Tweet.tsx",["306","307","308"],"//design of tweet with retweet\r\n\r\nimport React from 'react'\r\nimport './tweet.css';\r\n\r\nimport { useHistory } from 'react-router';\r\nimport Tweet_info from './Tweet_Info';\r\nimport Tweet_img from './Tweet_img';\r\nimport Tweet_toolbarIcons from './Tweet_toolbarIcons';\r\n\r\nexport interface TweetData {\r\n  user?: {\r\n    imageURL?: string\r\n    name?: string\r\n    userName?: string\r\n  }\r\n  id?: string\r\n  text: string\r\n  likesCount?: number\r\n  repliesCount?: number\r\n  retweetsCount?:number\r\n  quotedRetweetsCount?:number\r\n  createdAt?: number\r\n  isLiked?: boolean\r\n  state?:string\r\n}\r\n\r\nfunction Tweet(props: any) {\r\n  \r\n  const history = useHistory();\r\n  //redirect to tweet\r\n  const goToTweet = () => {\r\n    history.push({\r\n      pathname: '/tweet/' + props.id,\r\n    })\r\n  }\r\n\r\nreturn (\r\n    <div >\r\n\r\n\r\n{/* the design of tweet */}\r\n<div className=\"tweet-box mt-2\" onClick={goToTweet} >\r\n<Tweet_img imageURL={props.user.imageURL}  id={props.user?.id} className =\"tweet-icon\"/>   \r\n\r\n      <div className=\"tweet-aside\">\r\n        <Tweet_info\r\n          userName={props.user?.userName}\r\n          createdAt={props.createdAt}\r\n          name={props.user?.name}\r\n          id={props.user.id}\r\n        />\r\n\r\n {/* the text/media of the original tweet */}\r\n        <div className=\"tweet-content\">        \r\n          <span>\r\n            {props.text} {props.state}\r\n          </span>\r\n\r\n        <Tweet_toolbarIcons \r\n          repliesCount  = {props.repliesCount}\r\n          likesCount    = {props.likesCount}\r\n          quotedRetweetsCount = {props.quotedRetweetsCount}\r\n          retweetsCount = {props.retweetsCount}\r\n        />\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n{/* the end of tweet */}\r\n\r\n  \r\n<hr />\r\n   </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default Tweet;","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\FoF\\FoF.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Loading.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Get_SearchBar_Value.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Get_Search_Result.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GET_Hashtags.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\decode.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\createTweet.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\writeCache.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\SideList\\SideList.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\CurrentTrends\\TrendItem\\TrendItem.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\ListOfUsers\\PersonItem\\PersonItem.tsx",["309"],"import React from 'react';\r\n\r\nimport { PersonEntity } from '../../../../common/TypesAndInterfaces';\r\n\r\nimport './PersonItem.css'\r\nimport '../../../profile/profile.css'\r\nimport FollowButton from '../../../FollowButton/FollowButton';\r\nimport { parseJwt } from '../../../../common/decode';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst TrendItem: React.FC<PersonEntity> = ({ id, bio, isFollowing, name, username, followed = false, imageURI, numberOfFollowers }) => {\r\n  const history = useHistory();\r\n\r\n  const goToProfile = () => {\r\n    history.push({\r\n      pathname: '/' + id,\r\n    })\r\n\r\n  }\r\n\r\n  const profilePicture = (imageURI === undefined || imageURI === null) ?\r\n    <svg className=\"w-full h-full\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" /></svg> :\r\n    <img className=\"rounded-full w-full\" src={imageURI} alt=\"user\" />;\r\n\r\n  return (\r\n\r\n    <div className=\" person-item flex  justify-between items-start p-3 hover:bg-gray-100\" onClick={goToProfile}>\r\n\r\n      <div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\r\n        {profilePicture}\r\n      </div>\r\n\r\n      <div className=\"flex-grow\">\r\n        <h1 className=\"person-item-name  text-xm font-bold\">{name}</h1>\r\n        <p className=\"person-item-username\"><span className=\"text-xm\">@</span>{username}</p>\r\n        <p>{bio}</p>\r\n      </div>\r\n      <div>\r\n        {localStorage.getItem('token') && (id == parseJwt(localStorage.getItem('token')).id) ? null :\r\n          <FollowButton id={id} following={isFollowing} />}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default TrendItem;\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\TrendsBar\\ListOfUsers\\listofusers.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\TweetList.tsx",["310","311","312","313"],"import React, { Fragment } from \"react\";\r\n\r\nimport { useQuery } from \"@apollo/client\";\r\n// import Tweet from '../Tweet';\r\nimport Tweet from \"./Tweet\";\r\nimport { Tweets } from \"../../common/queries/TweetQuery\";\r\nimport { TweetData } from \"./Tweet\";\r\nimport { parseJwt } from \"../../common/decode\";\r\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\r\nimport Loading from \"../../UI/Loading\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nexport interface TweetFilter {\r\n    filter: string;\r\n    page: number;\r\n    setPage: any;\r\n    id: string;\r\n}\r\n\r\nconst TweetList: React.FC<TweetFilter> = (props) => {\r\n\r\n    const { filter, page, setPage } = props;\r\n    const sfw = useQuery(Get_SFW).data;\r\n    const { loading, error, data, fetchMore } = useQuery(Tweets, {\r\n        variables: {\r\n            userId: props.id,\r\n            filter: filter,\r\n            isSFW: sfw.SFW.value,\r\n        },\r\n    });\r\n    if (!loading && data && data?.tweets?.tweets?.length == 10 && page == 1) {\r\n        setPage(page + 1);\r\n        fetchMore({\r\n            variables: {\r\n                userId: props.id,\r\n                isSFW: sfw.SFW.value,\r\n                page: page + 1,\r\n                filter: filter\r\n            },\r\n        })\r\n    }\r\n    if (loading) return <Fragment><br /> <br /> <Loading size={30} /></Fragment>;\r\n    if (error) return <p>`Error! ${error.message}`</p>;\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            dataLength={data?.tweets?.tweets?.length || 0}\r\n            next={() => {\r\n                setPage(((data?.tweets?.tweets?.length || 10)/10) +1);\r\n                return fetchMore({\r\n                    variables: {\r\n                        userId: props.id,\r\n                        isSFW: sfw.SFW.value,\r\n                        page: ((data?.tweets?.tweets?.length || 10)/10) +1,\r\n                        filter: filter\r\n                    },\r\n                });\r\n            }}\r\n            style={{\r\n                overflow: \"hidden\"\r\n            }}\r\n            hasMore={data?.tweets?.totalCount > page * 10 || false}\r\n            loader={<Loading />}\r\n        >\r\n            {data.tweets.tweets.map((tweet: TweetData) => {\r\n                return (\r\n                    <Tweet\r\n                        id={tweet.id}\r\n                        text={tweet.text}\r\n                        repliesCount={tweet.repliesCount}\r\n                        createdAt={tweet.createdAt}\r\n                        isLiked={tweet.isLiked}\r\n                        user={tweet.user}\r\n                        likesCount={tweet.likesCount}\r\n                        key={tweet.id}\r\n                        quotedRetweetsCount = {tweet. quotedRetweetsCount}\r\n                        retweetsCount = { tweet.retweetsCount}\r\n                        state= {tweet.state}\r\n                    />\r\n                );\r\n            })}\r\n        </InfiniteScroll>\r\n    );\r\n};\r\n\r\nexport default TweetList;\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\ProfileInfo.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Userqery.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\flootProfile\\flootProfile.tsx",["314"],"import React, {useState, useEffect} from 'react';\r\nimport { Logout } from '../../Register/logout/logout';\r\nimport { ToolBox } from '../toolbox/toolbox';\r\nimport './flootProfile.css';\r\nimport { useQuery } from '@apollo/client';\r\nimport { parseJwt } from '../../../common/decode';\r\nimport { LoggedUser } from '../../../common/queries/Userqery';\r\nimport Loading from \"../../../UI/Loading\"\r\nimport  {Get_SFW}  from '../../../common/queries/GET_SFW';\r\nimport {SFW} from '../../../common/cache'\r\nimport avatar from \"../../../routes/mjv-d5z8_400x400.jpg\"\r\n\r\nexport function FlootProfile () {\r\n      var profile;\r\n      if (localStorage.getItem('token') !== null) {\r\n        profile = parseJwt(localStorage.getItem('token'))\r\n      }\r\n    \r\n    \r\n      const [sfw, setsfw] = useState(true)\r\n      const {error, loading ,data} = useQuery(LoggedUser, { variables: { id: profile.id } });\r\n\r\n      const handleSFW =()=>{\r\n        (sfw)? setsfw (false): setsfw (true)\r\n      }\r\n      useEffect(() => {\r\n        SFW({value:sfw})\r\n      }, [sfw])\r\n      const data2 = useQuery (Get_SFW).data \r\n\r\n      if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\r\n      if (error) return <p>`Error! ${error.message}`</p>\r\n \r\n\r\n      const userYear:number = (data.user.birthDate).split(\"-\", 1)\r\n      const currentYear = new Date()\r\n      const age = currentYear.getFullYear() - userYear   ; \r\n      return (\r\n\r\n         \r\n        <div>\r\n           <ToolBox className=\"fixed bottom-0 rounded-full w-60 mt-4 mb-2\r\n           bg-white hover:bg-blue-100 focus:bg-blue-200 focus:outline-none focus:shadow-outline hover:text-gray-900 \r\n           focus:ring-2  focus:ring-offset-gray-100\" design={\r\n<div className=\"flex justify-between items-start p-3\">\r\n\r\n<div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\r\n<img src={data.user.imageURL || avatar }\r\n              alt=\"avatar\" />\r\n </div>\r\n\r\n <div className=\"flex-grow pr-20\">\r\n   <h3 className=\" text-xm font-bold\">{(data.user.name).split(\" \", 1)}</h3>\r\n   <p><span className=\"text-xm \">@</span>{data.user.userName}</p>   \r\n </div>\r\n\r\n <i className=\" fas fa-ellipsis-h\"></i>\r\n</div>\r\n           }>\r\n\r\n          <ul className= \"px-4 mt-16\" >\r\n          <a href=\"/profile\" className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \r\n          hover:text-gray-900  hover:rounded-full rounded-full\">My Account</a>\r\n\r\n          {\r\n            (age > 18) &&\r\n            <button className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \r\n            hover:text-gray-900 hover:rounded-full rounded-full focus:outline-none\" \r\n            onClick={handleSFW}>{(sfw)?'Set NSFW':'Set SFW'}</button>\r\n          }\r\n          <Logout/>\r\n            </ul>\r\n\r\n  </ToolBox>\r\n  </div>\r\n              \r\n\r\n\r\n      );\r\n    }\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Modal\\Modal.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\sideBarItem\\sideBarItem.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Feedtweets.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Tweet_Info.tsx",["315","316","317","318"],"import './tweet.css';\r\nimport { timeConverter } from '../../common/utils/timestamp';\r\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n\r\nexport interface TweetData {\r\n  user?: {\r\n    imageURL?: string\r\n    name?: string\r\n    userName?: string\r\n  }\r\n  id?: string\r\n  text: string\r\n  likesCount?: number\r\n  repliesCount?: number\r\n  createdAt?: number\r\n  isLiked?: boolean\r\n}\r\n\r\nfunction Tweet_Info(props: any) {\r\n  const history = useHistory();\r\n\r\n  const goToProfile = () => {\r\n    history.push({\r\n      pathname: '/' + props.id,\r\n    })\r\n  }\r\n  return (\r\n\r\n    <div className={`tweet-data py-1 ${props.className}`}>\r\n      <a onClick={(e) => { goToProfile(); e.stopPropagation() }} className=\"font-bold mr-1 hover:underline\">{props.name}</a>\r\n      <p className=\"p--light-color\"> @{props.userName}. </p>\r\n      <a href=\"\" className=\"p--light-color px-1 hover:underline\"> {props.createdAt ? timeConverter(Number(props.createdAt)) : null}</a>\r\n      <span className=\"tweet-ellipsis p--light-color z-10 \">\r\n\r\n\r\n        <ToolBox\r\n          design={\r\n            <i className=\"fas fa-ellipsis-h\"></i>\r\n          }\r\n        >\r\n          <ul className=\"mb-40 ml-4 absolute bg-gray-100 \" >\r\n            <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\r\n          hover:text-gray-900\" >block</a>\r\n            <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\r\n          hover:text-gray-900\" >mute</a>\r\n\r\n          </ul>\r\n        </ToolBox>\r\n\r\n      </span>\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Tweet_Info;","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Tweet_img.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\sideBar\\toolbox\\toolbox.tsx",["319"],"import React, { Fragment } from 'react';\r\n\r\ninterface toolProps {\r\n  className?: string;\r\n  children?: any;\r\n  design?:any;\r\n}\r\n\r\nexport class ToolBox extends React.Component<toolProps>  {\r\ntoggleContainer:any =  React.createRef<HTMLDivElement>();\r\nstate = {\r\n        isOpen: true,\r\n    };\r\n\r\n  constructor(props :any) {\r\n    super(props);\r\n    this.state = { isOpen: false };\r\n    this.toggleContainer  =  React.createRef();\r\n\r\n    this.onClickHandler = this.onClickHandler.bind(this);\r\n    this.onClickOutsideHandler = this.onClickOutsideHandler.bind(this);\r\n  }\r\n  \r\n  onClickHandler  = (e:any) => {\r\n      this.setState(state => {\r\n        if (this.state.isOpen){\r\n          return {\r\n            isOpen: false\r\n          };\r\n        }\r\n        else {\r\n          return {\r\n            isOpen: true\r\n          };\r\n        }\r\n\r\n      });\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.onClickOutsideHandler);\r\n    }\r\n    componentWillUnmount() {\r\n      document.removeEventListener(\"mousedown\", this.onClickOutsideHandler);\r\n    }\r\n\r\n\r\n    onClickOutsideHandler(event : any ) {\r\n      if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\r\n        this.setState({ isOpen: false });\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Fragment>\r\n        <div className=\"flex-initial\"  ref={this.toggleContainer}>\r\n         {this.state.isOpen && (\r\n          <div>\r\n           { this.props.children}\r\n          </div>\r\n        )}\r\n <div>\r\n      <a className= {`${this.props.className}`} onClick={this.onClickHandler}>\r\n        <div>\r\n      { this.props.design}\r\n      </div>\r\n       </a>\r\n  </div>\r\n </div>\r\n </Fragment>\r\n      );\r\n    }\r\n  }","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\utils\\timestamp.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\TweetQuery.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\UI\\Backdrop\\Backdrop.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\FollowButton\\FollowButton.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\EditUser\\EditProfile.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\Register\\logout\\logout.tsx",["320"],"import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useApolloClient} from '@apollo/client'\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\nexport function Logout() {\r\n    const history = useHistory()\r\n    const client = useApolloClient()\r\n\r\n    async function logoutSubmit() {\r\n        \r\n        localStorage.clear()\r\n        await client.clearStore()\r\n        console.log(\"store reseted\")\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <div>\r\n         <button className=\" mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700  hover:bg-gray-100 hover:text-gray-900 \r\n         hover:rounded-full rounded-full\"  onClick={() => logoutSubmit()}>logout</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\Follow.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GetEditProfileImage.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\EditUser.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\GetEditBgImage.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\common\\queries\\DeleteMedia.ts",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\profile\\EditUser\\InputSet.tsx",[],"C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\Tweet_toolbarIcons.tsx",["321","322","323","324"],"import React, { useState } from 'react'\r\nimport './tweet.css';\r\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\r\nimport Modal from '../../UI/Modal/Modal';\r\nimport PostTweet from './PostTweet';\r\n\r\nfunction Tweet_toolbarIcons(props: any) {\r\n  const [edit, setEdit] = useState<boolean>(false);\r\n  const modalClosed = () => setEdit(false);\r\n\r\n  return (\r\n      \r\n <div className=\"tweet-toolbar p--light-color\">\r\n          <Modal show={edit} modalClosed={modalClosed} className=\"pb-4\" >\r\n\r\n           <header className=\"flex justify-between items-center px-3 h-8 w-full border-b border-gray-200 pb-6 pt-2\">\r\n\r\n          <div onClick={modalClosed} className=\" p-1 rounded-full\">\r\n            <svg className=\"h-8 w-5 pt-2 mt-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </div>\r\n\r\n        </header>\r\n        <PostTweet/>\r\n        </Modal>\r\n            <a onClick={(e) => { setEdit(true); e.stopPropagation() }}>\r\n              <i className=\"fas fa-reply text-base font-sm \" ></i>\r\n              <span>{props.repliesCount}</span>\r\n            </a>\r\n\r\n            <a>\r\n              <ToolBox\r\n                design={\r\n                  <div className=\"border-0\">\r\n                    <i className=\"fas fa-retweet text-base font-sm\"></i>\r\n                    <span>{ props.retweetsCount + props. quotedRetweetsCount} </span>\r\n                  </div>\r\n                }\r\n              >\r\n                <ul className=\"mb-40 absolute ml-12 bg-gray-100\">\r\n\r\n          <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\r\n          hover:text-gray-900\" >Retweet</a>\r\n          <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\r\n          hover:text-gray-900\" onClick={(e) => { setEdit(true); e.stopPropagation() }}>quote Retweet</a>\r\n\r\n                </ul>\r\n              </ToolBox>\r\n            </a>\r\n\r\n            <a href=\"/\">\r\n              <i className=\"far fa-heart text-base font-sm\"></i>\r\n              <span>{props.likesCount}</span>\r\n            </a>\r\n\r\n          </div>\r\n\r\n  )\r\n}\r\nexport default Tweet_toolbarIcons;","C:\\Users\\Aya\\Desktop\\Gp Twitter\\Twitter-Like-App\\frontend\\src\\components\\tweets\\quotedTweet.tsx",["325","326","327","328","329"],{"ruleId":"330","replacedBy":"331"},{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","severity":1,"message":"335","line":12,"column":10,"nodeType":"336","messageId":"337","endLine":12,"endColumn":18},{"ruleId":"334","severity":1,"message":"338","line":13,"column":10,"nodeType":"336","messageId":"337","endLine":13,"endColumn":20},{"ruleId":"334","severity":1,"message":"339","line":4,"column":7,"nodeType":"336","messageId":"337","endLine":4,"endColumn":33},{"ruleId":"340","severity":1,"message":"341","line":14,"column":37,"nodeType":"342","messageId":"343","endLine":14,"endColumn":39},{"ruleId":"340","severity":1,"message":"341","line":22,"column":15,"nodeType":"342","messageId":"343","endLine":22,"endColumn":17},{"ruleId":"340","severity":1,"message":"341","line":45,"column":44,"nodeType":"342","messageId":"343","endLine":45,"endColumn":46},{"ruleId":"340","severity":1,"message":"341","line":53,"column":15,"nodeType":"342","messageId":"343","endLine":53,"endColumn":17},{"ruleId":"340","severity":1,"message":"341","line":78,"column":43,"nodeType":"342","messageId":"343","endLine":78,"endColumn":45},{"ruleId":"340","severity":1,"message":"341","line":86,"column":15,"nodeType":"342","messageId":"343","endLine":86,"endColumn":17},{"ruleId":"344","severity":1,"message":"345","line":69,"column":100,"nodeType":"346","endLine":69,"endColumn":127},{"ruleId":"334","severity":1,"message":"347","line":3,"column":17,"nodeType":"336","messageId":"337","endLine":3,"endColumn":25},{"ruleId":"334","severity":1,"message":"348","line":7,"column":8,"nodeType":"336","messageId":"337","endLine":7,"endColumn":19},{"ruleId":"340","severity":1,"message":"341","line":19,"column":58,"nodeType":"342","messageId":"343","endLine":19,"endColumn":60},{"ruleId":"340","severity":1,"message":"341","line":19,"column":72,"nodeType":"342","messageId":"343","endLine":19,"endColumn":74},{"ruleId":"349","severity":1,"message":"350","line":60,"column":48,"nodeType":"351","messageId":"352","endLine":60,"endColumn":74,"fix":"353"},{"ruleId":"334","severity":1,"message":"354","line":5,"column":10,"nodeType":"336","messageId":"337","endLine":5,"endColumn":16},{"ruleId":"334","severity":1,"message":"355","line":6,"column":10,"nodeType":"336","messageId":"337","endLine":6,"endColumn":20},{"ruleId":"340","severity":1,"message":"341","line":33,"column":23,"nodeType":"342","messageId":"343","endLine":33,"endColumn":25},{"ruleId":"356","severity":1,"message":"357","line":44,"column":1,"nodeType":"358","endLine":44,"endColumn":89},{"ruleId":"356","severity":1,"message":"359","line":47,"column":9,"nodeType":"358","endLine":52,"endColumn":11},{"ruleId":"356","severity":1,"message":"360","line":60,"column":9,"nodeType":"358","endLine":65,"endColumn":11},{"ruleId":"340","severity":1,"message":"341","line":40,"column":47,"nodeType":"342","messageId":"343","endLine":40,"endColumn":49},{"ruleId":"334","severity":1,"message":"361","line":8,"column":10,"nodeType":"336","messageId":"337","endLine":8,"endColumn":18},{"ruleId":"340","severity":1,"message":"341","line":31,"column":58,"nodeType":"342","messageId":"343","endLine":31,"endColumn":60},{"ruleId":"340","severity":1,"message":"341","line":31,"column":72,"nodeType":"342","messageId":"343","endLine":31,"endColumn":74},{"ruleId":"349","severity":1,"message":"350","line":76,"column":48,"nodeType":"351","messageId":"352","endLine":76,"endColumn":74,"fix":"362"},{"ruleId":"334","severity":1,"message":"363","line":29,"column":13,"nodeType":"336","messageId":"337","endLine":29,"endColumn":18},{"ruleId":"334","severity":1,"message":"364","line":4,"column":10,"nodeType":"336","messageId":"337","endLine":4,"endColumn":14},{"ruleId":"365","severity":1,"message":"366","line":32,"column":7,"nodeType":"358","endLine":32,"endColumn":109},{"ruleId":"365","severity":1,"message":"367","line":34,"column":7,"nodeType":"358","endLine":34,"endColumn":66},{"ruleId":"365","severity":1,"message":"366","line":46,"column":13,"nodeType":"358","endLine":47,"endColumn":33},{"ruleId":"365","severity":1,"message":"366","line":64,"column":7,"nodeType":"358","endLine":64,"endColumn":79},{"ruleId":"334","severity":1,"message":"364","line":2,"column":10,"nodeType":"336","messageId":"337","endLine":2,"endColumn":14},{"ruleId":"365","severity":1,"message":"366","line":27,"column":13,"nodeType":"358","endLine":27,"endColumn":72},{"ruleId":"365","severity":1,"message":"366","line":32,"column":13,"nodeType":"358","endLine":32,"endColumn":16},{"ruleId":"349","severity":1,"message":"350","line":37,"column":51,"nodeType":"351","messageId":"352","endLine":37,"endColumn":77,"fix":"368"},{"ruleId":"365","severity":1,"message":"366","line":45,"column":11,"nodeType":"358","endLine":46,"endColumn":88},{"ruleId":"356","severity":1,"message":"357","line":31,"column":7,"nodeType":"358","endLine":31,"endColumn":74},{"ruleId":"356","severity":1,"message":"359","line":34,"column":9,"nodeType":"358","endLine":38,"endColumn":11},{"ruleId":"356","severity":1,"message":"357","line":54,"column":7,"nodeType":"358","endLine":54,"endColumn":87},{"ruleId":"356","severity":1,"message":"359","line":57,"column":9,"nodeType":"358","endLine":62,"endColumn":11},{"ruleId":"356","severity":1,"message":"360","line":78,"column":1,"nodeType":"358","endLine":83,"endColumn":5},"no-native-reassign",["369"],"no-negated-in-lhs",["370"],"@typescript-eslint/no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'GET_ISAUTH' is defined but never used.","'createPaginationAndCombine' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","'Fragment' is defined but never used.","'ListOfUsers' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property quotedRetweetsCount.","MemberExpression","unexpectedWhitespace",{"range":"371","text":"372"},"'Tweets' is defined but never used.","'FeedTweets' is defined but never used.","react/jsx-pascal-case","Imported JSX component Tweet_img must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Tweet_info must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Tweet_toolbarIcons must be in PascalCase or SCREAMING_SNAKE_CASE","'parseJwt' is defined but never used.",{"range":"373","text":"372"},"'data2' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"range":"374","text":"372"},"no-global-assign","no-unsafe-negation",[2212,2214],".",[2667,2669],[1479,1481]]