[{"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/index.tsx":"1","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/reportWebVitals.ts":"2","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/App.tsx":"3","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts":"4","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/routing.tsx":"5","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_isAuth.ts":"6","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/login_query.ts":"7","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Home.tsx":"8","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/cache.ts":"9","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/Explore.tsx":"10","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx":"11","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/Profile.tsx":"12","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/logo/logo.tsx":"13","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx":"14","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx":"15","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx":"16","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/formInput/formInput.tsx":"17","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/SerachResult.tsx":"18","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createUser.ts":"19","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx":"20","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx":"21","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx":"22","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx":"23","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx":"24","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx":"25","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts":"26","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts":"27","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts":"28","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx":"29","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/decode.ts":"30","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Loading.tsx":"31","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx":"32","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx":"33","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx":"34","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx":"35","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx":"36","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx":"37","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx":"38","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx":"39","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx":"40","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createTweet.ts":"41","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts":"42","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/timestamp.ts":"43","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx":"44","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx":"45","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx":"46","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx":"47","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx":"48","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts":"49","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/EditUser.ts":"50","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx":"51","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx":"52","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx":"53","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Follow.ts":"54","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx":"55","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx":"56","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx":"57","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditBgImage.ts":"58","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/DeleteMedia.ts":"59","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_img.tsx":"60","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/apolloClient.ts":"61","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/writeCache.ts":"62","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx":"63","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/FoF/FoF.tsx":"64","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_Info.tsx":"65","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/ExtendedTweet/ExtendedTweet.tsx":"66","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SINGLE_TWEET.ts":"67"},{"size":294,"mtime":1619594211320,"results":"68","hashOfConfig":"69"},{"size":425,"mtime":1612312753926,"results":"70","hashOfConfig":"69"},{"size":723,"mtime":1619711637872,"results":"71","hashOfConfig":"69"},{"size":348,"mtime":1619594210148,"results":"72","hashOfConfig":"69"},{"size":2936,"mtime":1619745654856,"results":"73","hashOfConfig":"69"},{"size":104,"mtime":1619594210120,"results":"74","hashOfConfig":"69"},{"size":221,"mtime":1619594210144,"results":"75","hashOfConfig":"69"},{"size":821,"mtime":1619594210152,"results":"76","hashOfConfig":"69"},{"size":4494,"mtime":1619711637944,"results":"77","hashOfConfig":"69"},{"size":1182,"mtime":1619594211548,"results":"78","hashOfConfig":"69"},{"size":124,"mtime":1619594210288,"results":"79","hashOfConfig":"69"},{"size":661,"mtime":1619594210328,"results":"80","hashOfConfig":"69"},{"size":262,"mtime":1619744059741,"results":"81","hashOfConfig":"69"},{"size":1930,"mtime":1619594210172,"results":"82","hashOfConfig":"69"},{"size":1191,"mtime":1619744059793,"results":"83","hashOfConfig":"69"},{"size":13543,"mtime":1619744059689,"results":"84","hashOfConfig":"69"},{"size":1344,"mtime":1619594210152,"results":"85","hashOfConfig":"69"},{"size":2630,"mtime":1619711638072,"results":"86","hashOfConfig":"69"},{"size":233,"mtime":1619594210120,"results":"87","hashOfConfig":"69"},{"size":1538,"mtime":1619594210288,"results":"88","hashOfConfig":"69"},{"size":2172,"mtime":1619594210288,"results":"89","hashOfConfig":"69"},{"size":2036,"mtime":1619594210848,"results":"90","hashOfConfig":"69"},{"size":1019,"mtime":1619594210208,"results":"91","hashOfConfig":"69"},{"size":3534,"mtime":1619744059741,"results":"92","hashOfConfig":"69"},{"size":555,"mtime":1619594210288,"results":"93","hashOfConfig":"69"},{"size":131,"mtime":1619594210120,"results":"94","hashOfConfig":"69"},{"size":288,"mtime":1619594210120,"results":"95","hashOfConfig":"69"},{"size":212,"mtime":1619594210100,"results":"96","hashOfConfig":"69"},{"size":1045,"mtime":1619711638112,"results":"97","hashOfConfig":"69"},{"size":358,"mtime":1619594210080,"results":"98","hashOfConfig":"69"},{"size":370,"mtime":1619705783601,"results":"99","hashOfConfig":"69"},{"size":2667,"mtime":1619594210748,"results":"100","hashOfConfig":"69"},{"size":646,"mtime":1619594210064,"results":"101","hashOfConfig":"69"},{"size":970,"mtime":1619594210276,"results":"102","hashOfConfig":"69"},{"size":4114,"mtime":1619711638236,"results":"103","hashOfConfig":"69"},{"size":2525,"mtime":1619750565711,"results":"104","hashOfConfig":"69"},{"size":468,"mtime":1619744059617,"results":"105","hashOfConfig":"69"},{"size":4334,"mtime":1619744059741,"results":"106","hashOfConfig":"69"},{"size":1023,"mtime":1619594211172,"results":"107","hashOfConfig":"69"},{"size":545,"mtime":1619594210068,"results":"108","hashOfConfig":"69"},{"size":438,"mtime":1619711637976,"results":"109","hashOfConfig":"69"},{"size":108,"mtime":1619594210100,"results":"110","hashOfConfig":"69"},{"size":524,"mtime":1619594210148,"results":"111","hashOfConfig":"69"},{"size":1765,"mtime":1619744059717,"results":"112","hashOfConfig":"69"},{"size":400,"mtime":1619744059541,"results":"113","hashOfConfig":"69"},{"size":443,"mtime":1619744059601,"results":"114","hashOfConfig":"69"},{"size":10868,"mtime":1619709242411,"results":"115","hashOfConfig":"69"},{"size":4181,"mtime":1619750166986,"results":"116","hashOfConfig":"69"},{"size":145,"mtime":1619594210120,"results":"117","hashOfConfig":"69"},{"size":230,"mtime":1619594210080,"results":"118","hashOfConfig":"69"},{"size":1459,"mtime":1619744059661,"results":"119","hashOfConfig":"69"},{"size":1057,"mtime":1619594210328,"results":"120","hashOfConfig":"69"},{"size":1649,"mtime":1619594211176,"results":"121","hashOfConfig":"69"},{"size":208,"mtime":1619594210100,"results":"122","hashOfConfig":"69"},{"size":323,"mtime":1619594210032,"results":"123","hashOfConfig":"69"},{"size":717,"mtime":1619711638064,"results":"124","hashOfConfig":"69"},{"size":2098,"mtime":1619750568743,"results":"125","hashOfConfig":"69"},{"size":140,"mtime":1619594210104,"results":"126","hashOfConfig":"69"},{"size":140,"mtime":1619600216742,"results":"127","hashOfConfig":"69"},{"size":567,"mtime":1619744059977,"results":"128","hashOfConfig":"69"},{"size":534,"mtime":1619711637920,"results":"129","hashOfConfig":"69"},{"size":3051,"mtime":1619711638000,"results":"130","hashOfConfig":"69"},{"size":4526,"mtime":1619744059689,"results":"131","hashOfConfig":"69"},{"size":355,"mtime":1619744059461,"results":"132","hashOfConfig":"69"},{"size":1598,"mtime":1619752603617,"results":"133","hashOfConfig":"69"},{"size":2540,"mtime":1619752335581,"results":"134","hashOfConfig":"69"},{"size":367,"mtime":1619751138778,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"m46pjl",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"138"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"138"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"138"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"138"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"138"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"138"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"138"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"138"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"138"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"138"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"138"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/index.tsx",[],["286","287"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/reportWebVitals.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/App.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/jwtDecoder.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/routing.tsx",["288","289"],"import {\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { NotFoundPage } from '../components/notFound/notFound';\nimport { LandingPage } from '../components/Register/landingPage/landingPage';\nimport { SignUpForm } from '../components/Register/signup_form/signup';\nimport Explore from './Explore';\nimport Profile from '../components/profile/Profile';\nimport Home from \"../components/Home\";\nimport { useQuery } from '@apollo/client';\nimport { GET_ISAUTH } from '../common/queries/Get_isAuth';\nimport React from \"react\";\nimport { Login } from \"../components/Register/login_form/login\";\nimport ExtendedTweet from \"../components/tweets/ExtendedTweet/ExtendedTweet\";\n\nexport const Routing = () => {\n\n  return (\n    <div>\n\n      <Switch>\n        <PublicRoute path=\"/signup\">\n          <SignUpForm />\n        </PublicRoute>\n\n        <PublicRoute path=\"/login\">\n          <Login />\n        </PublicRoute>\n\n        <PrivateRoute path=\"/setting\">\n          <Setting />\n        </PrivateRoute>\n\n        <Route path=\"/error\">\n          <NotFoundPage />\n        </Route>\n\n        <PublicRoute path=\"/forget_password\">\n          <ForgetPassword />\n        </PublicRoute>\n\n\n        <Route path=\"/explore\">\n          <Explore />\n        </Route>\n\n        <PrivateRoute path=\"/messages\">\n          <Messages />\n        </PrivateRoute>\n\n\n        <PublicRoute path=\"/LandingPage\">\n          <LandingPage />\n        </PublicRoute>\n\n\n        <PrivateRoute path=\"/Notifications\">\n          <Notifications />\n        </PrivateRoute>\n\n\n        <PrivateRoute path=\"/\" exact >\n          <Home />\n        </PrivateRoute>\n\n\n        <PrivateRoute path=\"/tweet/:id\">\n          <ExtendedTweet />\n        </PrivateRoute>\n\n        <PrivateRoute path=\"/profile\">\n          <Profile />\n        </PrivateRoute>\n\n        <Route path='/:id'>\n          <Profile />\n        </Route>\n\n      </Switch>\n\n    </div>\n  )\n};\n\nconst PrivateRoute = ({ children, ...rest }: any) => {\n  let auth = localStorage.getItem('token') ? true : false\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\n\n\nconst PublicRoute = ({ children, ...rest }: any) => {\n  let auth = localStorage.getItem('token') ? false : true\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction Setting() {\n  return <h2>setting</h2>;\n}\n\n\n\nfunction Messages() {\n  return <h2>Messages</h2>;\n}\nfunction Notifications() {\n  return <h2>Notifications</h2>;\n}\n\nfunction ForgetPassword() {\n  return <h2>forget_password</h2>;\n}\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_isAuth.ts",[],["290","291"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/login_query.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Home.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/cache.ts",["292","293","294","295","296","297"],"import { InMemoryCache, makeVar, ReactiveVar } from \"@apollo/client\";\nimport { searchBarValue } from \"./TypesAndInterfaces\";\n\nconst createPaginationAndCombine = (keyArgs: any[]) => ({\n    merge(existing: any, incoming: any) {\n        const merged = existing ? existing.slice(0) : [];\n\n        let breakFlag = 0;\n        let i = 0;\n        let j = 0;\n        for (i = 0; i < merged.length; i++) {\n            if (breakFlag) break;\n            for (j = 0; j < incoming.length; j++) {\n                if (merged[i].__ref == incoming[j].__ref) {\n                    breakFlag = 1;\n                    i -= 2;\n                    break;\n                }\n            }\n            j = 0;\n        }\n        if (i == merged.length) i--;\n        for (; j < incoming.length; j++) {\n            merged[++i] = incoming[j];\n        }\n        return merged.slice(0, i + 1);\n    },\n    read(existing: any) {\n        return existing;\n    },\n    keyArgs,\n});\nconst createPaginationAndCombineTweetsElements = (keyArgs: any[]) => ({\n    merge(existing: any, incoming: any) {\n        const merged = existing\n            ? { totalCount: existing.totalCount, tweets: [...existing.tweets] }\n            : { totalCount: 0, tweets: [] };\n        merged.totalCount = incoming.totalCount;\n        let breakFlag = 0;\n        let i = 0;\n        let j = 0;\n        for (i = 0; i < merged.tweets.length; i++) {\n            if (breakFlag) break;\n            for (j = 0; j < incoming.tweets.length; j++) {\n                if (merged.tweets[i].__ref == incoming.tweets[j].__ref) {\n                    breakFlag = 1;\n                    i -= 2;\n                    break;\n                }\n            }\n            j = 0;\n        }\n        if (i == merged.tweets.length) i--;\n        for (; j < incoming.tweets.length; j++) {\n            merged.tweets[++i] = incoming.tweets[j];\n        }\n        merged.tweets.slice(0, i + 1);\n        return merged;\n    },\n    read(existing: any) {\n        return existing;\n    },\n    keyArgs,\n});\n\nconst createPaginationAndCombineUsersElements = (keyArgs: any[]) => ({\n  merge(existing: any, incoming: any) {\n      const merged = existing\n          ? { users: [...existing.users] }\n          : { users: [] };\n      let breakFlag = 0;\n      let i = 0;\n      let j = 0;\n      for (i = 0; i < merged.users.length; i++) {\n          if (breakFlag) break;\n          for (j = 0; j < incoming.users.length; j++) {\n              if (merged.users[i].__ref == incoming.users[j].__ref) {\n                  breakFlag = 1;\n                  i -= 2;\n                  break;\n              }\n          }\n          j = 0;\n      }\n      if (i == merged.users.length) i--;\n      for (; j < incoming.users.length; j++) {\n          merged.users[++i] = incoming.users[j];\n      }\n      merged.users.slice(0, i + 1);\n      return merged;\n  },\n  read(existing: any) {\n      return existing;\n  },\n  keyArgs,\n});\n\nexport const cache: InMemoryCache = new InMemoryCache({\n    typePolicies: {\n        Query: {\n            fields: {\n                searchBarValue: {\n                    read() {\n                        return searchBarVar();\n                    },\n                },\n                EditProfileImage: {\n                    read() {\n                        return EditProfileImageVal();\n                    },\n                },\n                EditProfileBg: {\n                    read() {\n                        return EditProfileBgVal();\n                    },\n                },\n\n                SFW: {\n                    read() {\n                        return SFW();\n                    },\n                },\n                getFeed: createPaginationAndCombine([\"isSFW\"]),\n                tweets: createPaginationAndCombineTweetsElements([\n                    \"userId\",\n                    \"filter\",\n                    \"isSFW\",\n                ]),\n                users: createPaginationAndCombineUsersElements([\"search\"])\n            },\n        },\n    },\n});\n\nexport const searchBarVar: ReactiveVar<searchBarValue> = makeVar<searchBarValue>(\n    { value: \"\" }\n);\n\nexport const EditProfileImageVal: ReactiveVar<{\n    Image: object | false;\n    ImageURL: string | false;\n}> = makeVar<any>({\n    Image: false,\n    ImageURL: false,\n});\nexport const EditProfileBgVal: ReactiveVar<{\n    BgImage: object | false;\n    BgImageURL: string | false;\n}> = makeVar<any>({\n    BgImage: false,\n    BgImageURL: false,\n});\n\nexport const SFW: ReactiveVar<{ value: boolean }> = makeVar<any>({\n    value: true,\n});\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/routes/Explore.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/notFound/notFound.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/Profile.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/logo/logo.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/landingPage/landingPage.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/tweetButton/tweetButton.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/signup_form/signup.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/formInput/formInput.tsx",[],["298","299"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/SerachResult.tsx",["300","301"],"\nimport { useQuery } from '@apollo/client';\nimport React, { Fragment, useState } from 'react';\nimport { Get_SearchBar_Value } from '../common/queries/Get_SearchBar_Value';\nimport { Get_Search_Result } from '../common/queries/Get_Search_Result';\nimport { PersonEntity } from '../common/TypesAndInterfaces';\nimport ListOfUsers from './TrendsBar/ListOfUsers/listofusers';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport PersonItem from \"./TrendsBar/ListOfUsers/PersonItem/PersonItem\";\nimport Loading from '../UI/Loading';\n\nconst SearchResult: React.FC = () => {\n\n  //static behaviour\n  /*\n    const location = useLocation()\n    const searchQ = location.search.substr(6)\n  */\n\n  //dynamic behaviour\n  const search = useQuery(Get_SearchBar_Value)\n  const searchQ: string = search.data.searchBarValue.value\n\n  const [page, setPage] = useState<any>(1)\n  const { data, loading, error, fetchMore} = useQuery(Get_Search_Result, { variables: { name: searchQ } })\n  if (searchQ === \"\") {\n    return <h1 className=\"text-lg text-center pt-4\">Try searching for people, names, usernames\n</h1>\n  }\n  if(!loading && data && data?.users?.users?.length === 10 && page === 1){\n    setPage(page + 1);\n    fetchMore({\n        variables: {\n            page: page + 1,\n            name: searchQ,\n        },\n    })\n}\n  if (loading) return <Loading />\n  if (error) return <h1 className=\"text-lg text-center pt-4 text-gray-500\">Something went wrong :( </h1>\n\n  const list: PersonEntity[] = data.users.users\n  if (list.length === 0)\n        return <h1 className=\"text-lg text-center pt-4\">No Results</h1>;\n  return (\n    <InfiniteScroll\n            dataLength={list?.length || 0}\n            next={() => {\n                setPage(page + 1);\n                return fetchMore({\n                    variables: {\n                        page: page + 1,\n                        name: searchQ,\n                    },\n                });\n            }}\n            hasMore={list?.length >= page * 10 || false}\n            loader={<Loading />}\n        >\n            {list.map((person) => {\n                return (\n                    <PersonItem\n                        key={person.username}\n                        id={person.id}\n                        name={person.name}\n                        username={person.username}\n                        followed={person.followed}\n                        imageURI={person.imageURI}\n                        isFollowing={person.isFollowing}\n                        bio={person.bio}\n                    />\n                );\n            })}\n        </InfiniteScroll>\n\n  )\n}\nexport default SearchResult;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createUser.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/TrendsBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/SearchBar/SearchBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBar.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/CurrentTrends.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileWall.tsx",["302"],"import React, { Fragment, useState } from 'react';\nimport '../../App.css';\nimport './profile.css';\nimport ProfileInfo from \"./ProfileInfo\";\nimport '../../styles/layout.css'\nimport { useQuery } from '@apollo/client';\nimport { LoggedUser } from '../../common/queries/Userqery';\nimport TweetList from '../tweets/TweetList'\nimport { Switch, NavLink, Route } from \"react-router-dom\"\nimport { parseJwt } from '../../common/decode';\nimport Loading from \"../../UI/Loading\"\n\n\nfunction ProfileWall() {\n  let profile;\n  if (localStorage.getItem('token')) {\n    profile = parseJwt(localStorage.getItem('token'))\n  }\n\n  const { loading, error } = useQuery(LoggedUser, { variables: { id: profile.id } });\n  const [tweetsPage, setTweetsPage] = useState<any>(1);\n  const [tweetsRepliesPage, setTweetsRepliesPage] = useState<any>(1);\n  const [mediaPage, setMediaPage] = useState<any>(1);\n  const [likesPage, setLikesPage] = useState<any>(1);\n\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n  if (error) return <p>`Error! ${error.message}`</p>\n  return (\n    < Fragment >\n      <ProfileInfo />\n      <nav >\n        <ul className=\"pf--nav-ul \">\n          <NavLink exact activeClassName=\"active\" className=\"pf--nav-link\" to=\"/profile\">\n            <li>Tweets</li>\n          </NavLink>\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to=\"/profile/replies\">\n            <li>Tweets & replies</li>\n          </NavLink>\n\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to=\"/profile/media\">\n            <li>Media</li>\n          </NavLink>\n          <NavLink activeClassName=\"active\" className=\"pf--nav-link\" to=\"/profile/likes\">\n            <li>Likes</li>\n          </NavLink>\n        </ul>\n      </nav>\n      <div className=\"tweets\">\n        <Switch>\n          <Route\n            exact\n            path='/profile'\n            render={() => (\n              <TweetList filter={``} page={tweetsPage} setPage={setTweetsPage} />\n              // to test paganation go to profileWallPage\n              // <Profilewallpage  filter={``}/>\n            )}\n          />\n          <Route\n            exact\n            path='/profile/replies'\n            render={() => (\n              <TweetList filter={`replies&tweets`} page={tweetsRepliesPage} setPage={setTweetsRepliesPage}/>\n            )}\n          />\n          <Route\n            exact\n            path='/profile/media'\n            render={() => (\n              <TweetList filter={`media`} page={mediaPage} setPage={setMediaPage}/>\n            )}\n          />\n          <Route\n            exact\n            path='/profile/likes'\n            render={() => (\n              <TweetList filter={`likes`} page={likesPage} setPage={setLikesPage}/>\n            )}\n          />\n        </Switch>\n\n\n\n      </div>\n\n\n    </Fragment >\n  );\n}\n\nexport default ProfileWall;","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/Footer/Footer.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_SearchBar_Value.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Get_Search_Result.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_Hashtags.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/listofusers.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/decode.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Loading.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/flootProfile/flootProfile.tsx",["303"],"import React, {useState, useEffect} from 'react';\nimport { Logout } from '../../Register/logout/logout';\nimport { ToolBox } from '../toolbox/toolbox';\nimport './flootProfile.css';\nimport { useQuery } from '@apollo/client';\nimport { parseJwt } from '../../../common/decode';\nimport { LoggedUser } from '../../../common/queries/Userqery';\nimport Loading from \"../../../UI/Loading\"\nimport  {Get_SFW}  from '../../../common/queries/GET_SFW';\nimport {SFW} from '../../../common/cache'\n\nexport function FlootProfile () {\n      var profile;\n      if (localStorage.getItem('token') !== null) {\n        profile = parseJwt(localStorage.getItem('token'))\n      }\n    \n    \n      const [sfw, setsfw] = useState(true)\n      const {error, loading ,data} = useQuery(LoggedUser, { variables: { id: profile.id } });\n\n      const handleSFW =()=>{\n        (sfw)? setsfw (false): setsfw (true)\n      }\n      useEffect(() => {\n        SFW({value:sfw})\n      }, [sfw])\n      const data2 = useQuery (Get_SFW).data \n\n      if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n      if (error) return <p>`Error! ${error.message}`</p>\n \n\n      const userYear:number = (data.user.birthDate).split(\"-\", 1)\n      const currentYear = new Date()\n      const age = currentYear.getFullYear() - userYear   ; \n      return (\n\n         \n        <div>\n           <ToolBox className=\"fixed bottom-0 rounded-full w-60 mt-4 mb-2\n           bg-white hover:bg-blue-100 focus:bg-blue-200 focus:outline-none focus:shadow-outline hover:text-gray-900 \n           focus:ring-2  focus:ring-offset-gray-100\" design={\n<div className=\"flex justify-between items-start p-3\">\n\n<div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n  \n </div>\n\n <div className=\"flex-grow pr-20\">\n   <h3 className=\" text-xm font-bold\">{(data.user.name).split(\" \", 1)}</h3>\n   <p className=\"\"><span className=\"text-xm \">@</span>{data.user.userName}</p>   \n </div>\n\n <i className=\" fas fa-ellipsis-h\"></i>\n</div>\n           }>\n\n          <ul className= \"px-4 mt-16\" >\n          <a href=\"/profile\" className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \n          hover:text-gray-900  hover:rounded-full rounded-full\" role=\"menuitem\">My Account</a>\n\n          {\n            (age > 18) &&\n            <button className=\"mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 \n            hover:text-gray-900  hover:rounded-full rounded-full focus:outline-none\" role=\"menuitem\" \n            onClick={handleSFW}>{(sfw)?'Set NSFW':'Set SFW'}</button>\n          }\n          <Logout/>\n            </ul>\n\n  </ToolBox>\n  </div>\n              \n\n\n      );\n    }\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Modal/Modal.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/CurrentTrends/TrendItem/TrendItem.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/PostTweet.tsx",["304","305"],"import { ErrorMessage, Field, Form, Formik } from \"formik\"\nimport React, { useRef } from \"react\"\nimport * as Yup from \"yup\"\nimport { TweetButton } from '../sideBar/tweetButton/tweetButton'\nimport { Tweets } from '../../common/queries/TweetQuery'\nimport { FeedTweets } from '../../common/queries/Feedtweets'\nimport { Post_Tweet } from '../../common/queries/createTweet'\nimport { useMutation } from \"@apollo/client\"\nimport {updateTweetsCacheForCreateTweet} from \"../../common/utils/writeCache\"\nimport './tweet.css';\nimport avatar from \"../../routes/mjv-d5z8_400x400.jpg\";\nimport { parseJwt } from '../../common/decode';\ninterface Post {\n  text: string\n}\nconst PostTweet = () => {\n  var profile: any;\n  if (localStorage.getItem('token') !== \"LOGOUT\") {\n    profile = parseJwt(localStorage.getItem('token'))\n  }\n  console.log(profile.id)\n  // const userData = useQuery (Get_Logged_user)\n  // const user:User = userData.data.logUser.user\n  // console.log (user.imageURL)\n\n  const inputRef: any = useRef()\n  // mutation\n  const [createTweet, { data }] = useMutation(Post_Tweet, {\n    update: updateTweetsCacheForCreateTweet\n  });\n  console.log(`this ${inputRef.current}`)\n\n  const initialValues: Post = {\n    text: \"\"\n  }\n  /********   dynamic hight control funtion   ***********/\n  function setInputHight(element: React.ChangeEvent<HTMLElement>) {\n    element.target.style.height = \"60px\"\n    element.target.style.height = (element.target.scrollHeight) + \"px\"\n    inputRef.current.style.height = (element.target.scrollHeight) + \"px\"\n    console.log(`in ${element.target.style.height}`)\n    console.log(`out ${inputRef.current.style.height}`)\n    console.log(`scroll ${element.target.scrollHeight}`)\n  }\n  const validationSchema = Yup.object({\n    text: Yup.string()\n      .required()\n      .min(1, \"Must be more than 1 character\")\n      .max(256, \"Must be less than 257 characters\")\n  })\n  return (\n    <div className=\"mb-3 p-3 w-full shadow bg-white flex\">\n      {/* this shoud be dynamic */}\n      <div className=\"tweet-icon \">\n        <img src={avatar} alt=\"avatar\" />\n      </div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={({ text }, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          console.log(text);\n          createTweet({\n            variables: { tweetInput: { text } },\n          });\n          console.log(`this ${data}`)\n          setSubmitting(false);\n          resetForm();\n        }}\n      >\n        <div className=\"w-full mx-4 flex flex-col\">\n          <Form >\n            <div ref={inputRef} className=\"w-full mb-2 tweet-text flex h-16\">\n              <Field\n\n                name=\"text\"\n                type=\"text\"\n                as=\"textarea\"\n                // onChange={setInputHight}\n                onKeyPress={setInputHight}\n                className=\"w-full placeholder-gray4 p-3 ml-2 \n              focus:outline-none resize-none overflow-hidden min-h-12\"\n                placeholder=\"What's happening...\" />\n            </div>\n            <hr className=\"my-2\" />\n            <div className=\"flex justify-between items-center\">\n              <button className=\"hover:bg-blue-100 rounded-full py-2 px-3 transition\">\n                <svg\n                  className=\"h-8 w-8 text-blue-400 \"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n              </button>\n              <ErrorMessage name=\"text\" render={msg => <div className=\"text-red-500\">{msg}</div>} />\n\n              <TweetButton name=\"Tweet\" type=\"submit\" className=\" rounded-full py-3 px-6\" />\n            </div>\n\n          </Form>\n        </div>\n      </Formik>\n    </div>\n  )\n}\n\nexport default PostTweet\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/TweetList.tsx",["306"],"import React, { Fragment } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useQuery } from \"@apollo/client\";\n// import Tweet from '../Tweet';\nimport Tweet from \"./Tweet\";\nimport { Tweets } from \"../../common/queries/TweetQuery\";\nimport { TweetData } from \"./Tweet\";\nimport { parseJwt } from \"../../common/decode\";\nimport { Get_SFW } from \"../../common/queries/GET_SFW\";\nimport Loading from \"../../UI/Loading\";\n\nexport interface TweetFilter {\n    filter: string;\n    page: number;\n    setPage: any;\n    id: string;\n}\n\nconst TweetList: React.FC<TweetFilter> = (props) => {\n\n    const { filter, page, setPage } = props;\n    const sfw = useQuery(Get_SFW).data;\n    const { loading, error, data, fetchMore } = useQuery(Tweets, {\n        variables: {\n            userId: props.id,\n            filter: filter,\n            isSFW: sfw.SFW.value,\n        },\n    });\n\n    if (!loading && data && data?.tweets?.tweets?.length === 10 && page === 1) {\n        setPage(page + 1);\n        fetchMore({\n            variables: {\n                userId: props.id,\n                isSFW: sfw.SFW.value,\n                page: page + 1,\n                filter: filter\n            },\n        })\n    }\n    if (loading) return <Fragment><br /> <br /> <Loading size={30} /></Fragment>;\n    if (error) return <p>`Error! ${error.message}`</p>;\n\n    return (\n        <InfiniteScroll\n            dataLength={data?.tweets?.tweets?.length || 0}\n            next={() => {\n                setPage(page + 1);\n                return fetchMore({\n                    variables: {\n                        userId: props.id,\n                        isSFW: sfw.SFW.value,\n                        page: page + 1,\n                        filter: filter\n                    },\n                });\n            }}\n            hasMore={data?.tweets?.tweets?.length >= page * 10 || false}\n            loader={<Loading />}\n        >\n            {data.tweets.tweets.map((tweet: TweetData) => {\n                return (\n                    <Tweet\n                        id={tweet.id}\n                        text={tweet.text}\n                        repliesCount={tweet.repliesCount}\n                        createdAt={tweet.createdAt}\n                        isLiked={tweet.isLiked}\n                        user={tweet.user}\n                        likesCount={tweet.likesCount}\n                        key={tweet.id}\n                    />\n                );\n            })}\n        </InfiniteScroll>\n    );\n};\n\nexport default TweetList;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Userqery.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/ProfileInfo.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/sideBarItem/sideBarItem.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/SideList/SideList.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/createTweet.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SFW.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/timestamp.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/TrendsBar/ListOfUsers/PersonItem/PersonItem.tsx",["307"],"import React from 'react';\n\nimport { PersonEntity } from '../../../../common/TypesAndInterfaces';\n\nimport './PersonItem.css'\nimport '../../../profile/profile.css'\nimport FollowButton from '../../../FollowButton/FollowButton';\nimport { parseJwt } from '../../../../common/decode';\nimport { useHistory } from 'react-router';\n\n\nconst TrendItem: React.FC<PersonEntity> = ({ id, bio, isFollowing, name, username, followed = false, imageURI, numberOfFollowers }) => {\n  const history = useHistory();\n\n  const goToProfile = () => {\n    history.push({\n      pathname: '/' + id,\n    })\n\n  }\n\n  const profilePicture = (imageURI === undefined || imageURI === null) ?\n    <svg className=\"w-full h-full\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" /></svg> :\n    <img className=\"rounded-full w-full\" src={imageURI} alt=\"user\" />;\n\n  return (\n\n    <div className=\" person-item flex  justify-between items-start p-3 hover:bg-gray-100\" onClick={goToProfile}>\n\n      <div className=\"person-item-image w-11 h-11  rounded-full  flex-none mr-2 \">\n        {profilePicture}\n      </div>\n\n      <div className=\"flex-grow\">\n        <h1 className=\"person-item-name  text-xm font-bold\">{name}</h1>\n        <p className=\"person-item-username\"><span className=\"text-xm\">@</span>{username}</p>\n        <p>{bio}</p>\n      </div>\n      <div>\n        {localStorage.getItem('token') && (id == parseJwt(localStorage.getItem('token')).id) ? null :\n          <FollowButton id={id} following={isFollowing} />}\n      </div>\n    </div>\n  )\n}\nexport default TrendItem;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Feedtweets.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/TweetQuery.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/EditProfile.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet.tsx",["308","309","310","311","312"],"import React, { useState } from 'react'\nimport './tweet.css';\nimport { ToolBox } from '../sideBar/toolbox/toolbox';\nimport Modal from '../../UI/Modal/Modal';\nimport PostTweet from './PostTweet';\nimport Tweet_img from './Tweet_img';\nimport Tweet_Info from './Tweet_Info';\nimport { useHistory } from 'react-router';\n\nexport interface TweetData {\n  user?: {\n    id?: string\n    imageURL?: string\n    name?: string\n    userName?: string\n  }\n  id: string\n  text: string\n  likesCount?: number\n  repliesCount?: number\n  createdAt?: number\n  isLiked?: boolean\n}\n\nfunction Tweet(props: any) {\n  const [edit, setEdit] = useState<boolean>(false);\n  const modalClosed = () => setEdit(false);\n\n  const history = useHistory();\n  //redirect to tweet\n  const goToTweet = () => {\n    history.push({\n      pathname: '/tweet/' + props.id,\n    })\n  }\n  return (\n    <div className=\"tweet-box \" onClick={goToTweet}>\n\n      <Modal show={edit} modalClosed={modalClosed} className=\"pb-4\" >\n\n        <header className=\"flex justify-between items-center px-3 h-8 w-full border-b border-gray-200 pb-6 pt-2\">\n\n          <div onClick={modalClosed} className=\" p-1 rounded-full\">\n            <svg className=\"h-8 w-5 pt-2 mt-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </div>\n\n        </header>\n        <PostTweet />\n      </Modal>\n\n      <Tweet_img imageURL={props.user?.imageURL} id={props.user?.id} />\n\n      <div className=\"tweet-aside\">\n\n        <Tweet_Info\n          userName={props.user?.userName}\n          createdAt={props.createdAt}\n          name={props.user?.name}\n          id={props.user.id}\n\n        />\n\n        {/*  <div className=\"tweet-data py-1\">\n          <p className=\"font-bold mr-1\">{props.user?.name}</p>\n          <p className=\"p--light-color\"> @{props.user?.userName} . </p>\n          <p className=\"p--light-color px-1\"> {props.createdAt ? timeConverter(Number(props.createdAt)) : null}</p>\n          <span className=\"tweet-ellipsis p--light-color z-10 \">\n\n\n            <ToolBox\n              design={\n                <i className=\"fas fa-ellipsis-h\"></i>\n              }\n            >\n\n              <ul className=\" mb-40 ml-4 absolute bg-gray-100 \" >\n\n                <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >block</a>\n                <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >mute</a>\n\n              </ul>\n            </ToolBox>\n\n          </span>\n        </div> */}\n\n\n        <div className=\"tweet-content\">\n          <span>\n            {props.text}\n          </span>\n          <div className=\"tweet-toolbar p--light-color\">\n            <a onClick={(e) => { setEdit(true); e.stopPropagation() }}>\n              <i className=\"fas fa-reply text-base font-sm \"></i>\n              <span>{props.repliesCount}</span>\n            </a>\n\n            <a>\n              <ToolBox\n                design={\n                  <div className=\"border-0\">\n                    <i className=\"fas fa-retweet text-base font-sm\"></i>\n                    <span>2</span>\n                  </div>\n                }\n              >\n                <ul className=\"mb-40 absolute ml-12 bg-gray-100 \" >\n\n                  <a href=\"/profile\" className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" >Retweet</a>\n                  <a className=\"mt-1 w-40 text-center block px-4 py-2 text-sm text-gray-700 bg-gray-100 hover:bg-gray-200\n          hover:text-gray-900\" onClick={(e) => { setEdit(true); e.stopPropagation() }}>quote Retweet</a>\n\n                </ul>\n              </ToolBox>\n            </a>\n\n            <a href=\"/\" >\n              <i className=\"far fa-heart text-base font-sm\"></i>\n              <span>{props.likesCount}</span>\n            </a>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Tweet;\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditProfileImage.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/EditUser.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/FollowButton/FollowButton.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/profile/EditUser/InputSet.tsx",[],["313","314"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/sideBar/toolbox/toolbox.tsx",["315"],"import React, { Fragment } from 'react';\n\ninterface toolProps {\n  className?: string;\n  children?: any;\n  design?:any;\n}\n\nexport class ToolBox extends React.Component<toolProps>  {\ntoggleContainer:any =  React.createRef<HTMLDivElement>();\nstate = {\n        isOpen: true,\n    };\n\n  constructor(props :any) {\n    super(props);\n    this.state = { isOpen: false };\n    this.toggleContainer  =  React.createRef();\n\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.onClickOutsideHandler = this.onClickOutsideHandler.bind(this);\n  }\n  \n  onClickHandler  = (e:any) => {\n      this.setState(state => {\n        if (this.state.isOpen){\n          return {\n            isOpen: false\n          };\n        }\n        else {\n          return {\n            isOpen: true\n          };\n        }\n\n      });\n    };\n\n    componentDidMount() {\n        document.addEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n    componentWillUnmount() {\n      document.removeEventListener(\"mousedown\", this.onClickOutsideHandler);\n    }\n\n\n    onClickOutsideHandler(event : any ) {\n      if (this.state.isOpen && !this.toggleContainer.current.contains(event.target)) {\n        this.setState({ isOpen: false });\n      }\n    }\n  \n    render() {\n      return (\n        <Fragment>\n        <div className=\"flex-initial\"  ref={this.toggleContainer}>\n         {this.state.isOpen && (\n          <div>\n           { this.props.children}\n          </div>\n        )}\n <div>\n      <a className= {`${this.props.className}`} onClick={this.onClickHandler}>\n        <div>\n      { this.props.design}\n      </div>\n       </a>\n  </div>\n </div>\n </Fragment>\n      );\n    }\n  }","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/Follow.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/Backdrop/Backdrop.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/logout/logout.tsx",["316"],"import React from 'react';\nimport { Link } from \"react-router-dom\"\nimport { useHistory } from \"react-router-dom\";\nimport {useApolloClient} from '@apollo/client'\n\n\n\n\n\n    \n\nexport function Logout() {\n    const history = useHistory()\n    const client = useApolloClient()\n\n    async function logoutSubmit() {\n        \n        localStorage.clear()\n        await client.clearStore()\n        console.log(\"store reseted\")\n        history.push('/')\n    }\n    return (\n        <div>\n         <button className=\" mt-1 w-52 text-center block px-4 py-2 text-sm text-gray-700  hover:bg-gray-100 hover:text-gray-900 \n         hover:rounded-full rounded-full\"  onClick={() => logoutSubmit()}>logout</button>\n\n        </div>\n    )\n}\n","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/HomeTweets.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GetEditBgImage.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/DeleteMedia.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_img.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/apolloClient.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/utils/writeCache.ts",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/Register/login_form/login.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/UI/FoF/FoF.tsx",[],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/Tweet_Info.tsx",["317","318","319"],"/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/components/tweets/ExtendedTweet/ExtendedTweet.tsx",["320"],"import React, { Fragment } from 'react';\nimport '../../../styles/layout.css'\nimport Tweet, { TweetData } from '../Tweet';\nimport { SideBar } from '../../sideBar/sideBar';\nimport TrendsBar from '../../TrendsBar/TrendsBar';\nimport { useQuery } from '@apollo/client';\nimport { GET_SINGLE_TWEET } from '../../../common/queries/GET_SINGLE_TWEET';\nimport { Get_SFW } from '../../../common/queries/GET_SFW';\nimport { useLocation } from 'react-router';\nimport Loading from '../../../UI/Loading';\nimport FoF from '../../../UI/FoF/FoF';\nimport { Link } from 'react-router-dom';\n// import Profilewallpage from './profileWallPage';\n\nconst ExtendedTweet: React.FC = () => {\n\n  const sfw = useQuery(Get_SFW).data;\n  const location = useLocation()\n  let urlId = location.pathname.substr(7)\n\n  console.log(urlId)\n  const { data, loading, error } = useQuery(GET_SINGLE_TWEET, {\n    variables: {\n      tweetId: urlId,\n      isSFW: sfw.SFW.value,\n    }\n  })\n  console.log(error)\n  if (loading) return (<div className=\"mt-8\" ><Loading /></div>)\n  if (error) return <FoF\n    msg=\"This tweet doesn’t exist\"\n  />\n  console.log(data)\n\n  const tweet: TweetData = data.tweet\n  console.log(tweet)\n  return (\n    <Fragment>\n\n      <main className=\"main-container\">\n        <aside className=\"sb-left\">< SideBar /></aside>\n        <article className=\"wall\">\n          <header className=\"top-bar px-3 py-2\">\n            <span className=\" m-3\">\n              <Link to=\"/\">\n\n                <i className=\"fa fa-arrow-left  p--main-color\" aria-hidden=\"true\"></i>\n              </Link>\n\n            </span>\n            <div>\n              <p className=\"font-extrabold text-lg \">{tweet.user?.name}'s awosome Tweet</p>\n              {/* featch front tweet */}\n\n            </div>\n          </header>\n\n          <Tweet\n            id={tweet.id}\n            text={tweet.text}\n            repliesCount={tweet.repliesCount}\n            createdAt={tweet.createdAt}\n            isLiked={tweet.isLiked}\n            user={tweet.user}\n            likesCount={tweet.likesCount}\n          />\n\n          <div>\n            <pre className=\"p-4 bg-gray-900 text-blue-200\" ><span className=\"text-green-500 block\">//TODO: fetch tweet replies</span>\n              <span className=\"text-blue-400\">const</span> replies <span className=\"text-white\">=</span> fetch(<span className=\"text-blue-400\">replies</span>);\n\n            </pre>\n          </div>\n        </article>\n\n        <aside className=\"sb-right\">< TrendsBar /></aside>\n      </main>\n    </Fragment>\n  );\n}\n\nexport default ExtendedTweet;","/home/eslam/Programming/GP/Twitter-Like-App/frontend/src/common/queries/GET_SINGLE_TWEET.ts",[],{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":12,"column":10,"nodeType":"327","messageId":"328","endLine":12,"endColumn":18},{"ruleId":"325","severity":1,"message":"329","line":13,"column":10,"nodeType":"327","messageId":"328","endLine":13,"endColumn":20},{"ruleId":"321","replacedBy":"330"},{"ruleId":"323","replacedBy":"331"},{"ruleId":"332","severity":1,"message":"333","line":14,"column":37,"nodeType":"334","messageId":"335","endLine":14,"endColumn":39},{"ruleId":"332","severity":1,"message":"333","line":22,"column":15,"nodeType":"334","messageId":"335","endLine":22,"endColumn":17},{"ruleId":"332","severity":1,"message":"333","line":45,"column":44,"nodeType":"334","messageId":"335","endLine":45,"endColumn":46},{"ruleId":"332","severity":1,"message":"333","line":53,"column":15,"nodeType":"334","messageId":"335","endLine":53,"endColumn":17},{"ruleId":"332","severity":1,"message":"333","line":77,"column":41,"nodeType":"334","messageId":"335","endLine":77,"endColumn":43},{"ruleId":"332","severity":1,"message":"333","line":85,"column":13,"nodeType":"334","messageId":"335","endLine":85,"endColumn":15},{"ruleId":"321","replacedBy":"336"},{"ruleId":"323","replacedBy":"337"},{"ruleId":"325","severity":1,"message":"338","line":3,"column":17,"nodeType":"327","messageId":"328","endLine":3,"endColumn":25},{"ruleId":"325","severity":1,"message":"339","line":7,"column":8,"nodeType":"327","messageId":"328","endLine":7,"endColumn":19},{"ruleId":"332","severity":1,"message":"333","line":33,"column":23,"nodeType":"334","messageId":"335","endLine":33,"endColumn":25},{"ruleId":"325","severity":1,"message":"340","line":28,"column":13,"nodeType":"327","messageId":"328","endLine":28,"endColumn":18},{"ruleId":"325","severity":1,"message":"341","line":5,"column":10,"nodeType":"327","messageId":"328","endLine":5,"endColumn":16},{"ruleId":"325","severity":1,"message":"342","line":6,"column":10,"nodeType":"327","messageId":"328","endLine":6,"endColumn":20},{"ruleId":"325","severity":1,"message":"343","line":8,"column":10,"nodeType":"327","messageId":"328","endLine":8,"endColumn":18},{"ruleId":"332","severity":1,"message":"333","line":40,"column":47,"nodeType":"334","messageId":"335","endLine":40,"endColumn":49},{"ruleId":"344","severity":1,"message":"345","line":53,"column":7,"nodeType":"346","endLine":53,"endColumn":72},{"ruleId":"344","severity":1,"message":"347","line":57,"column":9,"nodeType":"346","endLine":63,"endColumn":11},{"ruleId":"348","severity":1,"message":"349","line":97,"column":13,"nodeType":"346","endLine":97,"endColumn":72},{"ruleId":"348","severity":1,"message":"349","line":102,"column":13,"nodeType":"346","endLine":102,"endColumn":16},{"ruleId":"348","severity":1,"message":"349","line":115,"column":19,"nodeType":"346","endLine":116,"endColumn":88},{"ruleId":"321","replacedBy":"350"},{"ruleId":"323","replacedBy":"351"},{"ruleId":"348","severity":1,"message":"349","line":64,"column":7,"nodeType":"346","endLine":64,"endColumn":79},{"ruleId":"325","severity":1,"message":"352","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":14},{"ruleId":"325","severity":1,"message":"352","line":4,"column":10,"nodeType":"327","messageId":"328","endLine":4,"endColumn":14},{"ruleId":"348","severity":1,"message":"349","line":32,"column":7,"nodeType":"346","endLine":32,"endColumn":93},{"ruleId":"348","severity":1,"message":"349","line":46,"column":13,"nodeType":"346","endLine":47,"endColumn":33},{"ruleId":"353","severity":1,"message":"354","line":69,"column":100,"nodeType":"355","endLine":69,"endColumn":127},"no-native-reassign",["356"],"no-negated-in-lhs",["357"],"@typescript-eslint/no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'GET_ISAUTH' is defined but never used.",["356"],["357"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["356"],["357"],"'Fragment' is defined but never used.","'ListOfUsers' is defined but never used.","'data2' is assigned a value but never used.","'Tweets' is defined but never used.","'FeedTweets' is defined but never used.","'parseJwt' is defined but never used.","react/jsx-pascal-case","Imported JSX component Tweet_img must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Tweet_Info must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["356"],["357"],"'Link' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","no-global-assign","no-unsafe-negation"]